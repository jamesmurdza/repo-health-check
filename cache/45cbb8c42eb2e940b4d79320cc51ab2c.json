{"total_count": 17890, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/nodejs/node/issues/58218", "repository_url": "https://api.github.com/repos/nodejs/node", "labels_url": "https://api.github.com/repos/nodejs/node/issues/58218/labels{/name}", "comments_url": "https://api.github.com/repos/nodejs/node/issues/58218/comments", "events_url": "https://api.github.com/repos/nodejs/node/issues/58218/events", "html_url": "https://github.com/nodejs/node/issues/58218", "id": 3046280273, "node_id": "I_kwDOAZ7xs861koxR", "number": 58218, "title": "`deprecate` shows increased use of CPU", "user": {"login": "slagiewka", "id": 11974489, "node_id": "MDQ6VXNlcjExOTc0NDg5", "avatar_url": "https://avatars.githubusercontent.com/u/11974489?v=4", "gravatar_id": "", "url": "https://api.github.com/users/slagiewka", "html_url": "https://github.com/slagiewka", "followers_url": "https://api.github.com/users/slagiewka/followers", "following_url": "https://api.github.com/users/slagiewka/following{/other_user}", "gists_url": "https://api.github.com/users/slagiewka/gists{/gist_id}", "starred_url": "https://api.github.com/users/slagiewka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/slagiewka/subscriptions", "organizations_url": "https://api.github.com/users/slagiewka/orgs", "repos_url": "https://api.github.com/users/slagiewka/repos", "events_url": "https://api.github.com/users/slagiewka/events{/privacy}", "received_events_url": "https://api.github.com/users/slagiewka/received_events", "type": "User", "user_view_type": "public", "site_admin": false}, "labels": [{"id": 151728674, "node_id": "MDU6TGFiZWwxNTE3Mjg2NzQ=", "url": "https://api.github.com/repos/nodejs/node/labels/confirmed-bug", "name": "confirmed-bug", "color": "fc2929", "default": false, "description": "Issues with confirmed bugs."}, {"id": 155267446, "node_id": "MDU6TGFiZWwxNTUyNjc0NDY=", "url": "https://api.github.com/repos/nodejs/node/labels/util", "name": "util", "color": "d4c5f9", "default": false, "description": "Issues and PRs related to the built-in util module."}, {"id": 326905670, "node_id": "MDU6TGFiZWwzMjY5MDU2NzA=", "url": "https://api.github.com/repos/nodejs/node/labels/performance", "name": "performance", "color": "5319e7", "default": false, "description": "Issues and PRs related to the performance of Node.js."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2025-05-07T14:59:46Z", "updated_at": "2025-09-24T14:26:44Z", "closed_at": "2025-09-24T14:26:44Z", "author_association": "NONE", "type": null, "active_lock_reason": null, "sub_issues_summary": {"total": 0, "completed": 0, "percent_completed": 0}, "issue_dependencies_summary": {"blocked_by": 0, "total_blocked_by": 0, "blocking": 0, "total_blocking": 0}, "body": "### Version\n\nv24.0.0\n\n### Platform\n\n```text\nHappening in many environments I've tested:\nDocker: `Linux 1633ae2ed477 6.10.14-linuxkit #1 SMP Thu Mar 20 16:32:56 UTC 2025 aarch64 GNU/Linux`\nNative macOS: `Darwin host.local 24.3.0 Darwin Kernel Version 24.3.0: Thu Jan  2 20:24:16 PST 2025; root:xnu-11215.81.4~3/RELEASE_ARM64_T6000 arm64`\n```\n\n### Subsystem\n\n_No response_\n\n### What steps will reproduce the bug?\n\nA simple code with standard library only. Added some limiting to keep it running while inspecting. It might not be balanced for best performance and showing the major perf hit.\n\n```\nnode --inspect index.js\n```\n\n```js\nfor (let index = 0; index < 20_000; index++) {\n  const proms = [];\n  for (let index = 0; index < 100; index++) {\n    proms.push(\n      fetch(\"https://nodejs.org\", {\n        signal: AbortSignal.timeout(1000),\n      })\n        .then((res) => res.text())\n        .then(console.log)\n        .catch(console.log),\n    );\n  }\n\n  await Promise.all(proms);\n}\n```\n\n### How often does it reproduce? Is there a required condition?\n\n100% on node v24.\n\n### What is the expected behavior? Why is that the expected behavior?\n\nNo time spent on `deprecate` shows in performance tools.\n\n### What do you see instead?\n\nSignificant time spent on `deprecate` (real project shows higher use than the example).\n\n<img width=\"894\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/f65cc427-85ed-45d0-a4f8-3c83d73adaaf\" />\n\n### Additional information\n\nFWIW there are no deprecation warnings issued to the console output.\n\nI do not see this behaviour in v23.", "reactions": {"url": "https://api.github.com/repos/nodejs/node/issues/58218/reactions", "total_count": 2, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 2}, "timeline_url": "https://api.github.com/repos/nodejs/node/issues/58218/timeline", "performed_via_github_app": null, "state_reason": "completed", "score": 1.0}, {"url": "https://api.github.com/repos/nodejs/node/issues/59948", "repository_url": "https://api.github.com/repos/nodejs/node", "labels_url": "https://api.github.com/repos/nodejs/node/issues/59948/labels{/name}", "comments_url": "https://api.github.com/repos/nodejs/node/issues/59948/comments", "events_url": "https://api.github.com/repos/nodejs/node/issues/59948/events", "html_url": "https://github.com/nodejs/node/issues/59948", "id": 3437315960, "node_id": "I_kwDOAZ7xs87M4Ud4", "number": 59948, "title": "flaky: test-watch-mode-inspect", "user": {"login": "hqzing", "id": 22612509, "node_id": "MDQ6VXNlcjIyNjEyNTA5", "avatar_url": "https://avatars.githubusercontent.com/u/22612509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hqzing", "html_url": "https://github.com/hqzing", "followers_url": "https://api.github.com/users/hqzing/followers", "following_url": "https://api.github.com/users/hqzing/following{/other_user}", "gists_url": "https://api.github.com/users/hqzing/gists{/gist_id}", "starred_url": "https://api.github.com/users/hqzing/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hqzing/subscriptions", "organizations_url": "https://api.github.com/users/hqzing/orgs", "repos_url": "https://api.github.com/users/hqzing/repos", "events_url": "https://api.github.com/users/hqzing/events{/privacy}", "received_events_url": "https://api.github.com/users/hqzing/received_events", "type": "User", "user_view_type": "public", "site_admin": false}, "labels": [{"id": 637807400, "node_id": "MDU6TGFiZWw2Mzc4MDc0MDA=", "url": "https://api.github.com/repos/nodejs/node/labels/flaky-test", "name": "flaky-test", "color": "ffff00", "default": false, "description": "Issues and PRs related to the tests with unstable failures on the CI."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2025-09-20T17:01:09Z", "updated_at": "2025-09-24T01:27:33Z", "closed_at": "2025-09-24T01:27:33Z", "author_association": "CONTRIBUTOR", "type": null, "active_lock_reason": null, "sub_issues_summary": {"total": 0, "completed": 0, "percent_completed": 0}, "issue_dependencies_summary": {"blocked_by": 0, "total_blocked_by": 0, "blocking": 0, "total_blocking": 0}, "body": "### Test\n\ntest-watch-mode-inspect\n\n### Platform\n\nLinux x64\n\n### Console output\n\n```console\n---\nduration_ms: 120077.758\nexitcode: -15\nseverity: fail\nstack: |-\n  timeout\n  [test] Connecting to a child Node process\n  [test] Testing /json/list\n  [err] Debugger listening on ws://127.0.0.1:44449/b9db0371-042d-47fe-a42d-5de0986df171\n  [err] For help, see: https://nodejs.org/en/docs/inspector\n  [err]\n  [err] Debugger attached.\n  [err]\n  [out] safe to debug now\n  [out]\n  [test] Connecting to a child Node process\n  [test] Testing /json/list\n  [err] Debugger ending on ws://127.0.0.1:44449/b9db0371-042d-47fe-a42d-5de0986df171\n  [err] For help, see: https://nodejs.org/en/docs/inspector\n  [err]\n...\n```\n\n### Build links\n\n- https://ci.nodejs.org/job/node-test-pull-request/69224/\n\n### Additional information\n\n_No response_", "reactions": {"url": "https://api.github.com/repos/nodejs/node/issues/59948/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/nodejs/node/issues/59948/timeline", "performed_via_github_app": null, "state_reason": "duplicate", "score": 1.0}, {"url": "https://api.github.com/repos/nodejs/node/issues/59852", "repository_url": "https://api.github.com/repos/nodejs/node", "labels_url": "https://api.github.com/repos/nodejs/node/issues/59852/labels{/name}", "comments_url": "https://api.github.com/repos/nodejs/node/issues/59852/comments", "events_url": "https://api.github.com/repos/nodejs/node/issues/59852/events", "html_url": "https://github.com/nodejs/node/issues/59852", "id": 3405873463, "node_id": "I_kwDOAZ7xs87LAYE3", "number": 59852, "title": "DOMException message not printed in node test runner", "user": {"login": "phaux", "id": 1270987, "node_id": "MDQ6VXNlcjEyNzA5ODc=", "avatar_url": "https://avatars.githubusercontent.com/u/1270987?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phaux", "html_url": "https://github.com/phaux", "followers_url": "https://api.github.com/users/phaux/followers", "following_url": "https://api.github.com/users/phaux/following{/other_user}", "gists_url": "https://api.github.com/users/phaux/gists{/gist_id}", "starred_url": "https://api.github.com/users/phaux/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phaux/subscriptions", "organizations_url": "https://api.github.com/users/phaux/orgs", "repos_url": "https://api.github.com/users/phaux/repos", "events_url": "https://api.github.com/users/phaux/events{/privacy}", "received_events_url": "https://api.github.com/users/phaux/received_events", "type": "User", "user_view_type": "public", "site_admin": false}, "labels": [{"id": 6133517765, "node_id": "LA_kwDOAZ7xs88AAAABbZYNxQ", "url": "https://api.github.com/repos/nodejs/node/labels/web-standards", "name": "web-standards", "color": "3522A8", "default": false, "description": "Issues and PRs related to Web APIs"}, {"id": 6686026770, "node_id": "LA_kwDOAZ7xs88AAAABjoSsEg", "url": "https://api.github.com/repos/nodejs/node/labels/v22.x", "name": "v22.x", "color": "E99695", "default": false, "description": "Issues that can be reproduced on v22.x or PRs targeting the v22.x-staging branch."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2025-09-11T10:23:23Z", "updated_at": "2025-09-23T09:17:28Z", "closed_at": "2025-09-23T09:17:28Z", "author_association": "NONE", "type": null, "active_lock_reason": null, "sub_issues_summary": {"total": 0, "completed": 0, "percent_completed": 0}, "issue_dependencies_summary": {"blocked_by": 0, "total_blocked_by": 0, "blocking": 0, "total_blocking": 0}, "body": "### Version\n\n22.18.0\n\n### Platform\n\n```text\nLinux 6.16.3-200.fc42.x86_64 #1 SMP PREEMPT_DYNAMIC Sat Aug 23 17:02:17 UTC 2025 x86_64 GNU/Linux\n```\n\n### Subsystem\n\n_No response_\n\n### What steps will reproduce the bug?\n\n```js\nimport { test } from \"node:test\"\n\ntest(\"test\", () => {\n  throw new DOMException(\"test error msg\")\n})\n```\n\n```sh\nnode --test\n```\n\n### How often does it reproduce? Is there a required condition?\n\nalways\n\n### What is the expected behavior? Why is that the expected behavior?\n\nSame as if `Error` was used:\n\n```\n  Error: test error msg\n      at TestContext.<anonymous> ...\n```\n\n### What do you see instead?\n\n```\n  {}\n```\n\n### Additional information\n\n_No response_", "reactions": {"url": "https://api.github.com/repos/nodejs/node/issues/59852/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/nodejs/node/issues/59852/timeline", "performed_via_github_app": null, "state_reason": "completed", "score": 1.0}, {"url": "https://api.github.com/repos/nodejs/node/issues/56668", "repository_url": "https://api.github.com/repos/nodejs/node", "labels_url": "https://api.github.com/repos/nodejs/node/issues/56668/labels{/name}", "comments_url": "https://api.github.com/repos/nodejs/node/issues/56668/comments", "events_url": "https://api.github.com/repos/nodejs/node/issues/56668/events", "html_url": "https://github.com/nodejs/node/issues/56668", "id": 2799795613, "node_id": "I_kwDOAZ7xs86m4X2d", "number": 56668, "title": "ERR_UNHANDLED_REJECTION", "user": {"login": "TonyFTannous-Byd", "id": 169278805, "node_id": "U_kgDOChb9VQ", "avatar_url": "https://avatars.githubusercontent.com/u/169278805?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TonyFTannous-Byd", "html_url": "https://github.com/TonyFTannous-Byd", "followers_url": "https://api.github.com/users/TonyFTannous-Byd/followers", "following_url": "https://api.github.com/users/TonyFTannous-Byd/following{/other_user}", "gists_url": "https://api.github.com/users/TonyFTannous-Byd/gists{/gist_id}", "starred_url": "https://api.github.com/users/TonyFTannous-Byd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TonyFTannous-Byd/subscriptions", "organizations_url": "https://api.github.com/users/TonyFTannous-Byd/orgs", "repos_url": "https://api.github.com/users/TonyFTannous-Byd/repos", "events_url": "https://api.github.com/users/TonyFTannous-Byd/events{/privacy}", "received_events_url": "https://api.github.com/users/TonyFTannous-Byd/received_events", "type": "User", "user_view_type": "public", "site_admin": false}, "labels": [{"id": 592511284, "node_id": "MDU6TGFiZWw1OTI1MTEyODQ=", "url": "https://api.github.com/repos/nodejs/node/labels/wrong%20repo", "name": "wrong repo", "color": "6a4636", "default": false, "description": "Issues that should be opened in another repository."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2025-01-20T16:28:17Z", "updated_at": "2025-09-23T01:57:37Z", "closed_at": "2025-01-20T17:46:34Z", "author_association": "NONE", "type": null, "active_lock_reason": null, "sub_issues_summary": {"total": 0, "completed": 0, "percent_completed": 0}, "issue_dependencies_summary": {"blocked_by": 0, "total_blocked_by": 0, "blocking": 0, "total_blocking": 0}, "body": "### Version\n\nv20.12.2\n\n### Platform\n\n```text\nIOS, react native\n```\n\n### Subsystem\n\n_No response_\n\n### What steps will reproduce the bug?\n\nerror\nnode:internal/process/promises:392\n      new UnhandledPromiseRejection(reason);\n      ^\n\nUnhandledPromiseRejection: This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). The promise rejected with the reason \"Error: Failed to build ios project. \"xcodebuild\" exited with error code '65'. To debug build logs further, consider building your app with Xcode.app, by opening 'IDPMobile.xcworkspace'.\".\n    at throwUnhandledRejectionsMode (node:internal/process/promises:392:7)\n    at processPromiseRejections (node:internal/process/promises:475:17)\n    at process.processTicksAndRejections (node:internal/process/task_queues:106:32) {\n  code: 'ERR_UNHANDLED_REJECTION'\n}\n\n### How often does it reproduce? Is there a required condition?\n\nif i run my react native app from xcode, it work properly. but using CLI cmd npx react-native run-ios --simulator='iPhone 15 Pro'\n\n### What is the expected behavior? Why is that the expected behavior?\n\nit should run without any error\n\n### What do you see instead?\n\nif i run my react native app from xcode, it work properly. but using CLI cmd npx react-native run-ios --simulator='iPhone 15 Pro'\n\n### Additional information\n\n_No response_", "reactions": {"url": "https://api.github.com/repos/nodejs/node/issues/56668/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/nodejs/node/issues/56668/timeline", "performed_via_github_app": null, "state_reason": "not_planned", "score": 1.0}, {"url": "https://api.github.com/repos/nodejs/node/issues/59975", "repository_url": "https://api.github.com/repos/nodejs/node", "labels_url": "https://api.github.com/repos/nodejs/node/issues/59975/labels{/name}", "comments_url": "https://api.github.com/repos/nodejs/node/issues/59975/comments", "events_url": "https://api.github.com/repos/nodejs/node/issues/59975/events", "html_url": "https://github.com/nodejs/node/issues/59975", "id": 3442069899, "node_id": "I_kwDOAZ7xs87NKdGL", "number": 59975, "title": "[spam]", "user": {"login": "dannino555-droid", "id": 225850752, "node_id": "U_kgDODXY1gA", "avatar_url": "https://avatars.githubusercontent.com/u/225850752?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dannino555-droid", "html_url": "https://github.com/dannino555-droid", "followers_url": "https://api.github.com/users/dannino555-droid/followers", "following_url": "https://api.github.com/users/dannino555-droid/following{/other_user}", "gists_url": "https://api.github.com/users/dannino555-droid/gists{/gist_id}", "starred_url": "https://api.github.com/users/dannino555-droid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dannino555-droid/subscriptions", "organizations_url": "https://api.github.com/users/dannino555-droid/orgs", "repos_url": "https://api.github.com/users/dannino555-droid/repos", "events_url": "https://api.github.com/users/dannino555-droid/events{/privacy}", "received_events_url": "https://api.github.com/users/dannino555-droid/received_events", "type": "User", "user_view_type": "public", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2025-09-22T17:52:38Z", "updated_at": "2025-09-22T18:59:15Z", "closed_at": "2025-09-22T18:26:20Z", "author_association": "NONE", "type": null, "active_lock_reason": null, "sub_issues_summary": {"total": 0, "completed": 0, "percent_completed": 0}, "issue_dependencies_summary": {"blocked_by": 0, "total_blocked_by": 0, "blocking": 0, "total_blocking": 0}, "body": null, "reactions": {"url": "https://api.github.com/repos/nodejs/node/issues/59975/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/nodejs/node/issues/59975/timeline", "performed_via_github_app": null, "state_reason": "completed", "score": 1.0}, {"url": "https://api.github.com/repos/nodejs/node/issues/57581", "repository_url": "https://api.github.com/repos/nodejs/node", "labels_url": "https://api.github.com/repos/nodejs/node/issues/57581/labels{/name}", "comments_url": "https://api.github.com/repos/nodejs/node/issues/57581/comments", "events_url": "https://api.github.com/repos/nodejs/node/issues/57581/events", "html_url": "https://github.com/nodejs/node/issues/57581", "id": 2938798005, "node_id": "I_kwDOAZ7xs86vKn-1", "number": 57581, "title": "Using `MessageChannel` pulls in `undici` inappropriately", "user": {"login": "webstrand", "id": 373938, "node_id": "MDQ6VXNlcjM3MzkzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/373938?v=4", "gravatar_id": "", "url": "https://api.github.com/users/webstrand", "html_url": "https://github.com/webstrand", "followers_url": "https://api.github.com/users/webstrand/followers", "following_url": "https://api.github.com/users/webstrand/following{/other_user}", "gists_url": "https://api.github.com/users/webstrand/gists{/gist_id}", "starred_url": "https://api.github.com/users/webstrand/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/webstrand/subscriptions", "organizations_url": "https://api.github.com/users/webstrand/orgs", "repos_url": "https://api.github.com/users/webstrand/repos", "events_url": "https://api.github.com/users/webstrand/events{/privacy}", "received_events_url": "https://api.github.com/users/webstrand/received_events", "type": "User", "user_view_type": "public", "site_admin": false}, "labels": [{"id": 207445406, "node_id": "MDU6TGFiZWwyMDc0NDU0MDY=", "url": "https://api.github.com/repos/nodejs/node/labels/feature%20request", "name": "feature request", "color": "0D7BDE", "default": false, "description": "Issues that request new features to be added to Node.js."}, {"id": 3774588687, "node_id": "LA_kwDOAZ7xs87g-6cP", "url": "https://api.github.com/repos/nodejs/node/labels/stale", "name": "stale", "color": "f9d0c4", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2025-03-21T15:45:00Z", "updated_at": "2025-09-22T15:16:59Z", "closed_at": "2025-09-22T15:16:38Z", "author_association": "NONE", "type": null, "active_lock_reason": null, "sub_issues_summary": {"total": 0, "completed": 0, "percent_completed": 0}, "issue_dependencies_summary": {"blocked_by": 0, "total_blocked_by": 0, "blocking": 0, "total_blocking": 0}, "body": "### Version\n\nv22.13.1\n\n### Platform\n\n```text\nLinux localhost 6.13.1-1-default #1 SMP PREEMPT_DYNAMIC Mon Feb  3 05:33:25 UTC 2025 (1918d13) x86_64 x86_64 x86_64 GNU/Linux\n```\n\n### Subsystem\n\nworker_threads\n\n### What steps will reproduce the bug?\n\nRun this command:\n```bash\nnode --jitless -e 'const { port1, port2 } = new MessageChannel(); port1.addEventListener(\"message\", () => {});  port2.postMessage(null);'\n```\n\nor run this script with `--jitless`\n\n```js\nconst { port1, port2 } = new MessageChannel();\nport1.addEventListener(\"message\", () => {});\nport2.postMessage(null);\n```\n\n\n### How often does it reproduce? Is there a required condition?\n\nEvery time\n\n### What is the expected behavior? Why is that the expected behavior?\n\nNo exception should be thrown, `undici` should not be loaded when fetch is not needed.\n\n### What do you see instead?\n\n```bash\n> node --jitless -e 'const { port1, port2 } = new MessageChannel(); port1.addEventListener(\"message\", () => {});  port2.postMessage(null);'\nWarning: disabling flag --expose_wasm due to conflicting flags\nnode:internal/deps/undici/undici:5827\n        mod = await WebAssembly.compile(llhttpWasmData || require_llhttp_wasm());\n        ^\n\nReferenceError: WebAssembly is not defined\n    at lazyllhttp (node:internal/deps/undici/undici:5827:9)\n    at lib/dispatcher/client-h1.js (node:internal/deps/undici/undici:5873:25)\n    at __require (node:internal/deps/undici/undici:6:50)\n    at lib/dispatcher/client.js (node:internal/deps/undici/undici:7607:21)\n    at __require (node:internal/deps/undici/undici:6:50)\n    at lib/dispatcher/pool.js (node:internal/deps/undici/undici:8068:18)\n    at __require (node:internal/deps/undici/undici:6:50)\n    at lib/dispatcher/agent.js (node:internal/deps/undici/undici:8151:16)\n    at __require (node:internal/deps/undici/undici:6:50)\n    at lib/global.js (node:internal/deps/undici/undici:8251:17)\n\nNode.js v22.13.1\n```\n\n### Additional information\n\nI believe this is due to constructing the `MessageEvent`, which appears to come from `undici`:\n\n<https://github.com/nodejs/node/blob/4006d5e819697f51ef8cdb5b33d4d0b69139b411/lib/internal/worker/io.js#L98>", "reactions": {"url": "https://api.github.com/repos/nodejs/node/issues/57581/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/nodejs/node/issues/57581/timeline", "performed_via_github_app": null, "state_reason": "completed", "score": 1.0}, {"url": "https://api.github.com/repos/nodejs/node/issues/37840", "repository_url": "https://api.github.com/repos/nodejs/node", "labels_url": "https://api.github.com/repos/nodejs/node/issues/37840/labels{/name}", "comments_url": "https://api.github.com/repos/nodejs/node/issues/37840/comments", "events_url": "https://api.github.com/repos/nodejs/node/issues/37840/events", "html_url": "https://github.com/nodejs/node/issues/37840", "id": 836839848, "node_id": "MDU6SXNzdWU4MzY4Mzk4NDg=", "number": 37840, "title": "investigate flaky test-crypto-secure-heap on LinuxONE", "user": {"login": "Trott", "id": 718899, "node_id": "MDQ6VXNlcjcxODg5OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/718899?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Trott", "html_url": "https://github.com/Trott", "followers_url": "https://api.github.com/users/Trott/followers", "following_url": "https://api.github.com/users/Trott/following{/other_user}", "gists_url": "https://api.github.com/users/Trott/gists{/gist_id}", "starred_url": "https://api.github.com/users/Trott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Trott/subscriptions", "organizations_url": "https://api.github.com/users/Trott/orgs", "repos_url": "https://api.github.com/users/Trott/repos", "events_url": "https://api.github.com/users/Trott/events{/privacy}", "received_events_url": "https://api.github.com/users/Trott/received_events", "type": "User", "user_view_type": "public", "site_admin": false}, "labels": [{"id": 155267357, "node_id": "MDU6TGFiZWwxNTUyNjczNTc=", "url": "https://api.github.com/repos/nodejs/node/labels/crypto", "name": "crypto", "color": "009800", "default": false, "description": "Issues and PRs related to the crypto subsystem."}, {"id": 637807400, "node_id": "MDU6TGFiZWw2Mzc4MDc0MDA=", "url": "https://api.github.com/repos/nodejs/node/labels/flaky-test", "name": "flaky-test", "color": "ffff00", "default": false, "description": "Issues and PRs related to the tests with unstable failures on the CI."}, {"id": 1395943359, "node_id": "MDU6TGFiZWwxMzk1OTQzMzU5", "url": "https://api.github.com/repos/nodejs/node/labels/linux", "name": "linux", "color": "9944dd", "default": false, "description": "Issues and PRs related to the Linux platform."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2021-03-20T15:39:51Z", "updated_at": "2025-09-22T12:21:53Z", "closed_at": "2025-09-22T12:21:52Z", "author_association": "MEMBER", "type": null, "active_lock_reason": null, "sub_issues_summary": {"total": 0, "completed": 0, "percent_completed": 0}, "issue_dependencies_summary": {"blocked_by": 0, "total_blocked_by": 0, "blocking": 0, "total_blocking": 0}, "body": "<!--\r\nThank you for reporting a flaky test.\r\n\r\nFlaky tests are tests that fail occasionally in the Node.js CI, but not\r\nconsistently enough to block PRs from landing, or that are failing in CI jobs or\r\ntest modes that are not run for every PR.\r\n\r\nPlease fill in as much of the template below as you're able.\r\n\r\nTest: The test that is flaky - e.g. `test-fs-stat-bigint`\r\nPlatform: The platform the test is flaky on - e.g. `macos` or `linux`\r\nConsole Output: A pasted console output from a failed CI job showing the whole\r\nfailure of the test\r\nBuild Links: Links to builds affected by the flaky test\r\n\r\nIf any investigation has been done, please include any information found, such\r\nas how consistently the test fails, whether the failure could be reproduced\r\nlocally, when the test started failing, or anything else you think is relevant.\r\n-->\r\n\r\n* **Test**: test-crypto-secure-heap\r\n* **Platform**: LinuxONE rhel7-s390x\r\n* **Console Output:**\r\n```\r\nnot ok 373 parallel/test-crypto-secure-heap\r\n  ---\r\n  duration_ms: 0.173\r\n  severity: fail\r\n  exitcode: 1\r\n  stack: |-\r\n    node:assert:936\r\n        throw err;\r\n        ^\r\n    \r\n    AssertionError [ERR_ASSERTION]: The input did not match the regular expression /--secure-heap must be a power of 2/. Input:\r\n    \r\n    ''\r\n    \r\n        at ChildProcess.<anonymous> (/home/iojs/build/workspace/node-test-commit-linuxone/nodes/rhel7-s390x/test/parallel/test-crypto-secure-heap.js:71:12)\r\n        at ChildProcess.<anonymous> (/home/iojs/build/workspace/node-test-commit-linuxone/nodes/rhel7-s390x/test/common/index.js:381:15)\r\n        at ChildProcess.emit (node:events:369:20)\r\n        at Process.ChildProcess._handle.onexit (node:internal/child_process:290:12) {\r\n      generatedMessage: true,\r\n      code: 'ERR_ASSERTION',\r\n      actual: '',\r\n      expected: /--secure-heap must be a power of 2/,\r\n      operator: 'match'\r\n    }\r\n  ...\r\n```\r\n* **Build Links**: https://ci.nodejs.org/job/node-test-commit-linuxone/26230/nodes=rhel7-s390x/consoleText\r\n", "reactions": {"url": "https://api.github.com/repos/nodejs/node/issues/37840/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/nodejs/node/issues/37840/timeline", "performed_via_github_app": null, "state_reason": "not_planned", "score": 1.0}, {"url": "https://api.github.com/repos/nodejs/node/issues/59541", "repository_url": "https://api.github.com/repos/nodejs/node", "labels_url": "https://api.github.com/repos/nodejs/node/issues/59541/labels{/name}", "comments_url": "https://api.github.com/repos/nodejs/node/issues/59541/comments", "events_url": "https://api.github.com/repos/nodejs/node/issues/59541/events", "html_url": "https://github.com/nodejs/node/issues/59541", "id": 3335115571, "node_id": "I_kwDOAZ7xs87GydMz", "number": 59541, "title": "SourceTextModule w/ microtaskMode \"afterEvaluate\" breaks program execution flow", "user": {"login": "ericrannaud", "id": 925816, "node_id": "MDQ6VXNlcjkyNTgxNg==", "avatar_url": "https://avatars.githubusercontent.com/u/925816?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ericrannaud", "html_url": "https://github.com/ericrannaud", "followers_url": "https://api.github.com/users/ericrannaud/followers", "following_url": "https://api.github.com/users/ericrannaud/following{/other_user}", "gists_url": "https://api.github.com/users/ericrannaud/gists{/gist_id}", "starred_url": "https://api.github.com/users/ericrannaud/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ericrannaud/subscriptions", "organizations_url": "https://api.github.com/users/ericrannaud/orgs", "repos_url": "https://api.github.com/users/ericrannaud/repos", "events_url": "https://api.github.com/users/ericrannaud/events{/privacy}", "received_events_url": "https://api.github.com/users/ericrannaud/received_events", "type": "User", "user_view_type": "public", "site_admin": false}, "labels": [{"id": 155436007, "node_id": "MDU6TGFiZWwxNTU0MzYwMDc=", "url": "https://api.github.com/repos/nodejs/node/labels/vm", "name": "vm", "color": "bfdadc", "default": false, "description": "Issues and PRs related to the vm subsystem."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2025-08-19T17:20:41Z", "updated_at": "2025-09-21T13:04:39Z", "closed_at": "2025-09-21T13:04:39Z", "author_association": "CONTRIBUTOR", "type": null, "active_lock_reason": null, "sub_issues_summary": {"total": 0, "completed": 0, "percent_completed": 0}, "issue_dependencies_summary": {"blocked_by": 0, "total_blocked_by": 0, "blocking": 0, "total_blocking": 0}, "body": "### Version\n\nv24.5.0\n\n### Platform\n\n```text\nLinux hostname 6.10.6-arch1-1 #1 SMP PREEMPT_DYNAMIC Mon, 19 Aug 2024 17:02:39 +0000 x86_64 GNU/Linux\n```\n\n### Subsystem\n\nvm\n\n### What steps will reproduce the bug?\n\n```\nimport * as vm from \"node:vm\";\n\nconst context = vm.createContext({}, {\n  microtaskMode: \"afterEvaluate\",\n});\n\nconst m = new vm.SourceTextModule(\n  \"\",\n  {context},\n);\n\nawait m.link(() => null);\nawait m.evaluate();\n\nconsole.log(\"This is never printed, but the node process terminates.\");\n```\n\n### How often does it reproduce? Is there a required condition?\n\nRepeats every time.\n\n### What is the expected behavior? Why is that the expected behavior?\n\nWith this module source code (the empty string in this example, but it also happens with non-trivial code in the module), the program behavior should be the same whether the microtaskMode is set to \"afterEvaluate\" or left unspecified. The console.log() statement should be printed.\n\n### What do you see instead?\n\nNode terminates without executing the console.log() statement. Node reports:\n\n```\nWarning: Detected unsettled top-level await at file:///tmp/test2.js:13\nawait m.evaluate();\n^\n```\n\nIf you comment out the line setting microtaskMode, the console.log() statement is executed as expected.\n\n### Additional information\n\n_No response_", "reactions": {"url": "https://api.github.com/repos/nodejs/node/issues/59541/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/nodejs/node/issues/59541/timeline", "performed_via_github_app": null, "state_reason": "completed", "score": 1.0}, {"url": "https://api.github.com/repos/nodejs/node/issues/59949", "repository_url": "https://api.github.com/repos/nodejs/node", "labels_url": "https://api.github.com/repos/nodejs/node/issues/59949/labels{/name}", "comments_url": "https://api.github.com/repos/nodejs/node/issues/59949/comments", "events_url": "https://api.github.com/repos/nodejs/node/issues/59949/events", "html_url": "https://github.com/nodejs/node/issues/59949", "id": 3437320080, "node_id": "I_kwDOAZ7xs87M4VeQ", "number": 59949, "title": "flaky: test-performance-eventloopdelay", "user": {"login": "hqzing", "id": 22612509, "node_id": "MDQ6VXNlcjIyNjEyNTA5", "avatar_url": "https://avatars.githubusercontent.com/u/22612509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hqzing", "html_url": "https://github.com/hqzing", "followers_url": "https://api.github.com/users/hqzing/followers", "following_url": "https://api.github.com/users/hqzing/following{/other_user}", "gists_url": "https://api.github.com/users/hqzing/gists{/gist_id}", "starred_url": "https://api.github.com/users/hqzing/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hqzing/subscriptions", "organizations_url": "https://api.github.com/users/hqzing/orgs", "repos_url": "https://api.github.com/users/hqzing/repos", "events_url": "https://api.github.com/users/hqzing/events{/privacy}", "received_events_url": "https://api.github.com/users/hqzing/received_events", "type": "User", "user_view_type": "public", "site_admin": false}, "labels": [{"id": 151728675, "node_id": "MDU6TGFiZWwxNTE3Mjg2NzU=", "url": "https://api.github.com/repos/nodejs/node/labels/duplicate", "name": "duplicate", "color": "ededed", "default": true, "description": "Issues and PRs that are duplicates of other issues or PRs."}, {"id": 637807400, "node_id": "MDU6TGFiZWw2Mzc4MDc0MDA=", "url": "https://api.github.com/repos/nodejs/node/labels/flaky-test", "name": "flaky-test", "color": "ffff00", "default": false, "description": "Issues and PRs related to the tests with unstable failures on the CI."}, {"id": 1395943359, "node_id": "MDU6TGFiZWwxMzk1OTQzMzU5", "url": "https://api.github.com/repos/nodejs/node/labels/linux", "name": "linux", "color": "9944dd", "default": false, "description": "Issues and PRs related to the Linux platform."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2025-09-20T17:06:51Z", "updated_at": "2025-09-20T21:18:15Z", "closed_at": "2025-09-20T21:18:15Z", "author_association": "CONTRIBUTOR", "type": null, "active_lock_reason": null, "sub_issues_summary": {"total": 0, "completed": 0, "percent_completed": 0}, "issue_dependencies_summary": {"blocked_by": 0, "total_blocked_by": 0, "blocking": 0, "total_blocking": 0}, "body": "### Test\n\ntest-performance-eventloopdelay\n\n### Platform\n\nLinux x64\n\n### Console output\n\n```console\n---\nduration_ms: 7336.121\nexitcode: 1\nseverity: fail\nstack: |-\n  node:internal/assert/utils:77\n      throw err;\n      ^\n\n  AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:\n\n    assert(histogram.min > 0)\n\n      at Timeout.spinAWhile [as _onTimeout] (/home/iojs/build/workspace/node-test-commit-linux-containered/test/sequential/test-performance-eventloopdelay.js:70:7)\n      at listOnTimeout (node:internal/timers:608:17)\n      at process.processTimers (node:internal/timers:543:7) {\n    generatedMessage: true,\n    code: 'ERR_ASSERTION',\n    actual: false,\n    expected: true,\n    operator: '==',\n    diff: 'simple'\n  }\n\n  Node.js v25.0.0-pre\n...\n```\n\n### Build links\n\n- https://ci.nodejs.org/job/node-test-pull-request/69224/\n\n### Additional information\n\n_No response_", "reactions": {"url": "https://api.github.com/repos/nodejs/node/issues/59949/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/nodejs/node/issues/59949/timeline", "performed_via_github_app": null, "state_reason": "duplicate", "score": 1.0}, {"url": "https://api.github.com/repos/nodejs/node/issues/59922", "repository_url": "https://api.github.com/repos/nodejs/node", "labels_url": "https://api.github.com/repos/nodejs/node/issues/59922/labels{/name}", "comments_url": "https://api.github.com/repos/nodejs/node/issues/59922/comments", "events_url": "https://api.github.com/repos/nodejs/node/issues/59922/events", "html_url": "https://github.com/nodejs/node/issues/59922", "id": 3428819429, "node_id": "I_kwDOAZ7xs87MX6Hl", "number": 59922, "title": "The http2 server throws TypeError `server.shouldUpgradeCallback` is not a function", "user": {"login": "ShenHongFei", "id": 15074472, "node_id": "MDQ6VXNlcjE1MDc0NDcy", "avatar_url": "https://avatars.githubusercontent.com/u/15074472?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ShenHongFei", "html_url": "https://github.com/ShenHongFei", "followers_url": "https://api.github.com/users/ShenHongFei/followers", "following_url": "https://api.github.com/users/ShenHongFei/following{/other_user}", "gists_url": "https://api.github.com/users/ShenHongFei/gists{/gist_id}", "starred_url": "https://api.github.com/users/ShenHongFei/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ShenHongFei/subscriptions", "organizations_url": "https://api.github.com/users/ShenHongFei/orgs", "repos_url": "https://api.github.com/users/ShenHongFei/repos", "events_url": "https://api.github.com/users/ShenHongFei/events{/privacy}", "received_events_url": "https://api.github.com/users/ShenHongFei/received_events", "type": "User", "user_view_type": "public", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2025-09-18T06:17:48Z", "updated_at": "2025-09-20T18:18:24Z", "closed_at": "2025-09-20T18:18:24Z", "author_association": "CONTRIBUTOR", "type": null, "active_lock_reason": null, "sub_issues_summary": {"total": 0, "completed": 0, "percent_completed": 0}, "issue_dependencies_summary": {"blocked_by": 0, "total_blocked_by": 0, "blocking": 0, "total_blocking": 0}, "body": "### Version\n\norigin/main branch\n\n### Platform\n\n```text\nwindows \"$([Environment]::OSVersion.VersionString) $(('x86', 'x64')[[Environment]::Is64BitOperatingSystem])\"\n```\n\n### Subsystem\n\nhttp\n\n### What steps will reproduce the bug?\n\n```js\nimport { createSecureServer } from 'http2'\n\nlet server = createSecureServer(...)\n\nserver.on('upgrade', () => { ... })\n\nserver.listen(443)\n\n// Create a websocket connection to port 443\n```\n\n\n\n\n\n### How often does it reproduce? Is there a required condition?\n\nMust appear\n\n### What is the expected behavior? Why is that the expected behavior?\n\nWebsocket connection is normal\n\n### What do you see instead?\n\n<img width=\"3840\" height=\"2160\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/0536dc2c-46b1-4535-bcb6-445e3ba03105\" />\n\n### Additional information\n\nrelates to: https://github.com/nodejs/node/pull/59824\n\nCan you (@pimterry) add relevant test cases for this PR? http server, http2 server and test websocket connection\n\n", "reactions": {"url": "https://api.github.com/repos/nodejs/node/issues/59922/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/nodejs/node/issues/59922/timeline", "performed_via_github_app": null, "state_reason": "completed", "score": 1.0}, {"url": "https://api.github.com/repos/nodejs/node/issues/57054", "repository_url": "https://api.github.com/repos/nodejs/node", "labels_url": "https://api.github.com/repos/nodejs/node/issues/57054/labels{/name}", "comments_url": "https://api.github.com/repos/nodejs/node/issues/57054/comments", "events_url": "https://api.github.com/repos/nodejs/node/issues/57054/events", "html_url": "https://github.com/nodejs/node/issues/57054", "id": 2854877459, "node_id": "I_kwDOAZ7xs86qKfkT", "number": 57054, "title": "Improve HTTP server 'upgrade' event generation logic", "user": {"login": "mykola-mokhnach", "id": 7767781, "node_id": "MDQ6VXNlcjc3Njc3ODE=", "avatar_url": "https://avatars.githubusercontent.com/u/7767781?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mykola-mokhnach", "html_url": "https://github.com/mykola-mokhnach", "followers_url": "https://api.github.com/users/mykola-mokhnach/followers", "following_url": "https://api.github.com/users/mykola-mokhnach/following{/other_user}", "gists_url": "https://api.github.com/users/mykola-mokhnach/gists{/gist_id}", "starred_url": "https://api.github.com/users/mykola-mokhnach/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mykola-mokhnach/subscriptions", "organizations_url": "https://api.github.com/users/mykola-mokhnach/orgs", "repos_url": "https://api.github.com/users/mykola-mokhnach/repos", "events_url": "https://api.github.com/users/mykola-mokhnach/events{/privacy}", "received_events_url": "https://api.github.com/users/mykola-mokhnach/received_events", "type": "User", "user_view_type": "public", "site_admin": false}, "labels": [{"id": 207445406, "node_id": "MDU6TGFiZWwyMDc0NDU0MDY=", "url": "https://api.github.com/repos/nodejs/node/labels/feature%20request", "name": "feature request", "color": "0D7BDE", "default": false, "description": "Issues that request new features to be added to Node.js."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2025-02-14T23:29:38Z", "updated_at": "2025-09-19T13:07:17Z", "closed_at": "2025-09-17T15:14:02Z", "author_association": "NONE", "type": null, "active_lock_reason": null, "sub_issues_summary": {"total": 0, "completed": 0, "percent_completed": 0}, "issue_dependencies_summary": {"blocked_by": 0, "total_blocked_by": 0, "blocking": 0, "total_blocking": 0}, "body": "### What is the problem this feature will solve?\n\nThere is an interesting bug/limitation we've stumbled upon recently in the node.js's http server implementation.\n\nWe had the 'upgrade' event listener defined in our code to properly map web sockets, although this lead to an issue with HTTP/2 h2c upgrade requests.\nBasically, the current [logic](https://github.com/nodejs/node/blob/f4cd4d97497757cdbc44c27a511e16e9d2b22367/lib/_http_server.js#L944) to emit the 'upgrade' event only considers the presence of the `Upgrade` header for a particular request without verifying other values. Such approach causes the event to be also emitted for HTTP/2 upgrade requests, which have similar syntax to websocket upgrades, just the value of the `Upgrade` header differs. \nIn our case the presence of the `upgrade` event listener was always causing h2c upgrade requests to be unexpectedly rejected, while the expected behaviour would be to just downgrade the connection to HTTP/1.1.\nA workaround to that was to remove the `upgrade` listener and add a http middleware instead, although this creates another bug where the [server.requestTimeout](https://nodejs.org/api/http.html#serverrequesttimeout) is applied to web sockets created by such middleware. After the timeout is fired websocket connection is killed forcefully and there is no way to customize this behaviour.\n\nSee the issue https://github.com/appium/appium/issues/20760 for more details and code examples\n\n### What is the feature you are proposing to solve the problem?\n\nI expect there is a possibility to either be able to explicitly provide to which types of upgrade request the `upgrade` event must be triggered (e.g. only web socket upgrades)\n\nOR\n\nthere is a possibility to continue handling the request as if no `upgrade` event has been defined (similarly to calling `next()` in a middleware handler), so I could default to HTTP/1.1 if I detect it's a h2c request type after checking the request headers (or any other non-websocket upgrade request)\n\nOR \n\nthere is a possibility to remove `requestTimeout` from the particular socket if we upgrade it to a websocket in a middleware rather than via the `upgrade` event\n\n### What alternatives have you considered?\n\nUnfortunately I am out of other options for now.", "reactions": {"url": "https://api.github.com/repos/nodejs/node/issues/57054/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/nodejs/node/issues/57054/timeline", "performed_via_github_app": null, "state_reason": "completed", "score": 1.0}, {"url": "https://api.github.com/repos/nodejs/node/issues/51006", "repository_url": "https://api.github.com/repos/nodejs/node", "labels_url": "https://api.github.com/repos/nodejs/node/issues/51006/labels{/name}", "comments_url": "https://api.github.com/repos/nodejs/node/issues/51006/comments", "events_url": "https://api.github.com/repos/nodejs/node/issues/51006/events", "html_url": "https://github.com/nodejs/node/issues/51006", "id": 2021593230, "node_id": "I_kwDOAZ7xs854fxCO", "number": 51006, "title": "Node.js doesn't properly implement %d %i %s console.log() format specifiers", "user": {"login": "jcbhmr", "id": 61068799, "node_id": "MDQ6VXNlcjYxMDY4Nzk5", "avatar_url": "https://avatars.githubusercontent.com/u/61068799?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jcbhmr", "html_url": "https://github.com/jcbhmr", "followers_url": "https://api.github.com/users/jcbhmr/followers", "following_url": "https://api.github.com/users/jcbhmr/following{/other_user}", "gists_url": "https://api.github.com/users/jcbhmr/gists{/gist_id}", "starred_url": "https://api.github.com/users/jcbhmr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jcbhmr/subscriptions", "organizations_url": "https://api.github.com/users/jcbhmr/orgs", "repos_url": "https://api.github.com/users/jcbhmr/repos", "events_url": "https://api.github.com/users/jcbhmr/events{/privacy}", "received_events_url": "https://api.github.com/users/jcbhmr/received_events", "type": "User", "user_view_type": "public", "site_admin": false}, "labels": [{"id": 155267446, "node_id": "MDU6TGFiZWwxNTUyNjc0NDY=", "url": "https://api.github.com/repos/nodejs/node/labels/util", "name": "util", "color": "d4c5f9", "default": false, "description": "Issues and PRs related to the built-in util module."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2023-12-01T21:16:09Z", "updated_at": "2025-09-19T12:40:11Z", "closed_at": "2025-09-19T12:40:10Z", "author_association": "CONTRIBUTOR", "type": null, "active_lock_reason": null, "sub_issues_summary": {"total": 0, "completed": 0, "percent_completed": 0}, "issue_dependencies_summary": {"blocked_by": 0, "total_blocked_by": 0, "blocking": 0, "total_blocking": 0}, "body": "according to the console spec: https://console.spec.whatwg.org/#formatter\r\n\r\n> #### 2.2.1.\u00a0Summary of formatting specifiers[](https://console.spec.whatwg.org/#formatting-specifiers)\r\n>\r\n> The following is an informative summary of the format specifiers processed by the above algorithm.\r\n>\r\n> | Specifier | Purpose | Type Conversion |\r\n> | --- | --- | --- |\r\n> | `%s` | Element which substitutes is converted to a string | [%String%](https://tc39.github.io/ecma262/#sec-string-constructor)(*element*) |\r\n> | `%d`\u00a0or\u00a0`%i` | Element which substitutes is converted to an integer | [%parseInt%](https://tc39.github.io/ecma262/#sec-parseint-string-radix)(*element*, 10) |\r\n> | `%f` | Element which substitutes is converted to a float | [%parseFloat%](https://tc39.github.io/ecma262/#sec-parsefloat-string)(*element*, 10) |\r\n> | `%o` | Element is displayed with\u00a0[optimally useful formatting](https://console.spec.whatwg.org/#optimally-useful-formatting) | n/a |\r\n> | `%O` | Element is displayed with\u00a0[generic JavaScript object formatting](https://console.spec.whatwg.org/#generic-javascript-object-formatting) | n/a |\r\n> | `%c` | Applies provided CSS | n/a\r\n\r\nbut node.js doesn't follow that exactly. here's the current console.log() backing inspect() code: https://github.com/chenyuyang2022/node/blob/fix/console-log/lib/internal/util/inspect.js#L2196 that's used when running console.log().\r\n\r\nspecifically:\r\n%s specifier doesn't do String(tempArg) #50909\r\n%d, %i doesn't do parseInt() https://github.com/nodejs/node/pull/48246 https://github.com/nodejs/node/pull/23321\r\n\r\nWhy is this not good? causes interop issues with other js runtimes. Conforming to the standard is good! Here's a specific example that demonstrates how a problem **may** arise:\r\n\r\n```sh\r\njcbhmr@PIG-2016:~/Documents$ node -e 'console.log(\"%d\", process.hrtime.bigint())' | node -e 'console.log(Number(fs.readF\r\nileSync(0, \"utf8\")))'\r\nNaN\r\njcbhmr@PIG-2016:~/Documents$ bun -e 'console.log(\"%d\", process.hrtime.bigint())' | bun -e 'console.log(Number(fs.readFil\r\neSync(0, \"utf8\")))'\r\n16716400\r\n```\r\n\r\nnotice how Bun works! normally `parseInt()` and by extension `%d` returns a number and that number can be rehydrated via `Number()`. this doesn't work with the n suffix from bigints. (yes i know; bigint => number is lossy.)\r\n\r\nHere's another example:\r\n```sh\r\njcbhmr@PIG-2016:~/Documents$ cat testconsole.js\r\nclass Frac {\r\n  constructor(num, den) {\r\n    this.num = num\r\n    this.den = den\r\n  }\r\n  [Symbol.toPrimitive]() {\r\n    return this.num / this.den\r\n  }\r\n}\r\nconsole.log(\"%f\", new Frac(1, 2))\r\nconsole.log(\"%f\", 0.5)\r\njcbhmr@PIG-2016:~/Documents$ node testconsole.js\r\n0.5\r\n0.5\r\njcbhmr@PIG-2016:~/Documents$ bun testconsole.js\r\n[Number (Frac): 0.5]\r\n0.5\r\njcbhmr@PIG-2016:~/Documents$ deno run testconsole.js\r\nNaN\r\n0.5\r\n```\r\n\r\nThis WORKS PROPERLY right now in Node.js, Chrome, Firefox... but fails in Bun and Deno. That's a divergence! Not good for isomorphic interoperable code.\r\n\r\nHere's another example of Node.js erroneous handling: from #50909 \r\n```sh\r\njcbhmr@PIG-2016:~/Documents$ node -e 'console.log(\"%s\", { [Symbol.toPrimitive]: () => \"hello\" })'\r\n{ [Symbol(Symbol.toPrimitive)]: [Function: [Symbol.toPrimitive]] }\r\njcbhmr@PIG-2016:~/Documents$ bun -e 'console.log(\"%s\", { [Symbol.toPrimitive]: () => \"hello\" })'\r\nhello\r\njcbhmr@PIG-2016:~/Documents$ deno eval 'console.log(\"%s\", { [Symbol.toPrimitive]: () => \"hello\" })'\r\nhello\r\n```\r\n\r\n\r\nin another case, if i were using `%s` to try and be \"no i actually don't want inspect()-style formatting, just coerce things to a string\" then this would diverge across implementations.\r\n```js\r\njcbhmr@PIG-2016:~/Documents$ node -e 'console.log(\"%s\", {})'\r\n{}\r\njcbhmr@PIG-2016:~/Documents$ bun -e 'console.log(\"%s\", {})'\r\n[object Object]\r\njcbhmr@PIG-2016:~/Documents$ deno eval 'console.log(\"%s\", {})'\r\n[object Object]\r\n```\r\nwhy would i want to coerce everything to a string when logging? maybe i replaced Object.prototype.toString or some other weird thing. who knows. again, it's **just Node.js** that does something different which creates edge cases like `if (isNode) { } else { }`. not ideal.\r\n\r\nrelated https://github.com/nodejs/node/issues/10292\r\n\r\nrelated deno issues\r\nhttps://github.com/denoland/deno/issues/21427\r\nhttps://github.com/denoland/deno/issues/21428\r\n\r\nrelated bun issues:\r\nhttps://github.com/oven-sh/bun/issues/7400\r\nhttps://github.com/oven-sh/bun/issues/7401\r\n\r\nrelated firefox issue:\r\nhttps://bugzilla.mozilla.org/show_bug.cgi?id=1846606\r\n\r\ni am of the opinion that achieving better interoperability on format specifiers is a good idea. to that end, i suggest trying to conform to the console spec. https://console.spec.whatwg.org/#formatter\r\n\r\nsorry if this has been discussed in individual issues. this is intended to be a push not for fixing a specific case like the above examples, but instead to push to _fix all of them_ by conforming to the spec. i understand that this is a breaking change and that [there is some pushback](https://github.com/nodejs/node/pull/48246#pullrequestreview-1470528107).", "reactions": {"url": "https://api.github.com/repos/nodejs/node/issues/51006/reactions", "total_count": 5, "+1": 5, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/nodejs/node/issues/51006/timeline", "performed_via_github_app": null, "state_reason": "not_planned", "score": 1.0}, {"url": "https://api.github.com/repos/nodejs/node/issues/59583", "repository_url": "https://api.github.com/repos/nodejs/node", "labels_url": "https://api.github.com/repos/nodejs/node/issues/59583/labels{/name}", "comments_url": "https://api.github.com/repos/nodejs/node/issues/59583/comments", "events_url": "https://api.github.com/repos/nodejs/node/issues/59583/events", "html_url": "https://github.com/nodejs/node/issues/59583", "id": 3345886285, "node_id": "I_kwDOAZ7xs87HbixN", "number": 59583, "title": "node-api: `napi_delete_reference` should use `node_api_basic_env`", "user": {"login": "KevinEady", "id": 8634912, "node_id": "MDQ6VXNlcjg2MzQ5MTI=", "avatar_url": "https://avatars.githubusercontent.com/u/8634912?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KevinEady", "html_url": "https://github.com/KevinEady", "followers_url": "https://api.github.com/users/KevinEady/followers", "following_url": "https://api.github.com/users/KevinEady/following{/other_user}", "gists_url": "https://api.github.com/users/KevinEady/gists{/gist_id}", "starred_url": "https://api.github.com/users/KevinEady/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KevinEady/subscriptions", "organizations_url": "https://api.github.com/users/KevinEady/orgs", "repos_url": "https://api.github.com/users/KevinEady/repos", "events_url": "https://api.github.com/users/KevinEady/events{/privacy}", "received_events_url": "https://api.github.com/users/KevinEady/received_events", "type": "User", "user_view_type": "public", "site_admin": false}, "labels": [{"id": 574036893, "node_id": "MDU6TGFiZWw1NzQwMzY4OTM=", "url": "https://api.github.com/repos/nodejs/node/labels/node-api", "name": "node-api", "color": "d93f0b", "default": false, "description": "Issues and PRs related to the Node-API."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2025-08-22T15:38:06Z", "updated_at": "2025-09-19T09:23:37Z", "closed_at": "2025-09-19T09:23:37Z", "author_association": "CONTRIBUTOR", "type": null, "active_lock_reason": null, "sub_issues_summary": {"total": 0, "completed": 0, "percent_completed": 0}, "issue_dependencies_summary": {"blocked_by": 0, "total_blocked_by": 0, "blocking": 0, "total_blocking": 0}, "body": "Since `napi_delete_reference` does not check that a environment is in GC, the function prototype should accept a `node_api_basic_env` instead of an `napi_env`.\n\nhttps://github.com/nodejs/node/blob/3b4f9b26b1e4f05257949627b478f9223611961d/src/js_native_api_v8.cc#L2776\n\nRefs:\n- https://github.com/nodejs/node/pull/55620", "reactions": {"url": "https://api.github.com/repos/nodejs/node/issues/59583/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/nodejs/node/issues/59583/timeline", "performed_via_github_app": null, "state_reason": "completed", "score": 1.0}, {"url": "https://api.github.com/repos/nodejs/node/issues/23276", "repository_url": "https://api.github.com/repos/nodejs/node", "labels_url": "https://api.github.com/repos/nodejs/node/issues/23276/labels{/name}", "comments_url": "https://api.github.com/repos/nodejs/node/issues/23276/comments", "events_url": "https://api.github.com/repos/nodejs/node/issues/23276/events", "html_url": "https://github.com/nodejs/node/issues/23276", "id": 367206104, "node_id": "MDU6SXNzdWUzNjcyMDYxMDQ=", "number": 23276, "title": "N-API: Need SharedArrayBuffer api", "user": {"login": "orange4glace", "id": 17820596, "node_id": "MDQ6VXNlcjE3ODIwNTk2", "avatar_url": "https://avatars.githubusercontent.com/u/17820596?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orange4glace", "html_url": "https://github.com/orange4glace", "followers_url": "https://api.github.com/users/orange4glace/followers", "following_url": "https://api.github.com/users/orange4glace/following{/other_user}", "gists_url": "https://api.github.com/users/orange4glace/gists{/gist_id}", "starred_url": "https://api.github.com/users/orange4glace/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orange4glace/subscriptions", "organizations_url": "https://api.github.com/users/orange4glace/orgs", "repos_url": "https://api.github.com/users/orange4glace/repos", "events_url": "https://api.github.com/users/orange4glace/events{/privacy}", "received_events_url": "https://api.github.com/users/orange4glace/received_events", "type": "User", "user_view_type": "public", "site_admin": false}, "labels": [{"id": 207445406, "node_id": "MDU6TGFiZWwyMDc0NDU0MDY=", "url": "https://api.github.com/repos/nodejs/node/labels/feature%20request", "name": "feature request", "color": "0D7BDE", "default": false, "description": "Issues that request new features to be added to Node.js."}, {"id": 574036893, "node_id": "MDU6TGFiZWw1NzQwMzY4OTM=", "url": "https://api.github.com/repos/nodejs/node/labels/node-api", "name": "node-api", "color": "d93f0b", "default": false, "description": "Issues and PRs related to the Node-API."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 20, "created_at": "2018-10-05T13:14:06Z", "updated_at": "2025-09-19T09:23:11Z", "closed_at": "2025-09-19T09:23:11Z", "author_association": "NONE", "type": null, "active_lock_reason": null, "sub_issues_summary": {"total": 0, "completed": 0, "percent_completed": 0}, "issue_dependencies_summary": {"blocked_by": 0, "total_blocked_by": 0, "blocking": 0, "total_blocking": 0}, "body": "needed feature :\r\nnapi_create_external_sharedarraybuffer\r\nnapi_get_sharedarraybuffer_info\r\nnapi_is_sharedarraybuffer\r\n\r\nSince V8 api supports external sharedarraybuffer creation, it would be nice if n-api implements this.\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/nodejs/node/issues/23276/reactions", "total_count": 4, "+1": 4, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/nodejs/node/issues/23276/timeline", "performed_via_github_app": null, "state_reason": "completed", "score": 1.0}, {"url": "https://api.github.com/repos/nodejs/node/issues/59656", "repository_url": "https://api.github.com/repos/nodejs/node", "labels_url": "https://api.github.com/repos/nodejs/node/issues/59656/labels{/name}", "comments_url": "https://api.github.com/repos/nodejs/node/issues/59656/comments", "events_url": "https://api.github.com/repos/nodejs/node/issues/59656/events", "html_url": "https://github.com/nodejs/node/issues/59656", "id": 3360906338, "node_id": "I_kwDOAZ7xs87IU1xi", "number": 59656, "title": "Provide SourceTextModule sync versions of link and evaluate methods", "user": {"login": "SkReD", "id": 938036, "node_id": "MDQ6VXNlcjkzODAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/938036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SkReD", "html_url": "https://github.com/SkReD", "followers_url": "https://api.github.com/users/SkReD/followers", "following_url": "https://api.github.com/users/SkReD/following{/other_user}", "gists_url": "https://api.github.com/users/SkReD/gists{/gist_id}", "starred_url": "https://api.github.com/users/SkReD/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SkReD/subscriptions", "organizations_url": "https://api.github.com/users/SkReD/orgs", "repos_url": "https://api.github.com/users/SkReD/repos", "events_url": "https://api.github.com/users/SkReD/events{/privacy}", "received_events_url": "https://api.github.com/users/SkReD/received_events", "type": "User", "user_view_type": "public", "site_admin": false}, "labels": [{"id": 155436007, "node_id": "MDU6TGFiZWwxNTU0MzYwMDc=", "url": "https://api.github.com/repos/nodejs/node/labels/vm", "name": "vm", "color": "bfdadc", "default": false, "description": "Issues and PRs related to the vm subsystem."}, {"id": 207445406, "node_id": "MDU6TGFiZWwyMDc0NDU0MDY=", "url": "https://api.github.com/repos/nodejs/node/labels/feature%20request", "name": "feature request", "color": "0D7BDE", "default": false, "description": "Issues that request new features to be added to Node.js."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2025-08-27T21:29:42Z", "updated_at": "2025-09-19T09:12:18Z", "closed_at": "2025-09-19T09:12:18Z", "author_association": "NONE", "type": null, "active_lock_reason": null, "sub_issues_summary": {"total": 0, "completed": 0, "percent_completed": 0}, "issue_dependencies_summary": {"blocked_by": 0, "total_blocked_by": 0, "blocking": 0, "total_blocking": 0}, "body": "### What is the problem this feature will solve?\n\nAllow to reimplement require(esm) logic with custom require. [Current](https://github.com/jestjs/jest/blob/e8e7e8ebcd8ac58687d1b7443701ea7779559b4b/packages/jest-runtime/src/index.ts#L2119) logic in jest covers only require(cjs) and native modules and to support require(esm) there is need of SourceTextModule sync version with sync link and evaluate methods.\n\nhttps://github.com/jestjs/jest/issues/15275\n\n### What is the feature you are proposing to solve the problem?\n\n`linkSync` and `evaluateSync` methods for [`SourceTextModule`](https://github.com/nodejs/node/blob/d3ac95e6a8c3e1aae7923e39e9117234f5a5b850/lib/internal/vm/module.js#L258) or another sync way to programmaticaly create and initialize module. \n\n### What alternatives have you considered?\n\n[Customization hooks](https://nodejs.org/docs/latest-v22.x/api/module.html#customization-hooks) but looks like, according to https://github.com/nodejs/node/issues/56241, there is fundamental problem with implementing evaluation hook for esm modules. ", "reactions": {"url": "https://api.github.com/repos/nodejs/node/issues/59656/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/nodejs/node/issues/59656/timeline", "performed_via_github_app": null, "state_reason": "completed", "score": 1.0}, {"url": "https://api.github.com/repos/nodejs/node/issues/59864", "repository_url": "https://api.github.com/repos/nodejs/node", "labels_url": "https://api.github.com/repos/nodejs/node/issues/59864/labels{/name}", "comments_url": "https://api.github.com/repos/nodejs/node/issues/59864/comments", "events_url": "https://api.github.com/repos/nodejs/node/issues/59864/events", "html_url": "https://github.com/nodejs/node/issues/59864", "id": 3409449481, "node_id": "I_kwDOAZ7xs87LOBIJ", "number": 59864, "title": "Error [ERR_INTERNAL_ASSERTION]:I\u2019m facing this issue in a Node.js + Next.js project. The error occurs intermittently \u2014 sometimes it appears, and then it resolves automatically.", "user": {"login": "Mohit-kushwaha", "id": 71367880, "node_id": "MDQ6VXNlcjcxMzY3ODgw", "avatar_url": "https://avatars.githubusercontent.com/u/71367880?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mohit-kushwaha", "html_url": "https://github.com/Mohit-kushwaha", "followers_url": "https://api.github.com/users/Mohit-kushwaha/followers", "following_url": "https://api.github.com/users/Mohit-kushwaha/following{/other_user}", "gists_url": "https://api.github.com/users/Mohit-kushwaha/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mohit-kushwaha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mohit-kushwaha/subscriptions", "organizations_url": "https://api.github.com/users/Mohit-kushwaha/orgs", "repos_url": "https://api.github.com/users/Mohit-kushwaha/repos", "events_url": "https://api.github.com/users/Mohit-kushwaha/events{/privacy}", "received_events_url": "https://api.github.com/users/Mohit-kushwaha/received_events", "type": "User", "user_view_type": "public", "site_admin": false}, "labels": [{"id": 155435815, "node_id": "MDU6TGFiZWwxNTU0MzU4MTU=", "url": "https://api.github.com/repos/nodejs/node/labels/net", "name": "net", "color": "eb6420", "default": false, "description": "Issues and PRs related to the net subsystem."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2025-09-12T08:33:12Z", "updated_at": "2025-09-19T03:52:49Z", "closed_at": "2025-09-19T03:52:49Z", "author_association": "NONE", "type": null, "active_lock_reason": null, "sub_issues_summary": {"total": 0, "completed": 0, "percent_completed": 0}, "issue_dependencies_summary": {"blocked_by": 0, "total_blocked_by": 0, "blocking": 0, "total_blocking": 0}, "body": "### Version\n\n_No response_\n\n### Platform\n\n```text\n\n```\n\n### Subsystem\n\n_No response_\n\n### What steps will reproduce the bug?\n\nwe have tried both verison of alpine 21 and 20 still facing error dont have any step to reproduce it \nFROM --platform=linux/arm64 public.ecr.aws/docker/library/node:20-alpine3.17\nFROM --platform=linux/arm64 public.ecr.aws/docker/library/node:21-alpine3.17\n\n### How often does it reproduce? Is there a required condition?\n\nonce in a day \n\n### What is the expected behavior? Why is that the expected behavior?\n\nError [ERR_INTERNAL_ASSERTION]: This is caused by either a bug in Node.js or incorrect usage of Node.js internals.\n    at internalConnectMultiple (node:net:1118:3)\n    at Timeout.internalConnectMultipleTimeout (node:net:1687:3)\n\n\n### What do you see instead?\n\nit should not give any error \n\n### Additional information\n\nError [ERR_INTERNAL_ASSERTION]: This is caused by either a bug in Node.js or incorrect usage of Node.js internals.\n    at internalConnectMultiple (node:net:1118:3)\n    at Timeout.internalConnectMultipleTimeout (node:net:1687:3)\n\n", "reactions": {"url": "https://api.github.com/repos/nodejs/node/issues/59864/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/nodejs/node/issues/59864/timeline", "performed_via_github_app": null, "state_reason": "completed", "score": 1.0}, {"url": "https://api.github.com/repos/nodejs/node/issues/59921", "repository_url": "https://api.github.com/repos/nodejs/node", "labels_url": "https://api.github.com/repos/nodejs/node/issues/59921/labels{/name}", "comments_url": "https://api.github.com/repos/nodejs/node/issues/59921/comments", "events_url": "https://api.github.com/repos/nodejs/node/issues/59921/events", "html_url": "https://github.com/nodejs/node/issues/59921", "id": 3428700828, "node_id": "I_kwDOAZ7xs87MXdKc", "number": 59921, "title": "ERR_INTERNAL_ASSERTION", "user": {"login": "iserioton", "id": 75625021, "node_id": "MDQ6VXNlcjc1NjI1MDIx", "avatar_url": "https://avatars.githubusercontent.com/u/75625021?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iserioton", "html_url": "https://github.com/iserioton", "followers_url": "https://api.github.com/users/iserioton/followers", "following_url": "https://api.github.com/users/iserioton/following{/other_user}", "gists_url": "https://api.github.com/users/iserioton/gists{/gist_id}", "starred_url": "https://api.github.com/users/iserioton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iserioton/subscriptions", "organizations_url": "https://api.github.com/users/iserioton/orgs", "repos_url": "https://api.github.com/users/iserioton/repos", "events_url": "https://api.github.com/users/iserioton/events{/privacy}", "received_events_url": "https://api.github.com/users/iserioton/received_events", "type": "User", "user_view_type": "public", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2025-09-18T05:21:03Z", "updated_at": "2025-09-19T03:52:01Z", "closed_at": "2025-09-19T03:52:01Z", "author_association": "NONE", "type": null, "active_lock_reason": null, "sub_issues_summary": {"total": 0, "completed": 0, "percent_completed": 0}, "issue_dependencies_summary": {"blocked_by": 0, "total_blocked_by": 0, "blocking": 0, "total_blocking": 0}, "body": "### Version\n\nv20.10.0\n\n### Platform\n\n```text\nLinux MigrationServer 5.15.0-144-generic #157-Ubuntu SMP Mon Jun 16 07:33:10 UTC 2025 x86_64 x86_64 x86_64 GNU/Linux\n```\n\n### Subsystem\n\n_No response_\n\n### What steps will reproduce the bug?\n\nPerforming the long-running script that includes a ton of external API calls and a few DB operations with MySQL.\n\n### How often does it reproduce? Is there a required condition?\n\nIt threw the same error six times, and then it suddenly went away.\n\n### What is the expected behavior? Why is that the expected behavior?\n\nStack trace error mentioned below\n\n### What do you see instead?\n\nStack trace error mentioned below\n\n### Additional information\n\nError [ERR_INTERNAL_ASSERTION]: This is caused by either a bug in Node.js or incorrect usage of Node.js internals.\nPlease open an issue with this stack trace at https://github.com/nodejs/node/issues\n\n    at assert (node:internal/assert:14:11)\n    at internalConnectMultiple (node:net:1118:3)\n    at Timeout.internalConnectMultipleTimeout (node:net:1687:3)\n    at listOnTimeout (node:internal/timers:575:11)\n    at process.processTimers (node:internal/timers:514:7)", "reactions": {"url": "https://api.github.com/repos/nodejs/node/issues/59921/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/nodejs/node/issues/59921/timeline", "performed_via_github_app": null, "state_reason": "not_planned", "score": 1.0}, {"url": "https://api.github.com/repos/nodejs/node/issues/59480", "repository_url": "https://api.github.com/repos/nodejs/node", "labels_url": "https://api.github.com/repos/nodejs/node/issues/59480/labels{/name}", "comments_url": "https://api.github.com/repos/nodejs/node/issues/59480/comments", "events_url": "https://api.github.com/repos/nodejs/node/issues/59480/events", "html_url": "https://github.com/nodejs/node/issues/59480", "id": 3324837318, "node_id": "I_kwDOAZ7xs87GLP3G", "number": 59480, "title": "Jest unit tests failing after upgrading to 24.6.X", "user": {"login": "vpmedia", "id": 1160199, "node_id": "MDQ6VXNlcjExNjAxOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1160199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vpmedia", "html_url": "https://github.com/vpmedia", "followers_url": "https://api.github.com/users/vpmedia/followers", "following_url": "https://api.github.com/users/vpmedia/following{/other_user}", "gists_url": "https://api.github.com/users/vpmedia/gists{/gist_id}", "starred_url": "https://api.github.com/users/vpmedia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vpmedia/subscriptions", "organizations_url": "https://api.github.com/users/vpmedia/orgs", "repos_url": "https://api.github.com/users/vpmedia/repos", "events_url": "https://api.github.com/users/vpmedia/events{/privacy}", "received_events_url": "https://api.github.com/users/vpmedia/received_events", "type": "User", "user_view_type": "public", "site_admin": false}, "labels": [{"id": 155436007, "node_id": "MDU6TGFiZWwxNTU0MzYwMDc=", "url": "https://api.github.com/repos/nodejs/node/labels/vm", "name": "vm", "color": "bfdadc", "default": false, "description": "Issues and PRs related to the vm subsystem."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2025-08-15T09:34:51Z", "updated_at": "2025-09-18T22:11:48Z", "closed_at": "2025-08-22T12:57:09Z", "author_association": "NONE", "type": null, "active_lock_reason": null, "sub_issues_summary": {"total": 0, "completed": 0, "percent_completed": 0}, "issue_dependencies_summary": {"blocked_by": 0, "total_blocked_by": 0, "blocking": 0, "total_blocking": 0}, "body": "### Version\n\n24.6.0\n\n### Platform\n\n```text\nUbuntu 22.04 LTS (Github runner)\n```\n\n### Subsystem\n\n_No response_\n\n### What steps will reproduce the bug?\n\nI'm using `NODE_OPTIONS=--experimental-vm-modules` with `jest`.\n\nMy unit tests started to fail:\n`Test suite failed to run, module is already linked`\n`ReferenceError: You are trying to import a file after the Jest environment has been torn down. From ...`\n\nWith node v24.5 it works fine.\n\n### How often does it reproduce? Is there a required condition?\n\nAlways failing.\n\n### What is the expected behavior? Why is that the expected behavior?\n\nUnit tests are completed.\n\n### What do you see instead?\n\nUnit tests are failing.\n\n### Additional information\n\n_No response_", "reactions": {"url": "https://api.github.com/repos/nodejs/node/issues/59480/reactions", "total_count": 13, "+1": 13, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/nodejs/node/issues/59480/timeline", "performed_via_github_app": null, "state_reason": "completed", "score": 1.0}, {"url": "https://api.github.com/repos/nodejs/node/issues/59930", "repository_url": "https://api.github.com/repos/nodejs/node", "labels_url": "https://api.github.com/repos/nodejs/node/issues/59930/labels{/name}", "comments_url": "https://api.github.com/repos/nodejs/node/issues/59930/comments", "events_url": "https://api.github.com/repos/nodejs/node/issues/59930/events", "html_url": "https://github.com/nodejs/node/issues/59930", "id": 3431909638, "node_id": "I_kwDOAZ7xs87MjskG", "number": 59930, "title": "inventory-app", "user": {"login": "Pintu22-Yadav", "id": 233157967, "node_id": "U_kgDODeW1Tw", "avatar_url": "https://avatars.githubusercontent.com/u/233157967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Pintu22-Yadav", "html_url": "https://github.com/Pintu22-Yadav", "followers_url": "https://api.github.com/users/Pintu22-Yadav/followers", "following_url": "https://api.github.com/users/Pintu22-Yadav/following{/other_user}", "gists_url": "https://api.github.com/users/Pintu22-Yadav/gists{/gist_id}", "starred_url": "https://api.github.com/users/Pintu22-Yadav/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Pintu22-Yadav/subscriptions", "organizations_url": "https://api.github.com/users/Pintu22-Yadav/orgs", "repos_url": "https://api.github.com/users/Pintu22-Yadav/repos", "events_url": "https://api.github.com/users/Pintu22-Yadav/events{/privacy}", "received_events_url": "https://api.github.com/users/Pintu22-Yadav/received_events", "type": "User", "user_view_type": "public", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2025-09-18T20:39:40Z", "updated_at": "2025-09-18T20:55:19Z", "closed_at": "2025-09-18T20:55:19Z", "author_association": "NONE", "type": null, "active_lock_reason": null, "sub_issues_summary": {"total": 0, "completed": 0, "percent_completed": 0}, "issue_dependencies_summary": {"blocked_by": 0, "total_blocked_by": 0, "blocking": 0, "total_blocking": 0}, "body": "// Import required packages\nconst express = require(\"express\");\n\n// Create an Express app\nconst app = express();\nconst PORT = 3000;\n\n// Middleware to parse JSON data\napp.use(express.json());\n\n// Serve frontend files from the \"public\" folder\napp.use(express.static(\"public\"));\n\n// In-memory storage for inventory items\nlet items = [];\n\n// API: Get all items\napp.get(\"/items\", (req, res) => {\n  res.json(items);\n});\n\n// API: Add new item\napp.post(\"/items\", (req, res) => {\n  items.push(req.body);\n  res.json({ message: \"Item added!\", items });\n});\n\n// API: Delete item\napp.delete(\"/items/:id\", (req, res) => {\n  const id = parseInt(req.params.id);\n  items.splice(id, 1);\n  res.json({ message: \"Item deleted!\", items });\n});\n\n// Start the server\napp.listen(PORT, () => {\n  console.log(`Server running at http://localhost:${PORT}`);\n});", "reactions": {"url": "https://api.github.com/repos/nodejs/node/issues/59930/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/nodejs/node/issues/59930/timeline", "performed_via_github_app": null, "state_reason": "not_planned", "score": 1.0}, {"url": "https://api.github.com/repos/nodejs/node/issues/44887", "repository_url": "https://api.github.com/repos/nodejs/node", "labels_url": "https://api.github.com/repos/nodejs/node/issues/44887/labels{/name}", "comments_url": "https://api.github.com/repos/nodejs/node/issues/44887/comments", "events_url": "https://api.github.com/repos/nodejs/node/issues/44887/events", "html_url": "https://github.com/nodejs/node/issues/44887", "id": 1395770597, "node_id": "I_kwDOAZ7xs85TMcTl", "number": 44887, "title": "HTTP2 and HTTP1 on the same socket", "user": {"login": "FStefanni", "id": 33950786, "node_id": "MDQ6VXNlcjMzOTUwNzg2", "avatar_url": "https://avatars.githubusercontent.com/u/33950786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FStefanni", "html_url": "https://github.com/FStefanni", "followers_url": "https://api.github.com/users/FStefanni/followers", "following_url": "https://api.github.com/users/FStefanni/following{/other_user}", "gists_url": "https://api.github.com/users/FStefanni/gists{/gist_id}", "starred_url": "https://api.github.com/users/FStefanni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FStefanni/subscriptions", "organizations_url": "https://api.github.com/users/FStefanni/orgs", "repos_url": "https://api.github.com/users/FStefanni/repos", "events_url": "https://api.github.com/users/FStefanni/events{/privacy}", "received_events_url": "https://api.github.com/users/FStefanni/received_events", "type": "User", "user_view_type": "public", "site_admin": false}, "labels": [{"id": 155267422, "node_id": "MDU6TGFiZWwxNTUyNjc0MjI=", "url": "https://api.github.com/repos/nodejs/node/labels/http", "name": "http", "color": "c7def8", "default": false, "description": "Issues or PRs related to the http subsystem."}, {"id": 207445406, "node_id": "MDU6TGFiZWwyMDc0NDU0MDY=", "url": "https://api.github.com/repos/nodejs/node/labels/feature%20request", "name": "feature request", "color": "0D7BDE", "default": false, "description": "Issues that request new features to be added to Node.js."}, {"id": 647282877, "node_id": "MDU6TGFiZWw2NDcyODI4Nzc=", "url": "https://api.github.com/repos/nodejs/node/labels/http2", "name": "http2", "color": "c2e0c6", "default": false, "description": "Issues or PRs related to the http2 subsystem."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 21, "created_at": "2022-10-04T07:09:11Z", "updated_at": "2025-09-18T13:41:48Z", "closed_at": "2022-10-06T08:48:48Z", "author_association": "NONE", "type": null, "active_lock_reason": null, "sub_issues_summary": {"total": 0, "completed": 0, "percent_completed": 0}, "issue_dependencies_summary": {"blocked_by": 0, "total_blocked_by": 0, "blocking": 0, "total_blocking": 0}, "body": "### What is the problem this feature will solve?\n\nSupport both HTTP1 and HTTP2 on the same server socket.\r\n\r\nI have seen the discussion on #26795, but the issue was closed without a clear answer (for what I was able to understand).\r\nAs some of the commenters pointed out:\r\n\r\n* It is not an uncommon feature/need, since IoT and embedded devices could need it. And more in general, not all network traffic and server applications are related to browsers, so this feature would be very useful.\r\n* It is useful on case of reverse proxies, since it is very common to let them handle the TLS termination, and just forward plain HTTP to the actual services.\r\n* It simplifies and generalizes node.js projects, since servers could just create HTTP2 sockets, being always able to support both versions\r\n\r\n\n\n### What is the feature you are proposing to solve the problem?\n\nAdd a `\"allowHTTP1\": true,` option to HTTP2 non-TLS server, similar to the one available for HTTP2 TLS server.\n\n### What alternatives have you considered?\n\nI don't see many alternatives actually...\r\n", "reactions": {"url": "https://api.github.com/repos/nodejs/node/issues/44887/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/nodejs/node/issues/44887/timeline", "performed_via_github_app": null, "state_reason": "not_planned", "score": 1.0}, {"url": "https://api.github.com/repos/nodejs/node/issues/56509", "repository_url": "https://api.github.com/repos/nodejs/node", "labels_url": "https://api.github.com/repos/nodejs/node/issues/56509/labels{/name}", "comments_url": "https://api.github.com/repos/nodejs/node/issues/56509/comments", "events_url": "https://api.github.com/repos/nodejs/node/issues/56509/events", "html_url": "https://github.com/nodejs/node/issues/56509", "id": 2773807566, "node_id": "I_kwDOAZ7xs86lVPHO", "number": 56509, "title": "`NO_COLOR` not an alias for `NODE_DISABLE_COLORS` in v18", "user": {"login": "veganaize", "id": 7102064, "node_id": "MDQ6VXNlcjcxMDIwNjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/7102064?v=4", "gravatar_id": "", "url": "https://api.github.com/users/veganaize", "html_url": "https://github.com/veganaize", "followers_url": "https://api.github.com/users/veganaize/followers", "following_url": "https://api.github.com/users/veganaize/following{/other_user}", "gists_url": "https://api.github.com/users/veganaize/gists{/gist_id}", "starred_url": "https://api.github.com/users/veganaize/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/veganaize/subscriptions", "organizations_url": "https://api.github.com/users/veganaize/orgs", "repos_url": "https://api.github.com/users/veganaize/repos", "events_url": "https://api.github.com/users/veganaize/events{/privacy}", "received_events_url": "https://api.github.com/users/veganaize/received_events", "type": "User", "user_view_type": "public", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2025-01-07T21:47:46Z", "updated_at": "2025-09-17T22:25:41Z", "closed_at": "2025-09-12T21:15:59Z", "author_association": "NONE", "type": null, "active_lock_reason": null, "sub_issues_summary": {"total": 0, "completed": 0, "percent_completed": 0}, "issue_dependencies_summary": {"blocked_by": 0, "total_blocked_by": 0, "blocking": 0, "total_blocking": 0}, "body": "### Version\n\nv18.20.5\n\n### Platform\n\n```text\nLinux archlinux 6.6.56-1-lts #1 SMP PREEMPT_DYNAMIC Thu, 10 Oct 2024 12:04:53 +0000 x86_64 GNU/Linux\n```\n\n### Subsystem\n\n_No response_\n\n### What steps will reproduce the bug?\n\n1. Download an appropriate v18 binary from: <https://nodejs.org/download/release/v18.20.5/>\n2. Unpack it and navigate to the `node` executable.\n3. From the terminal run: `NO_COLOR=1 ./node`\n4. Inside the REPL enter: `[1]`\n5. Press `[ENTER]` and verify the result prints the `1` in color.\n\n### How often does it reproduce? Is there a required condition?\n\nThe issue is consistent 100% of the time.\n\n### What is the expected behavior? Why is that the expected behavior?\n\nThe expected behavior is that [`NO_COLOR`](https://nodejs.org/docs/latest/api/cli.html#no_colorany) should be an alias for [`NODE_DISABLE_COLORS`](https://nodejs.org/docs/latest/api/cli.html#node_disable_colors1) because that's what's stated in the [documentation](https://nodejs.org/docs/latest/api/cli.html).\n\n### What do you see instead?\n\nCurrently, for v18 (still under LTS at the time of this writing), `NO_COLOR` only disables color for output _outside_ of the REPL, not within it.  `NODE_DISABLE_COLORS` disables colorized output _both_ outside of the REPL and within it.\n\n### Additional information\n\nThe issue seems to have been corrected only for Node.js v19.0.0+", "reactions": {"url": "https://api.github.com/repos/nodejs/node/issues/56509/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/nodejs/node/issues/56509/timeline", "performed_via_github_app": null, "state_reason": "not_planned", "score": 1.0}, {"url": "https://api.github.com/repos/nodejs/node/issues/59912", "repository_url": "https://api.github.com/repos/nodejs/node", "labels_url": "https://api.github.com/repos/nodejs/node/issues/59912/labels{/name}", "comments_url": "https://api.github.com/repos/nodejs/node/issues/59912/comments", "events_url": "https://api.github.com/repos/nodejs/node/issues/59912/events", "html_url": "https://github.com/nodejs/node/issues/59912", "id": 3426334292, "node_id": "I_kwDOAZ7xs87MObZU", "number": 59912, "title": "Ability to block installs of packages that were published less than x days ago", "user": {"login": "dloetzke", "id": 97966457, "node_id": "U_kgDOBdbZeQ", "avatar_url": "https://avatars.githubusercontent.com/u/97966457?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dloetzke", "html_url": "https://github.com/dloetzke", "followers_url": "https://api.github.com/users/dloetzke/followers", "following_url": "https://api.github.com/users/dloetzke/following{/other_user}", "gists_url": "https://api.github.com/users/dloetzke/gists{/gist_id}", "starred_url": "https://api.github.com/users/dloetzke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dloetzke/subscriptions", "organizations_url": "https://api.github.com/users/dloetzke/orgs", "repos_url": "https://api.github.com/users/dloetzke/repos", "events_url": "https://api.github.com/users/dloetzke/events{/privacy}", "received_events_url": "https://api.github.com/users/dloetzke/received_events", "type": "User", "user_view_type": "public", "site_admin": false}, "labels": [{"id": 207445406, "node_id": "MDU6TGFiZWwyMDc0NDU0MDY=", "url": "https://api.github.com/repos/nodejs/node/labels/feature%20request", "name": "feature request", "color": "0D7BDE", "default": false, "description": "Issues that request new features to be added to Node.js."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2025-09-17T13:31:04Z", "updated_at": "2025-09-17T19:46:53Z", "closed_at": "2025-09-17T19:46:53Z", "author_association": "NONE", "type": null, "active_lock_reason": null, "sub_issues_summary": {"total": 0, "completed": 0, "percent_completed": 0}, "issue_dependencies_summary": {"blocked_by": 0, "total_blocked_by": 0, "blocking": 0, "total_blocking": 0}, "body": "### What is the problem this feature will solve?\n\nThis could be a great help against installing hijacked packages that published malicious updates (as happening a LOT recently), which are often removed from npm fairly quickly.\nThis feature could be used to make sure that npm and/or the maintainers have enough time to remove malicious updates before the version is allowed to be installed.\nIt might also help with #59911.\n\n### What is the feature you are proposing to solve the problem?\n\nI'd love to have a way to tell Node.js (e.g. in an .npmrc file) to not allow installing any packages that aren't older than x days/hours/minutes.\nThis could be seen as an automation of always running `npm install --before (Today-xDays)`, which I assume already contains the necessary logic for this.\n\nA configurable list of exceptions to this rule or at least a workaround command flag would be very appreciated, of course.\n\n### What alternatives have you considered?\n\npnpm has recently implemented a similar functionality in their [v10.16](https://github.com/pnpm/pnpm/releases/tag/v10.16.0).\n\nIn theory, npm install [--before](https://docs.npmjs.com/cli/v11/using-npm/config#before) allows to construct this behavior, but adding that to every npm i and npm ci is not really a feasible solution.\n\nThis functionality can also be (partly) achieved through the dependency management itself (e.g. GitHub's Dependabot). However, implementing it in Node.js itself helps in keeping the devices themselves safe and making sure that developers don't accidentally install malicious packages or even push them into repositories.", "reactions": {"url": "https://api.github.com/repos/nodejs/node/issues/59912/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/nodejs/node/issues/59912/timeline", "performed_via_github_app": null, "state_reason": "not_planned", "score": 1.0}, {"url": "https://api.github.com/repos/nodejs/node/issues/57570", "repository_url": "https://api.github.com/repos/nodejs/node", "labels_url": "https://api.github.com/repos/nodejs/node/issues/57570/labels{/name}", "comments_url": "https://api.github.com/repos/nodejs/node/issues/57570/comments", "events_url": "https://api.github.com/repos/nodejs/node/issues/57570/events", "html_url": "https://github.com/nodejs/node/issues/57570", "id": 2936870377, "node_id": "I_kwDOAZ7xs86vDRXp", "number": 57570, "title": "Add template tags support to node:sqlite", "user": {"login": "mcollina", "id": 52195, "node_id": "MDQ6VXNlcjUyMTk1", "avatar_url": "https://avatars.githubusercontent.com/u/52195?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcollina", "html_url": "https://github.com/mcollina", "followers_url": "https://api.github.com/users/mcollina/followers", "following_url": "https://api.github.com/users/mcollina/following{/other_user}", "gists_url": "https://api.github.com/users/mcollina/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcollina/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcollina/subscriptions", "organizations_url": "https://api.github.com/users/mcollina/orgs", "repos_url": "https://api.github.com/users/mcollina/repos", "events_url": "https://api.github.com/users/mcollina/events{/privacy}", "received_events_url": "https://api.github.com/users/mcollina/received_events", "type": "User", "user_view_type": "public", "site_admin": false}, "labels": [{"id": 207445406, "node_id": "MDU6TGFiZWwyMDc0NDU0MDY=", "url": "https://api.github.com/repos/nodejs/node/labels/feature%20request", "name": "feature request", "color": "0D7BDE", "default": false, "description": "Issues that request new features to be added to Node.js."}, {"id": 7186154574, "node_id": "LA_kwDOAZ7xs88AAAABrFQETg", "url": "https://api.github.com/repos/nodejs/node/labels/sqlite", "name": "sqlite", "color": "064a64", "default": false, "description": "Issues and PRs related to the SQLite subsystem."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2025-03-20T23:30:53Z", "updated_at": "2025-09-17T16:54:12Z", "closed_at": "2025-09-17T16:54:12Z", "author_association": "MEMBER", "type": null, "active_lock_reason": null, "sub_issues_summary": {"total": 0, "completed": 0, "percent_completed": 0}, "issue_dependencies_summary": {"blocked_by": 0, "total_blocked_by": 0, "blocking": 0, "total_blocking": 0}, "body": "### What is the problem this feature will solve?\n\nI've created a small module https://github.com/mcollina/node-sqlite-tags to add template tags to our SQLite implementation.\n\n### What is the feature you are proposing to solve the problem?\n\nAdding something similar to the module itself.\n\n### What alternatives have you considered?\n\n_No response_", "reactions": {"url": "https://api.github.com/repos/nodejs/node/issues/57570/reactions", "total_count": 10, "+1": 7, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 3, "eyes": 0}, "timeline_url": "https://api.github.com/repos/nodejs/node/issues/57570/timeline", "performed_via_github_app": null, "state_reason": "completed", "score": 1.0}, {"url": "https://api.github.com/repos/nodejs/node/issues/59908", "repository_url": "https://api.github.com/repos/nodejs/node", "labels_url": "https://api.github.com/repos/nodejs/node/issues/59908/labels{/name}", "comments_url": "https://api.github.com/repos/nodejs/node/issues/59908/comments", "events_url": "https://api.github.com/repos/nodejs/node/issues/59908/events", "html_url": "https://github.com/nodejs/node/issues/59908", "id": 3424080280, "node_id": "I_kwDOAZ7xs87MF1GY", "number": 59908, "title": "AbdulElah Othman Gwaith\n", "user": {"login": "AbdulElahOthmanGwaith", "id": 228761404, "node_id": "U_kgDODaKfPA", "avatar_url": "https://avatars.githubusercontent.com/u/228761404?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AbdulElahOthmanGwaith", "html_url": "https://github.com/AbdulElahOthmanGwaith", "followers_url": "https://api.github.com/users/AbdulElahOthmanGwaith/followers", "following_url": "https://api.github.com/users/AbdulElahOthmanGwaith/following{/other_user}", "gists_url": "https://api.github.com/users/AbdulElahOthmanGwaith/gists{/gist_id}", "starred_url": "https://api.github.com/users/AbdulElahOthmanGwaith/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AbdulElahOthmanGwaith/subscriptions", "organizations_url": "https://api.github.com/users/AbdulElahOthmanGwaith/orgs", "repos_url": "https://api.github.com/users/AbdulElahOthmanGwaith/repos", "events_url": "https://api.github.com/users/AbdulElahOthmanGwaith/events{/privacy}", "received_events_url": "https://api.github.com/users/AbdulElahOthmanGwaith/received_events", "type": "User", "user_view_type": "public", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2025-09-16T23:56:46Z", "updated_at": "2025-09-17T16:35:52Z", "closed_at": "2025-09-17T16:35:50Z", "author_association": "NONE", "type": null, "active_lock_reason": null, "sub_issues_summary": {"total": 0, "completed": 0, "percent_completed": 0}, "issue_dependencies_summary": {"blocked_by": 0, "total_blocked_by": 0, "blocking": 0, "total_blocking": 0}, "body": null, "reactions": {"url": "https://api.github.com/repos/nodejs/node/issues/59908/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/nodejs/node/issues/59908/timeline", "performed_via_github_app": null, "state_reason": "not_planned", "score": 1.0}, {"url": "https://api.github.com/repos/nodejs/node/issues/59915", "repository_url": "https://api.github.com/repos/nodejs/node", "labels_url": "https://api.github.com/repos/nodejs/node/issues/59915/labels{/name}", "comments_url": "https://api.github.com/repos/nodejs/node/issues/59915/comments", "events_url": "https://api.github.com/repos/nodejs/node/issues/59915/events", "html_url": "https://github.com/nodejs/node/issues/59915", "id": 3426960094, "node_id": "I_kwDOAZ7xs87MQ0Le", "number": 59915, "title": "Edusecure ", "user": {"login": "rbopche179-sketch", "id": 231384812, "node_id": "U_kgDODcqm7A", "avatar_url": "https://avatars.githubusercontent.com/u/231384812?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rbopche179-sketch", "html_url": "https://github.com/rbopche179-sketch", "followers_url": "https://api.github.com/users/rbopche179-sketch/followers", "following_url": "https://api.github.com/users/rbopche179-sketch/following{/other_user}", "gists_url": "https://api.github.com/users/rbopche179-sketch/gists{/gist_id}", "starred_url": "https://api.github.com/users/rbopche179-sketch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rbopche179-sketch/subscriptions", "organizations_url": "https://api.github.com/users/rbopche179-sketch/orgs", "repos_url": "https://api.github.com/users/rbopche179-sketch/repos", "events_url": "https://api.github.com/users/rbopche179-sketch/events{/privacy}", "received_events_url": "https://api.github.com/users/rbopche179-sketch/received_events", "type": "User", "user_view_type": "public", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2025-09-17T16:16:26Z", "updated_at": "2025-09-17T16:34:59Z", "closed_at": "2025-09-17T16:34:55Z", "author_association": "NONE", "type": null, "active_lock_reason": null, "sub_issues_summary": {"total": 0, "completed": 0, "percent_completed": 0}, "issue_dependencies_summary": {"blocked_by": 0, "total_blocked_by": 0, "blocking": 0, "total_blocking": 0}, "body": "// App.js\nimport React, { useEffect, useState } from \"react\";\nimport { StyleSheet, Text, View, TouchableOpacity, TextInput, ScrollView, Alert } from \"react-native\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\n/*\nExpo React Native demo \u2014 National Education Management System (Android-ready)\nFeatures:\n- Multi-role login: student, teacher, admin, school\n- Mock backend using AsyncStorage (seeded on first run)\n- Simple dashboards and actions: verify school/teacher (admin), apply scholarship (student), upload marks/attendance (teacher), register teacher (school)\nThis is a demo / prototype \u2014 replace with real backend for production.\n*/\n\nconst STORAGE_KEY = \"nem_demo_v1\";\n\nconst seedData = {\n  schools: [\n    { id: \"SCH-001\", name: \"Aadi Vikas High School\", verified: true },\n    { id: \"SCH-002\", name: \"Khapri Public School\", verified: false }\n  ],\n  teachers: [\n    { id: \"T-101\", name: \"Ramesh Rao\", schoolId: \"SCH-001\", approved: true },\n    { id: \"T-102\", name: \"Sita Sharma\", schoolId: \"SCH-002\", approved: false }\n  ],\n  students: [\n    { id: \"S-1001\", name: \"Vaidhavi Sontakke\", schoolId: \"SCH-001\", attendance: 92, scholarshipApplied: false },\n    { id: \"S-1002\", name: \"Aditya Meshram\", schoolId: \"SCH-001\", attendance: 85, scholarshipApplied: true }\n  ],\n  exams: [{ id: \"E-1\", title: \"Term 1\", date: \"2025-11-20\", resultsPublished: false }],\n  notifications: []\n};\n\nasync function loadData() {\n  try {\n    const raw = await AsyncStorage.getItem(STORAGE_KEY);\n    if (!raw) {\n      await AsyncStorage.setItem(STORAGE_KEY, JSON.stringify(seedData));\n      return seedData;\n    }\n    return JSON.parse(raw);\n  } catch (e) {\n    console.error(\"loadData error\", e);\n    return seedData;\n  }\n}\nasync function saveData(data) {\n  try {\n    await AsyncStorage.setItem(STORAGE_KEY, JSON.stringify(data));\n  } catch (e) {\n    console.error(\"saveData error\", e);\n  }\n}\n\nexport default function App() {\n  const [dataVersion, setDataVersion] = useState(0); // force refresh\n  const [rolePick, setRolePick] = useState(null);\n  const [current, setCurrent] = useState(null); // {role, user}\n  const [data, setData] = useState(null);\n\n  useEffect(() => {\n    (async () => {\n      const d = await loadData();\n      setData(d);\n    })();\n  }, [dataVersion]);\n\n  const reload = () => setDataVersion(v => v + 1);\n\n  // Login logic (simple demo)\n  const handleLogin = async (role, id, password) => {\n    const d = await loadData();\n    if (role === \"student\") {\n      const s = d.students.find(x => x.id === id || x.name.toLowerCase() === id.toLowerCase());\n      if (s) { setCurrent({ role: \"student\", user: s }); return; }\n    }\n    if (role === \"teacher\") {\n      const t = d.teachers.find(x => x.id === id || x.name.toLowerCase() === id.toLowerCase());\n      if (t) { setCurrent({ role: \"teacher\", user: t }); return; }\n    }\n    if (role === \"admin\") {\n      // demo admin credentials\n      if (id === \"admin\" && password === \"admin123\") { setCurrent({ role: \"admin\", user: { name: \"National Admin\" } }); return; }\n    }\n    if (role === \"school\") {\n      const s = d.schools.find(x => x.id === id || x.name.toLowerCase() === id.toLowerCase());\n      if (s) { setCurrent({ role: \"school\", user: s }); return; }\n    }\n    Alert.alert(\"Login failed\", \"Check ID / name / password (demo)\");\n  };\n\n  const handleLogout = () => { setCurrent(null); setRolePick(null); reload(); };\n\n  if (!data) {\n    return (\n      <View style={styles.center}>\n        <Text>Loading demo data...</Text>\n      </View>\n    );\n  }\n\n  // ---------- Screens ----------\n  if (!current) {\n    return (\n      <ScrollView style={styles.safe}>\n        <Text style={styles.title}>National Education Management (Demo)</Text>\n\n        <View style={styles.card}>\n          <Text style={styles.small}>Choose role to login</Text>\n          <View style={styles.row}>\n            <TouchableOpacity style={styles.btn} onPress={() => setRolePick(\"student\")}><Text style={styles.btnText}>Student</Text></TouchableOpacity>\n            <TouchableOpacity style={styles.btn} onPress={() => setRolePick(\"teacher\")}><Text style={styles.btnText}>Teacher</Text></TouchableOpacity>\n          </View>\n          <View style={styles.row}>\n            <TouchableOpacity style={styles.btn} onPress={() => setRolePick(\"admin\")}><Text style={styles.btnText}>Admin</Text></TouchableOpacity>\n            <TouchableOpacity style={styles.btn} onPress={() => setRolePick(\"school\")}><Text style={styles.btnText}>School</Text></TouchableOpacity>\n          </View>\n        </View>\n\n        {rolePick && <LoginCard role={rolePick} onLogin={handleLogin} demoData={data} onBack={() => setRolePick(null)} />}\n\n        <View style={styles.card}>\n          <Text style={styles.small}>Quick demo actions</Text>\n          <View style={{ flexDirection: \"row\", marginTop: 8 }}>\n            <TouchableOpacity style={styles.btn} onPress={async () => {\n              const d = await loadData();\n              d.students.push({ id: `S-${Math.floor(1000 + Math.random() * 9000)}`, name: 'Demo Student ' + Date.now() % 1000, schoolId: d.schools[0].id, attendance: 80, scholarshipApplied: false });\n              await saveData(d); reload(); Alert.alert(\"Done\", \"Added demo student\");\n            }}>\n              <Text style={styles.btnText}>Add Demo Student</Text>\n            </TouchableOpacity>\n            <TouchableOpacity style={[styles.btn, styles.ghost]} onPress={async () => {\n              await AsyncStorage.removeItem(STORAGE_KEY);\n              await loadData();\n              reload();\n              Alert.alert(\"Reset\", \"Demo data reset\");\n            }}>\n              <Text>Reset Data</Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n      </ScrollView>\n    );\n  }\n\n  // Student dashboard\n  if (current.role === \"student\") {\n    const student = data.students.find(s => s.id === current.user.id);\n    const school = data.schools.find(s => s.id === student.schoolId);\n    return (\n      <ScrollView style={styles.safe}>\n        <Text style={styles.title}>Student Dashboard</Text>\n        <View style={styles.card}>\n          <Text style={styles.small}>Welcome</Text>\n          <Text style={styles.h3}>{student.name}</Text>\n          <Text style={styles.small}>School: {school?.name || \"\u2014\"}</Text>\n          <Text style={{ marginTop: 8 }}>Attendance: {student.attendance}%</Text>\n        </View>\n\n        <View style={styles.card}>\n          <Text style={styles.small}>Scholarship</Text>\n          {student.scholarshipApplied ? <Text style={styles.notice}>You have already applied.</Text> :\n            <TouchableOpacity style={styles.btn} onPress={async () => {\n              const d = await loadData();\n              const idx = d.students.findIndex(x => x.id === student.id);\n              d.students[idx].scholarshipApplied = true;\n              d.notifications.push({ id: Date.now(), text: `Scholarship applied: ${student.name}` });\n              await saveData(d); reload(); Alert.alert(\"Applied\", \"Scholarship applied (demo)\");\n            }}>\n              <Text style={styles.btnText}>Apply Scholarship</Text>\n            </TouchableOpacity>}\n        </View>\n\n        <View style={styles.card}>\n          <Text style={styles.small}>Upcoming Exams</Text>\n          {data.exams.map(e => <View key={e.id} style={{ marginTop: 8 }}><Text>{e.title} - {e.date}</Text></View>)}\n        </View>\n\n        <TouchableOpacity style={[styles.btn, { alignSelf: \"center\", margin: 16 }]} onPress={handleLogout}><Text style={styles.btnText}>Logout</Text></TouchableOpacity>\n      </ScrollView>\n    );\n  }\n\n  // Teacher dashboard\n  if (current.role === \"teacher\") {\n    const teacher = data.teachers.find(t => t.id === current.user.id);\n    return (\n      <ScrollView style={styles.safe}>\n        <Text style={styles.title}>Teacher Dashboard</Text>\n        <View style={styles.card}>\n          <Text style={styles.small}>Teacher</Text>\n          <Text style={styles.h3}>{teacher.name}</Text>\n          <Text style={styles.small}>School: {data.schools.find(s => s.id === teacher.schoolId)?.name}</Text>\n        </View>\n\n        <UploadMarksCard teacher={teacher} reload={reload} />\n\n        <View style={styles.card}>\n          <Text style={styles.small}>Student List (attendance quick)</Text>\n          {data.students.filter(s => s.schoolId === teacher.schoolId).map(s => (\n            <View key={s.id} style={styles.rowItem}>\n              <View>\n                <Text>{s.name}</Text>\n                <Text style={styles.small}>{s.id}</Text>\n              </View>\n              <TouchableOpacity style={styles.ghostBtn} onPress={async () => {\n                const d = await loadData();\n                const idx = d.students.findIndex(x => x.id === s.id);\n                d.students[idx].attendance = Math.min(100, d.students[idx].attendance + 1);\n                await saveData(d); reload();\n              }}>\n                <Text>Mark +1%</Text>\n              </TouchableOpacity>\n            </View>\n          ))}\n        </View>\n\n        <TouchableOpacity style={[styles.btn, { alignSelf: \"center\", margin: 16 }]} onPress={handleLogout}><Text style={styles.btnText}>Logout</Text></TouchableOpacity>\n      </ScrollView>\n    );\n  }\n\n  // Admin dashboard\n  if (current.role === \"admin\") {\n    return (\n      <ScrollView style={styles.safe}>\n        <Text style={styles.title}>Admin Panel</Text>\n        <View style={styles.card}>\n          <Text style={styles.small}>Manage schools, teachers, students and generate reports.</Text>\n        </View>\n\n        <View style={styles.card}>\n          <Text style={styles.small}>Schools to verify</Text>\n          {data.schools.filter(s => !s.verified).map(s => (\n            <View key={s.id} style={styles.rowItem}>\n              <Text>{s.name}</Text>\n              <TouchableOpacity style={styles.btn} onPress={async () => {\n                const d = await loadData();\n                const idx = d.schools.findIndex(x => x.id === s.id);\n                d.schools[idx].verified = true;\n                d.notifications.push({ id: Date.now(), text: `School ${s.name} verified` });\n                await saveData(d); reload();\n              }}><Text style={styles.btnText}>Verify</Text></TouchableOpacity>\n            </View>\n          ))}\n          {data.schools.filter(s => !s.verified).length === 0 && <Text style={styles.notice}>No pending schools</Text>}\n        </View>\n\n        <View style={styles.card}>\n          <Text style={styles.small}>Teachers to approve</Text>\n          {data.teachers.filter(t => !t.approved).map(t => (\n            <View key={t.id} style={styles.rowItem}>\n              <Text>{t.name}</Text>\n              <TouchableOpacity style={styles.btn} onPress={async () => {\n                const d = await loadData();\n                const idx = d.teachers.findIndex(x => x.id === t.id);\n                d.teachers[idx].approved = true;\n                d.notifications.push({ id: Date.now(), text: `Teacher ${t.name} approved` });\n                await saveData(d); reload();\n              }}><Text style={styles.btnText}>Approve</Text></TouchableOpacity>\n            </View>\n          ))}\n          {data.teachers.filter(t => !t.approved).length === 0 && <Text style={styles.notice}>No pending teachers</Text>}\n        </View>\n\n        <View style={styles.card}>\n          <Text style={styles.small}>Reports</Text>\n          <Text>Total Schools: {data.schools.length}</Text>\n          <Text>Verified Schools: {data.schools.filter(s => s.verified).length}</Text>\n          <Text>Total Teachers: {data.teachers.length}</Text>\n          <Text>Total Students: {data.students.length}</Text>\n        </View>\n\n        <TouchableOpacity style={[styles.btn, { alignSelf: \"center\", margin: 16 }]} onPress={handleLogout}><Text style={styles.btnText}>Logout</Text></TouchableOpacity>\n      </ScrollView>\n    );\n  }\n\n  // School dashboard\n  if (current.role === \"school\") {\n    const school = data.schools.find(s => s.id === current.user.id);\n    return (\n      <ScrollView style={styles.safe}>\n        <Text style={styles.title}>School Dashboard</Text>\n        <View style={styles.card}>\n          <Text style={styles.h3}>{school.name}</Text>\n          <Text style={styles.small}>Verified: {school.verified ? \"Yes\" : \"No\"}</Text>\n        </View>\n\n        <View style={styles.card}>\n          <Text style={styles.small}>Teachers</Text>\n          {data.teachers.filter(t => t.schoolId === school.id).map(t => (\n            <View key={t.id} style={styles.rowItem}>\n              <View>\n                <Text>{t.name}</Text>\n                <Text style={styles.small}>{t.approved ? \"Approved\" : \"Pending\"}</Text>\n              </View>\n            </View>\n          ))}\n          <TouchableOpacity style={[styles.btn, { marginTop: 8 }]} onPress={async () => {\n            const d = await loadData();\n            const newT = { id: `T-${Math.floor(1000 + Math.random() * 9000)}`, name: `New Teacher ${Date.now() % 1000}`, schoolId: school.id, approved: false };\n            d.teachers.push(newT); d.notifications.push({ id: Date.now(), text: `New teacher registered at ${school.name}` });\n            await saveData(d); reload(); Alert.alert(\"Registered\", \"New teacher registered (demo)\");\n          }}>\n            <Text style={styles.btnText}>Register Teacher (demo)</Text>\n          </TouchableOpacity>\n        </View>\n\n        <TouchableOpacity style={[styles.btn, { alignSelf: \"center\", margin: 16 }]} onPress={handleLogout}><Text style={styles.btnText}>Logout</Text></TouchableOpacity>\n      </ScrollView>\n    );\n  }\n\n  return null;\n}\n\n// ---------- Small components ----------\nfunction LoginCard({ role, onLogin, demoData, onBack }) {\n  const [id, setId] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  return (\n    <View style={styles.card}>\n      <Text style={styles.small}>Login as <Text style={{ fontWeight: \"700\" }}>{role}</Text></Text>\n      <TextInput style={styles.input} placeholder={role === \"student\" ? \"Student ID or name\" : \"ID or name\"} value={id} onChangeText={setId} />\n      <TextInput style={styles.input} placeholder=\"Password (admin: admin123)\" secureTextEntry value={password} onChangeText={setPassword} />\n      <View style={{ flexDirection: \"row\", marginTop: 8 }}>\n        <TouchableOpacity style={styles.btn} onPress={() => onLogin(role, id.trim(), password)}>Login</TouchableOpacity>\n        <TouchableOpacity style={[styles.btn, styles.ghost]} onPress={() => {\n          // quick fill demo\n          if (role === \"student\") setId(demoData.students[0].id);\n          if (role === \"teacher\") setId(demoData.teachers[0].id);\n          if (role === \"school\") setId(demoData.schools[0].id);\n          if (role === \"admin\") { setId(\"admin\"); setPassword(\"admin123\"); }\n        }}>Quick fill</TouchableOpacity>\n      </View>\n      <TouchableOpacity onPress={onBack}><Text style={{ marginTop: 8, color: \"#444\" }}>Back</Text></TouchableOpacity>\n    </View>\n  );\n}\n\nfunction UploadMarksCard({ teacher, reload }) {\n  const [studentId, setStudentId] = useState(\"\");\n  const [marks, setMarks] = useState(\"\");\n  const upload = async () => {\n    const d = await loadData();\n    d.notifications.push({ id: Date.now(), text: `Marks uploaded by ${teacher.name} for ${studentId || \"N/A\"}` });\n    await saveData(d); reload(); Alert.alert(\"Uploaded\", \"Marks uploaded (demo)\");\n  };\n  return (\n    <View style={styles.card}>\n      <Text style={styles.small}>Upload Marks</Text>\n      <TextInput style={styles.input} placeholder=\"Student ID\" value={studentId} onChangeText={setStudentId} />\n      <TextInput style={styles.input} placeholder=\"Marks\" value={marks} onChangeText={setMarks} keyboardType=\"numeric\" />\n      <TouchableOpacity style={styles.btn} onPress={upload}><Text style={styles.btnText}>Upload</Text></TouchableOpacity>\n    </View>\n  );\n}\n\n// ---------- Styles ----------\nconst styles = StyleSheet.create({\n  safe: { flex: 1, paddingTop: 36, backgroundColor: \"#fff\" },\n  center: { flex: 1, justifyContent: \"center\", alignItems: \"center\" },\n  title: { fontSize: 20, fontWeight: \"700\", textAlign: \"center\", marginBottom: 12 },\n  card: { padding: 14, margin: 12, borderRadius: 10, borderWidth: 1, borderColor: \"#eef2f6\", backgroundColor: \"#fff\", shadowColor: \"#000\", shadowOpacity: 0.02, shadowRadius: 6 },\n  small: { fontSize: 13, color: \"#444\" },\n  row: { flexDirection: \"row\", justifyContent: \"space-between\", marginTop: 8 },\n  btn: { backgroundColor: \"#06b6d4\", padding: 10, borderRadius: 8, flex: 1, alignItems: \"center\", margin: 4 },\n  ghost: { backgroundColor: \"#f3f4f6\", borderColor: \"#e6e9ee\", borderWidth: 1 },\n  btnText: { color: \"#fff\", fontWeight: \"700\" },\n  input: { borderWidth: 1, borderColor: \"#eef2f6\", borderRadius: 8, padding: 10, marginTop: 8 },\n  notice: { padding: 8, backgroundColor: \"#f8fafc\", borderRadius: 8, marginTop: 8 },\n  h3: { fontSize: 18, fontWeight: \"700\", marginTop: 6 },\n  rowItem: { flexDirection: \"row\", justifyContent: \"space-between\", alignItems: \"center\", paddingVertical: 8, borderBottomWidth: 0.5, borderColor: \"#f0f2f5\" },\n  ghostBtn: { padding: 8, borderRadius: 8, borderWidth: 1, borderColor: \"#e6e9ee\", backgroundColor: \"#fff\" }\n});", "reactions": {"url": "https://api.github.com/repos/nodejs/node/issues/59915/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/nodejs/node/issues/59915/timeline", "performed_via_github_app": null, "state_reason": "not_planned", "score": 1.0}, {"url": "https://api.github.com/repos/nodejs/node/issues/59866", "repository_url": "https://api.github.com/repos/nodejs/node", "labels_url": "https://api.github.com/repos/nodejs/node/issues/59866/labels{/name}", "comments_url": "https://api.github.com/repos/nodejs/node/issues/59866/comments", "events_url": "https://api.github.com/repos/nodejs/node/issues/59866/events", "html_url": "https://github.com/nodejs/node/issues/59866", "id": 3410040600, "node_id": "I_kwDOAZ7xs87LQRcY", "number": 59866, "title": "Node 24.8.0 has a regression in VM", "user": {"login": "alexander-akait", "id": 4567934, "node_id": "MDQ6VXNlcjQ1Njc5MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4567934?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexander-akait", "html_url": "https://github.com/alexander-akait", "followers_url": "https://api.github.com/users/alexander-akait/followers", "following_url": "https://api.github.com/users/alexander-akait/following{/other_user}", "gists_url": "https://api.github.com/users/alexander-akait/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexander-akait/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexander-akait/subscriptions", "organizations_url": "https://api.github.com/users/alexander-akait/orgs", "repos_url": "https://api.github.com/users/alexander-akait/repos", "events_url": "https://api.github.com/users/alexander-akait/events{/privacy}", "received_events_url": "https://api.github.com/users/alexander-akait/received_events", "type": "User", "user_view_type": "public", "site_admin": false}, "labels": [{"id": 155436007, "node_id": "MDU6TGFiZWwxNTU0MzYwMDc=", "url": "https://api.github.com/repos/nodejs/node/labels/vm", "name": "vm", "color": "bfdadc", "default": false, "description": "Issues and PRs related to the vm subsystem."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2025-09-12T11:10:30Z", "updated_at": "2025-09-17T15:53:41Z", "closed_at": "2025-09-17T15:53:41Z", "author_association": "NONE", "type": null, "active_lock_reason": null, "sub_issues_summary": {"total": 0, "completed": 0, "percent_completed": 0}, "issue_dependencies_summary": {"blocked_by": 0, "total_blocked_by": 0, "blocking": 0, "total_blocking": 0}, "body": "### Version\n\n24.8.0\n\n### Platform\n\n```text\nLinux laptop 6.14.0-29-generic #29~24.04.1-Ubuntu SMP PREEMPT_DYNAMIC Thu Aug 14 16:52:50 UTC 2 x86_64 x86_64 x86_64 GNU/Linux\n\nBut not related to the problem, any platform\n```\n\n### Subsystem\n\n_No response_\n\n### What steps will reproduce the bug?\n\nInvestigating, works fine with 24.7.0\n\nNow:\n\n```\nModule status must be unlinked\n```\n\nRef - https://github.com/webpack/webpack/pull/19901\n\n### How often does it reproduce? Is there a required condition?\n\nAlways\n\n### What is the expected behavior? Why is that the expected behavior?\n\nWorks without any errors\n\n### What do you see instead?\n\nError with `Module status must be unlinked`\n\n### Additional information\n\nI think https://github.com/nodejs/node/pull/59000 create a regression", "reactions": {"url": "https://api.github.com/repos/nodejs/node/issues/59866/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/nodejs/node/issues/59866/timeline", "performed_via_github_app": null, "state_reason": "not_planned", "score": 1.0}, {"url": "https://api.github.com/repos/nodejs/node/issues/59741", "repository_url": "https://api.github.com/repos/nodejs/node", "labels_url": "https://api.github.com/repos/nodejs/node/issues/59741/labels{/name}", "comments_url": "https://api.github.com/repos/nodejs/node/issues/59741/comments", "events_url": "https://api.github.com/repos/nodejs/node/issues/59741/events", "html_url": "https://github.com/nodejs/node/issues/59741", "id": 3378955994, "node_id": "I_kwDOAZ7xs87JZsba", "number": 59741, "title": "client-proxy/test-https-proxy-request-invalid-char-in-url is flaky", "user": {"login": "joyeecheung", "id": 4299420, "node_id": "MDQ6VXNlcjQyOTk0MjA=", "avatar_url": "https://avatars.githubusercontent.com/u/4299420?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joyeecheung", "html_url": "https://github.com/joyeecheung", "followers_url": "https://api.github.com/users/joyeecheung/followers", "following_url": "https://api.github.com/users/joyeecheung/following{/other_user}", "gists_url": "https://api.github.com/users/joyeecheung/gists{/gist_id}", "starred_url": "https://api.github.com/users/joyeecheung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joyeecheung/subscriptions", "organizations_url": "https://api.github.com/users/joyeecheung/orgs", "repos_url": "https://api.github.com/users/joyeecheung/repos", "events_url": "https://api.github.com/users/joyeecheung/events{/privacy}", "received_events_url": "https://api.github.com/users/joyeecheung/received_events", "type": "User", "user_view_type": "public", "site_admin": false}, "labels": [{"id": 637807400, "node_id": "MDU6TGFiZWw2Mzc4MDc0MDA=", "url": "https://api.github.com/repos/nodejs/node/labels/flaky-test", "name": "flaky-test", "color": "ffff00", "default": false, "description": "Issues and PRs related to the tests with unstable failures on the CI."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2025-09-03T08:54:02Z", "updated_at": "2025-09-17T13:59:11Z", "closed_at": "2025-09-17T13:59:11Z", "author_association": "MEMBER", "type": null, "active_lock_reason": null, "sub_issues_summary": {"total": 0, "completed": 0, "percent_completed": 0}, "issue_dependencies_summary": {"blocked_by": 0, "total_blocked_by": 0, "blocking": 0, "total_blocking": 0}, "body": "\n| Reason | <code>client-proxy/test-https-proxy-request-invalid-char-in-url</code> |\n| - | :- |\n| Type | JS_TEST_FAILURE |\n| Failed PR | 3 ([https://github.com/nodejs/node/pull/59587/](https://ci.nodejs.org/job/node-test-pull-request/68946/), [https://github.com/nodejs/node/pull/59734/](https://ci.nodejs.org/job/node-test-pull-request/69013/), [https://github.com/nodejs/node/pull/59717/](https://ci.nodejs.org/job/node-test-pull-request/69014/)) |\n| Appeared | [vm-efv4j](https://ci.nodejs.org/job/node-test-commit-osx/nodes=osx13-x64/66595/console), [vm-a49f1](https://ci.nodejs.org/job/node-test-commit-osx/nodes=osx13-x64/66594/console), [vm-yy37e](https://ci.nodejs.org/job/node-test-commit-osx/nodes=osx13-x64/66523/console) |\n| First CI | https://ci.nodejs.org/job/node-test-pull-request/68946/ |\n| Last CI | https://ci.nodejs.org/job/node-test-pull-request/69014/ |\n\n<details>\n<summary><a href=\"https://ci.nodejs.org/job/node-test-commit-osx/nodes=osx13-x64/66595/console\">Example</a></summary>\n\n```\nnot ok 4333 client-proxy/test-https-proxy-request-invalid-char-in-url\n  ---\n  duration_ms: 413.52500\n  severity: fail\n  exitcode: 1\n  stack: |-\n    #6 eneded response for: 'https://local\\rhost:55386/carriage-return-in-host'\n    #5 eneded response for: 'https://local\\r\\nhost:55386/crlf-in-host'\n    #4 eneded response for: 'https://local\\nhost:55386/newline-in-host'\n    #3 eneded response for: 'https://localhost:5\\r5386/carriage-return-in-port'\n    #2 eneded response for: 'https://localhost:5\\n5386/newline-in-port'\n    #1 eneded response for: 'https://localhost:5\\r\\n5386/crlf-in-port'\n    node:assert:147\n      throw new AssertionError(obj);\n      ^\n    \n    AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n    + actual - expected\n    \n    + Set(8) {\n    - Set(6) {\n        {\n    +     error: Error [ERR_STREAM_WRITE_AFTER_END]: write after end\n    +         at _write (node:internal/streams/writable:487:11)\n    +         at Writable.write (node:internal/streams/writable:508:10)\n    +      ...\n```\n</details>\n\nFrom https://github.com/nodejs/reliability/blob/main/reports/2025-09-03.md", "reactions": {"url": "https://api.github.com/repos/nodejs/node/issues/59741/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/nodejs/node/issues/59741/timeline", "performed_via_github_app": null, "state_reason": "completed", "score": 1.0}, {"url": "https://api.github.com/repos/nodejs/node/issues/58223", "repository_url": "https://api.github.com/repos/nodejs/node", "labels_url": "https://api.github.com/repos/nodejs/node/issues/58223/labels{/name}", "comments_url": "https://api.github.com/repos/nodejs/node/issues/58223/comments", "events_url": "https://api.github.com/repos/nodejs/node/issues/58223/events", "html_url": "https://github.com/nodejs/node/issues/58223", "id": 3047366292, "node_id": "I_kwDOAZ7xs861ox6U", "number": 58223, "title": "Node 22 broke `readdir` on Windows UNC paths", "user": {"login": "felipecrs", "id": 29582865, "node_id": "MDQ6VXNlcjI5NTgyODY1", "avatar_url": "https://avatars.githubusercontent.com/u/29582865?v=4", "gravatar_id": "", "url": "https://api.github.com/users/felipecrs", "html_url": "https://github.com/felipecrs", "followers_url": "https://api.github.com/users/felipecrs/followers", "following_url": "https://api.github.com/users/felipecrs/following{/other_user}", "gists_url": "https://api.github.com/users/felipecrs/gists{/gist_id}", "starred_url": "https://api.github.com/users/felipecrs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/felipecrs/subscriptions", "organizations_url": "https://api.github.com/users/felipecrs/orgs", "repos_url": "https://api.github.com/users/felipecrs/repos", "events_url": "https://api.github.com/users/felipecrs/events{/privacy}", "received_events_url": "https://api.github.com/users/felipecrs/received_events", "type": "User", "user_view_type": "public", "site_admin": false}, "labels": [{"id": 151728674, "node_id": "MDU6TGFiZWwxNTE3Mjg2NzQ=", "url": "https://api.github.com/repos/nodejs/node/labels/confirmed-bug", "name": "confirmed-bug", "color": "fc2929", "default": false, "description": "Issues with confirmed bugs."}, {"id": 151728677, "node_id": "MDU6TGFiZWwxNTE3Mjg2Nzc=", "url": "https://api.github.com/repos/nodejs/node/labels/help%20wanted", "name": "help wanted", "color": "159818", "default": true, "description": "Issues that need assistance from volunteers or PRs that need help to proceed."}, {"id": 155435785, "node_id": "MDU6TGFiZWwxNTU0MzU3ODU=", "url": "https://api.github.com/repos/nodejs/node/labels/fs", "name": "fs", "color": "0052cc", "default": false, "description": "Issues and PRs related to the fs subsystem / file system."}, {"id": 166236401, "node_id": "MDU6TGFiZWwxNjYyMzY0MDE=", "url": "https://api.github.com/repos/nodejs/node/labels/windows", "name": "windows", "color": "9944dd", "default": false, "description": "Issues and PRs related to the Windows platform."}, {"id": 585819831, "node_id": "MDU6TGFiZWw1ODU4MTk4MzE=", "url": "https://api.github.com/repos/nodejs/node/labels/regression", "name": "regression", "color": "b60205", "default": false, "description": "Issues related to regressions."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2025-05-07T23:13:17Z", "updated_at": "2025-09-17T11:15:53Z", "closed_at": "2025-09-17T11:15:53Z", "author_association": "NONE", "type": null, "active_lock_reason": null, "sub_issues_summary": {"total": 0, "completed": 0, "percent_completed": 0}, "issue_dependencies_summary": {"blocked_by": 0, "total_blocked_by": 0, "blocking": 0, "total_blocking": 0}, "body": "### Version\n\n22.15.0\n\n### Platform\n\n```text\nMicrosoft Windows NT 10.0.26100.0 x64\n```\n\n### Subsystem\n\nfs\n\n### What steps will reproduce the bug?\n\n```console\n~\\repos\\clipboard-sync \uf412v0.16.2 \u276f volta run --node 20 node --eval 'console.log(require(\"fs\").readdirSync(\"S:\\\\\\\\\"))'  20:09:08 \n[ 'FELIPE-DESKTOP.is-receiving.txt' ]\n\n~\\repos\\clipboard-sync \uf412v0.16.2 \u276f volta run --node 22 node --eval 'console.log(require(\"fs\").readdirSync(\"S:\\\\\\\\\"))'  20:09:58 \nnode:fs:1584\n  const result = binding.readdir(\n                         ^\n\nError: ENOENT: no such file or directory, scandir 'S:\\\\'\n    at Object.readdirSync (node:fs:1584:26)\n    at [eval]:1:27\n    at runScriptInThisContext (node:internal/vm:209:10)\n    at node:internal/process/execution:449:12\n    at [eval]-wrapper:6:24\n    at runScriptInContext (node:internal/process/execution:447:60)\n    at evalFunction (node:internal/process/execution:87:30)\n    at evalScript (node:internal/process/execution:99:3)\n    at node:internal/main/eval_string:74:3 {\n  errno: -4058,\n  code: 'ENOENT',\n  syscall: 'scandir',\n  path: 'S:\\\\\\\\'\n}\n\nNode.js v22.15.0\n```\n\n### How often does it reproduce? Is there a required condition?\n\nAlways.\n\n### What is the expected behavior? Why is that the expected behavior?\n\nTo work, like it always used to.\n\n### What do you see instead?\n\nENOENT.\n\n### Additional information\n\nI noticed this when upgraded [my application](https://github.com/felipecrs/clipboard-sync) from Electron 34 to 35, which also upgraded Node from 20 to 22. Maybe this is related to:\n\n- https://github.com/nodejs/node/issues/51802\n\nWhatever was done there may have broken other cases.", "reactions": {"url": "https://api.github.com/repos/nodejs/node/issues/58223/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/nodejs/node/issues/58223/timeline", "performed_via_github_app": null, "state_reason": "completed", "score": 1.0}, {"url": "https://api.github.com/repos/nodejs/node/issues/59733", "repository_url": "https://api.github.com/repos/nodejs/node", "labels_url": "https://api.github.com/repos/nodejs/node/issues/59733/labels{/name}", "comments_url": "https://api.github.com/repos/nodejs/node/issues/59733/comments", "events_url": "https://api.github.com/repos/nodejs/node/issues/59733/events", "html_url": "https://github.com/nodejs/node/issues/59733", "id": 3376555945, "node_id": "I_kwDOAZ7xs87JQiep", "number": 59733, "title": "Significant heap usage regression in Node 22.19.0", "user": {"login": "michaelsmithxyz", "id": 826210, "node_id": "MDQ6VXNlcjgyNjIxMA==", "avatar_url": "https://avatars.githubusercontent.com/u/826210?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelsmithxyz", "html_url": "https://github.com/michaelsmithxyz", "followers_url": "https://api.github.com/users/michaelsmithxyz/followers", "following_url": "https://api.github.com/users/michaelsmithxyz/following{/other_user}", "gists_url": "https://api.github.com/users/michaelsmithxyz/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelsmithxyz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelsmithxyz/subscriptions", "organizations_url": "https://api.github.com/users/michaelsmithxyz/orgs", "repos_url": "https://api.github.com/users/michaelsmithxyz/repos", "events_url": "https://api.github.com/users/michaelsmithxyz/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelsmithxyz/received_events", "type": "User", "user_view_type": "public", "site_admin": false}, "labels": [{"id": 2930092013, "node_id": "MDU6TGFiZWwyOTMwMDkyMDEz", "url": "https://api.github.com/repos/nodejs/node/labels/loaders", "name": "loaders", "color": "7DE2DE", "default": false, "description": "Issues and PRs related to ES module loaders"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2025-09-02T15:40:35Z", "updated_at": "2025-09-17T10:26:53Z", "closed_at": "2025-09-17T10:26:53Z", "author_association": "CONTRIBUTOR", "type": null, "active_lock_reason": null, "sub_issues_summary": {"total": 0, "completed": 0, "percent_completed": 0}, "issue_dependencies_summary": {"blocked_by": 0, "total_blocked_by": 0, "blocking": 0, "total_blocking": 0}, "body": "### Version\n\nv22.19.0\n\n### Platform\n\n```text\nDarwin ZG-F3FWLW4DJJ 24.6.0 Darwin Kernel Version 24.6.0: Mon Jul 14 11:28:30 PDT 2025; root:xnu-11417.140.69~1/RELEASE_ARM64_T6030 arm64\n```\n\n### Subsystem\n\n_No response_\n\n### What steps will reproduce the bug?\n\nNode 22.19.0 uses significantly more heap memory than 22.18.0. I think it's because of [this change](https://github.com/nodejs/node/pull/59086), which introduces a cache for `package.json` metadata. Some packages are structured in such a way that this cache ends up quite large. The reproduction provided here uses `date-fns`, which exhibits this clearly.\n\nTo reproduce, compare heap snapshots for a script like this:\n```json\n{\n  \"dependencies\": {\n    \"date-fns\": \"^4.1.0\"\n  }\n}\n```\n```javascript\nconst http = require('node:http');\nconst {\n  formatISO,\n} = require('date-fns');\n\nconst server = http.createServer((req, res) => {\n  if (req.method === 'GET') {\n    res.writeHead(200);\n    res.write(`${formatISO(new Date())}\\n`);\n    res.end();\n  }\n});\n\nserver.listen(3000);\n```\n\nIn my testing, the total heap size for this script on 22.18 is ~7.2 MB, whereas on 22.19 it's ~28.9 MB. This was originally detected in a medium size application where an upgrade to 22.19 ballooned heap usage by more than 50 MB. Inspecting a heap snapshot shows that much of this increase is accounted for by objects retained by `nearestParentPackageJSONCache`\n\n### How often does it reproduce? Is there a required condition?\n\nIt reproduces consistently on 22.19.0\n\n### What is the expected behavior? Why is that the expected behavior?\n\nI would not expect such a significant increase in heap usage\n\n### What do you see instead?\n\nA significant increase in heap usage\n\n### Additional information\n\nA zip containing heap snapshots for the reproduction script is attached\n\n[HeapSnapshots.zip](https://github.com/user-attachments/files/22098470/HeapSnapshots.zip)", "reactions": {"url": "https://api.github.com/repos/nodejs/node/issues/59733/reactions", "total_count": 7, "+1": 7, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/nodejs/node/issues/59733/timeline", "performed_via_github_app": null, "state_reason": "completed", "score": 1.0}, {"url": "https://api.github.com/repos/nodejs/node/issues/45821", "repository_url": "https://api.github.com/repos/nodejs/node", "labels_url": "https://api.github.com/repos/nodejs/node/issues/45821/labels{/name}", "comments_url": "https://api.github.com/repos/nodejs/node/issues/45821/comments", "events_url": "https://api.github.com/repos/nodejs/node/issues/45821/events", "html_url": "https://github.com/nodejs/node/issues/45821", "id": 1490460387, "node_id": "I_kwDOAZ7xs85Y1p7j", "number": 45821, "title": "The stream/promises API is poorly documented", "user": {"login": "NemoStein", "id": 2738812, "node_id": "MDQ6VXNlcjI3Mzg4MTI=", "avatar_url": "https://avatars.githubusercontent.com/u/2738812?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NemoStein", "html_url": "https://github.com/NemoStein", "followers_url": "https://api.github.com/users/NemoStein/followers", "following_url": "https://api.github.com/users/NemoStein/following{/other_user}", "gists_url": "https://api.github.com/users/NemoStein/gists{/gist_id}", "starred_url": "https://api.github.com/users/NemoStein/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NemoStein/subscriptions", "organizations_url": "https://api.github.com/users/NemoStein/orgs", "repos_url": "https://api.github.com/users/NemoStein/repos", "events_url": "https://api.github.com/users/NemoStein/events{/privacy}", "received_events_url": "https://api.github.com/users/NemoStein/received_events", "type": "User", "user_view_type": "public", "site_admin": false}, "labels": [{"id": 155267517, "node_id": "MDU6TGFiZWwxNTUyNjc1MTc=", "url": "https://api.github.com/repos/nodejs/node/labels/doc", "name": "doc", "color": "006b75", "default": false, "description": "Issues and PRs related to the documentations."}, {"id": 155435883, "node_id": "MDU6TGFiZWwxNTU0MzU4ODM=", "url": "https://api.github.com/repos/nodejs/node/labels/stream", "name": "stream", "color": "c7def8", "default": false, "description": "Issues and PRs related to the stream subsystem."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-12-11T21:25:07Z", "updated_at": "2025-09-17T01:42:08Z", "closed_at": "2022-12-15T15:34:24Z", "author_association": "NONE", "type": null, "active_lock_reason": null, "sub_issues_summary": {"total": 0, "completed": 0, "percent_completed": 0}, "issue_dependencies_summary": {"blocked_by": 0, "total_blocked_by": 0, "blocking": 0, "total_blocking": 0}, "body": "### Affected URL(s)\n\nhttps://nodejs.org/api/stream.html#streams-promises-api\n\n### Description of the problem\n\nThe stream docs page doesn't describe the signature of `node:stream/promises` `pipeline` & `finished` functions.\r\n\r\nThis is aggravated by the fact that the promise version of `stream.pipeline()` accepts an options object as last parameter, but the docs doesn't document its properties properly.\r\n\r\nThe only reference to it is the following paragraph:\r\n> The pipeline API provides a promise version, which can also receive an options argument as the last parameter with a signal [\\<AbortSignal>](https://nodejs.org/api/globals.html#class-abortsignal) property. When the signal is aborted, destroy will be called on the underlying pipeline, with an AbortError.\r\n\r\nAlthough its note about the `options.signal` property, the paragraph leaves the property `end: boolean` (https://github.com/nodejs/node/issues/34805#issuecomment-1009739825) completely undocumented.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/nodejs/node/issues/45821/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/nodejs/node/issues/45821/timeline", "performed_via_github_app": null, "state_reason": "completed", "score": 1.0}, {"url": "https://api.github.com/repos/nodejs/node/issues/57074", "repository_url": "https://api.github.com/repos/nodejs/node", "labels_url": "https://api.github.com/repos/nodejs/node/issues/57074/labels{/name}", "comments_url": "https://api.github.com/repos/nodejs/node/issues/57074/comments", "events_url": "https://api.github.com/repos/nodejs/node/issues/57074/events", "html_url": "https://github.com/nodejs/node/issues/57074", "id": 2855638551, "node_id": "I_kwDOAZ7xs86qNZYX", "number": 57074, "title": "Ability to allow any application to be easily extensible by installing and running any node package at runtime", "user": {"login": "Ingenu1ty", "id": 138471707, "node_id": "U_kgDOCEDpGw", "avatar_url": "https://avatars.githubusercontent.com/u/138471707?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ingenu1ty", "html_url": "https://github.com/Ingenu1ty", "followers_url": "https://api.github.com/users/Ingenu1ty/followers", "following_url": "https://api.github.com/users/Ingenu1ty/following{/other_user}", "gists_url": "https://api.github.com/users/Ingenu1ty/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ingenu1ty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ingenu1ty/subscriptions", "organizations_url": "https://api.github.com/users/Ingenu1ty/orgs", "repos_url": "https://api.github.com/users/Ingenu1ty/repos", "events_url": "https://api.github.com/users/Ingenu1ty/events{/privacy}", "received_events_url": "https://api.github.com/users/Ingenu1ty/received_events", "type": "User", "user_view_type": "public", "site_admin": false}, "labels": [{"id": 207445406, "node_id": "MDU6TGFiZWwyMDc0NDU0MDY=", "url": "https://api.github.com/repos/nodejs/node/labels/feature%20request", "name": "feature request", "color": "0D7BDE", "default": false, "description": "Issues that request new features to be added to Node.js."}, {"id": 3774588687, "node_id": "LA_kwDOAZ7xs87g-6cP", "url": "https://api.github.com/repos/nodejs/node/labels/stale", "name": "stale", "color": "f9d0c4", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2025-02-15T18:11:28Z", "updated_at": "2025-09-17T01:28:38Z", "closed_at": "2025-09-17T01:28:38Z", "author_association": "NONE", "type": null, "active_lock_reason": null, "sub_issues_summary": {"total": 0, "completed": 0, "percent_completed": 0}, "issue_dependencies_summary": {"blocked_by": 0, "total_blocked_by": 0, "blocking": 0, "total_blocking": 0}, "body": "### What is the problem this feature will solve?\n\nAbility to make any application to be easily extensible by installing and running any node package **at runtime**, without deployments or server customization and allow app users to decide what plugin/extension to install. \n\n### What is the feature you are proposing to solve the problem?\n\nBasically, I propose to implement natively the functionality that is provided by the [live-plugin-manager](https://github.com/davideicardi/live-plugin-manager). The problem here is that this has certain [limitations](https://github.com/davideicardi/live-plugin-manager?tab=readme-ov-file#known-limitations) and not enough support. So I think it would be great to implement this functionality **natively** in nodejs.\n\n### What alternatives have you considered?\n\n[live-plugin-manager](https://github.com/davideicardi/live-plugin-manager)", "reactions": {"url": "https://api.github.com/repos/nodejs/node/issues/57074/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/nodejs/node/issues/57074/timeline", "performed_via_github_app": null, "state_reason": "not_planned", "score": 1.0}, {"url": "https://api.github.com/repos/nodejs/node/issues/59906", "repository_url": "https://api.github.com/repos/nodejs/node", "labels_url": "https://api.github.com/repos/nodejs/node/issues/59906/labels{/name}", "comments_url": "https://api.github.com/repos/nodejs/node/issues/59906/comments", "events_url": "https://api.github.com/repos/nodejs/node/issues/59906/events", "html_url": "https://github.com/nodejs/node/issues/59906", "id": 3423431265, "node_id": "I_kwDOAZ7xs87MDWph", "number": 59906, "title": "Rpg", "user": {"login": "ripjoestar", "id": 214572099, "node_id": "U_kgDODMocQw", "avatar_url": "https://avatars.githubusercontent.com/u/214572099?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ripjoestar", "html_url": "https://github.com/ripjoestar", "followers_url": "https://api.github.com/users/ripjoestar/followers", "following_url": "https://api.github.com/users/ripjoestar/following{/other_user}", "gists_url": "https://api.github.com/users/ripjoestar/gists{/gist_id}", "starred_url": "https://api.github.com/users/ripjoestar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ripjoestar/subscriptions", "organizations_url": "https://api.github.com/users/ripjoestar/orgs", "repos_url": "https://api.github.com/users/ripjoestar/repos", "events_url": "https://api.github.com/users/ripjoestar/events{/privacy}", "received_events_url": "https://api.github.com/users/ripjoestar/received_events", "type": "User", "user_view_type": "public", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2025-09-16T19:11:07Z", "updated_at": "2025-09-16T22:23:50Z", "closed_at": "2025-09-16T22:23:43Z", "author_association": "NONE", "type": null, "active_lock_reason": "spam", "sub_issues_summary": {"total": 0, "completed": 0, "percent_completed": 0}, "issue_dependencies_summary": {"blocked_by": 0, "total_blocked_by": 0, "blocking": 0, "total_blocking": 0}, "body": ".", "reactions": {"url": "https://api.github.com/repos/nodejs/node/issues/59906/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/nodejs/node/issues/59906/timeline", "performed_via_github_app": null, "state_reason": "completed", "score": 1.0}, {"url": "https://api.github.com/repos/nodejs/node/issues/59907", "repository_url": "https://api.github.com/repos/nodejs/node", "labels_url": "https://api.github.com/repos/nodejs/node/issues/59907/labels{/name}", "comments_url": "https://api.github.com/repos/nodejs/node/issues/59907/comments", "events_url": "https://api.github.com/repos/nodejs/node/issues/59907/events", "html_url": "https://github.com/nodejs/node/issues/59907", "id": 3423494704, "node_id": "I_kwDOAZ7xs87MDmIw", "number": 59907, "title": "Review unable to be added for PR #59905", "user": {"login": "thomasklemm", "id": 1100176, "node_id": "MDQ6VXNlcjExMDAxNzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1100176?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thomasklemm", "html_url": "https://github.com/thomasklemm", "followers_url": "https://api.github.com/users/thomasklemm/followers", "following_url": "https://api.github.com/users/thomasklemm/following{/other_user}", "gists_url": "https://api.github.com/users/thomasklemm/gists{/gist_id}", "starred_url": "https://api.github.com/users/thomasklemm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thomasklemm/subscriptions", "organizations_url": "https://api.github.com/users/thomasklemm/orgs", "repos_url": "https://api.github.com/users/thomasklemm/repos", "events_url": "https://api.github.com/users/thomasklemm/events{/privacy}", "received_events_url": "https://api.github.com/users/thomasklemm/received_events", "type": "User", "user_view_type": "public", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2025-09-16T19:31:13Z", "updated_at": "2025-09-16T21:39:29Z", "closed_at": "2025-09-16T21:39:29Z", "author_association": "NONE", "type": null, "active_lock_reason": null, "sub_issues_summary": {"total": 0, "completed": 0, "percent_completed": 0}, "issue_dependencies_summary": {"blocked_by": 0, "total_blocked_by": 0, "blocking": 0, "total_blocking": 0}, "body": "I attempted to add a review to pull request #59905, but it could not be resolved. Further investigation is needed to understand the status of the pull request. Please provide any updates or corrections necessary for the review process.", "reactions": {"url": "https://api.github.com/repos/nodejs/node/issues/59907/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/nodejs/node/issues/59907/timeline", "performed_via_github_app": null, "state_reason": "completed", "score": 1.0}, {"url": "https://api.github.com/repos/nodejs/node/issues/59103", "repository_url": "https://api.github.com/repos/nodejs/node", "labels_url": "https://api.github.com/repos/nodejs/node/issues/59103/labels{/name}", "comments_url": "https://api.github.com/repos/nodejs/node/issues/59103/comments", "events_url": "https://api.github.com/repos/nodejs/node/issues/59103/events", "html_url": "https://github.com/nodejs/node/issues/59103", "id": 3239706238, "node_id": "I_kwDOAZ7xs87BGf5-", "number": 59103, "title": "Expose the signature algorithm in X509Certificate", "user": {"login": "patrickrbc", "id": 2023252, "node_id": "MDQ6VXNlcjIwMjMyNTI=", "avatar_url": "https://avatars.githubusercontent.com/u/2023252?v=4", "gravatar_id": "", "url": "https://api.github.com/users/patrickrbc", "html_url": "https://github.com/patrickrbc", "followers_url": "https://api.github.com/users/patrickrbc/followers", "following_url": "https://api.github.com/users/patrickrbc/following{/other_user}", "gists_url": "https://api.github.com/users/patrickrbc/gists{/gist_id}", "starred_url": "https://api.github.com/users/patrickrbc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/patrickrbc/subscriptions", "organizations_url": "https://api.github.com/users/patrickrbc/orgs", "repos_url": "https://api.github.com/users/patrickrbc/repos", "events_url": "https://api.github.com/users/patrickrbc/events{/privacy}", "received_events_url": "https://api.github.com/users/patrickrbc/received_events", "type": "User", "user_view_type": "public", "site_admin": false}, "labels": [{"id": 207445406, "node_id": "MDU6TGFiZWwyMDc0NDU0MDY=", "url": "https://api.github.com/repos/nodejs/node/labels/feature%20request", "name": "feature request", "color": "0D7BDE", "default": false, "description": "Issues that request new features to be added to Node.js."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2025-07-17T13:59:08Z", "updated_at": "2025-09-16T19:27:06Z", "closed_at": "2025-09-16T19:27:06Z", "author_association": "CONTRIBUTOR", "type": null, "active_lock_reason": null, "sub_issues_summary": {"total": 0, "completed": 0, "percent_completed": 0}, "issue_dependencies_summary": {"blocked_by": 0, "total_blocked_by": 0, "blocking": 0, "total_blocking": 0}, "body": "### What is the problem this feature will solve?\n\n\n  X509Certificate class was a great addition to help us handling certificates,\n  however it seems that one handy property is not available through its API, the\n  identifier of the algorithm used to sign the certificate.\n\n  I'm not sure if I am missing something here but I think it is pretty common\n  for to have the name exposed like in the openssl's text output:\n\n  ```\n    Signature Algorithm: ecdsa-with-SHA384\n  ```\n\n\n### What is the feature you are proposing to solve the problem?\n\n Expose a new property with signature algorithm's name the like:\n\n```\nX509Certificate {\n  subject: 'CN=example.com',\n  subjectAltName: 'DNS:example.com',\n  issuer: \"C=US\\nO=Let's Encrypt\\nCN=E6\",\n  infoAccess: 'CA Issuers - URI:http://e6.i.lencr.org/',\n  ...\n  ...\n  signatureAlgorithm: 'ecdsa-with-SHA384'\n}\n```\n\n  This looks like a pretty straight forward addition to the existing, I would\n  like to try, but I wanted to hear if there is any reason why this property is\n  not there in the first place.\n\n\n### What alternatives have you considered?\n\nInvoking `openssl x509 -in cert.pem -text` to get the signature algorithm,\nbut I think it is a bit cumbersome when we could use the X509Certificate.", "reactions": {"url": "https://api.github.com/repos/nodejs/node/issues/59103/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/nodejs/node/issues/59103/timeline", "performed_via_github_app": null, "state_reason": "completed", "score": 1.0}, {"url": "https://api.github.com/repos/nodejs/node/issues/59878", "repository_url": "https://api.github.com/repos/nodejs/node", "labels_url": "https://api.github.com/repos/nodejs/node/issues/59878/labels{/name}", "comments_url": "https://api.github.com/repos/nodejs/node/issues/59878/comments", "events_url": "https://api.github.com/repos/nodejs/node/issues/59878/events", "html_url": "https://github.com/nodejs/node/issues/59878", "id": 3413129118, "node_id": "I_kwDOAZ7xs87LcDee", "number": 59878, "title": "Error: Process completed with exit code 1.", "user": {"login": "DMPMFSQHFK10", "id": 225871578, "node_id": "U_kgDODXaG2g", "avatar_url": "https://avatars.githubusercontent.com/u/225871578?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DMPMFSQHFK10", "html_url": "https://github.com/DMPMFSQHFK10", "followers_url": "https://api.github.com/users/DMPMFSQHFK10/followers", "following_url": "https://api.github.com/users/DMPMFSQHFK10/following{/other_user}", "gists_url": "https://api.github.com/users/DMPMFSQHFK10/gists{/gist_id}", "starred_url": "https://api.github.com/users/DMPMFSQHFK10/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DMPMFSQHFK10/subscriptions", "organizations_url": "https://api.github.com/users/DMPMFSQHFK10/orgs", "repos_url": "https://api.github.com/users/DMPMFSQHFK10/repos", "events_url": "https://api.github.com/users/DMPMFSQHFK10/events{/privacy}", "received_events_url": "https://api.github.com/users/DMPMFSQHFK10/received_events", "type": "User", "user_view_type": "public", "site_admin": false}, "labels": [{"id": 155267517, "node_id": "MDU6TGFiZWwxNTUyNjc1MTc=", "url": "https://api.github.com/repos/nodejs/node/labels/doc", "name": "doc", "color": "006b75", "default": false, "description": "Issues and PRs related to the documentations."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2025-09-13T10:29:03Z", "updated_at": "2025-09-16T11:24:46Z", "closed_at": "2025-09-13T19:49:50Z", "author_association": "NONE", "type": null, "active_lock_reason": null, "sub_issues_summary": {"total": 0, "completed": 0, "percent_completed": 0}, "issue_dependencies_summary": {"blocked_by": 0, "total_blocked_by": 0, "blocking": 0, "total_blocking": 0}, "body": "### Affected URL(s)\n\n_No response_\n\n### Description of the problem\n\n/[](url)", "reactions": {"url": "https://api.github.com/repos/nodejs/node/issues/59878/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/nodejs/node/issues/59878/timeline", "performed_via_github_app": null, "state_reason": "not_planned", "score": 1.0}, {"url": "https://api.github.com/repos/nodejs/node/issues/58423", "repository_url": "https://api.github.com/repos/nodejs/node", "labels_url": "https://api.github.com/repos/nodejs/node/issues/58423/labels{/name}", "comments_url": "https://api.github.com/repos/nodejs/node/issues/58423/comments", "events_url": "https://api.github.com/repos/nodejs/node/issues/58423/events", "html_url": "https://github.com/nodejs/node/issues/58423", "id": 3083924755, "node_id": "I_kwDOAZ7xs8630PUT", "number": 58423, "title": "Update npm to v11 in Node.js v22", "user": {"login": "mcollina", "id": 52195, "node_id": "MDQ6VXNlcjUyMTk1", "avatar_url": "https://avatars.githubusercontent.com/u/52195?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcollina", "html_url": "https://github.com/mcollina", "followers_url": "https://api.github.com/users/mcollina/followers", "following_url": "https://api.github.com/users/mcollina/following{/other_user}", "gists_url": "https://api.github.com/users/mcollina/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcollina/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcollina/subscriptions", "organizations_url": "https://api.github.com/users/mcollina/orgs", "repos_url": "https://api.github.com/users/mcollina/repos", "events_url": "https://api.github.com/users/mcollina/events{/privacy}", "received_events_url": "https://api.github.com/users/mcollina/received_events", "type": "User", "user_view_type": "public", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 18, "created_at": "2025-05-22T16:21:31Z", "updated_at": "2025-09-15T14:23:34Z", "closed_at": "2025-09-15T14:23:34Z", "author_association": "MEMBER", "type": null, "active_lock_reason": null, "sub_issues_summary": {"total": 0, "completed": 0, "percent_completed": 0}, "issue_dependencies_summary": {"blocked_by": 0, "total_blocked_by": 0, "blocking": 0, "total_blocking": 0}, "body": "We should update NPM to v11 in Node.js v22 to work around this bug https://github.com/npm/cli/pull/8184.\n\nIt's causing some friction with a lot of users.\n\nWhat are the breaking changes? According to https://github.com/npm/cli/blob/latest/CHANGELOG.md doesn't look like there are many.\n\ncc @nodejs/npm @nodejs/releasers ", "reactions": {"url": "https://api.github.com/repos/nodejs/node/issues/58423/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/nodejs/node/issues/58423/timeline", "performed_via_github_app": null, "state_reason": "completed", "score": 1.0}, {"url": "https://api.github.com/repos/nodejs/node/issues/50894", "repository_url": "https://api.github.com/repos/nodejs/node", "labels_url": "https://api.github.com/repos/nodejs/node/issues/50894/labels{/name}", "comments_url": "https://api.github.com/repos/nodejs/node/issues/50894/comments", "events_url": "https://api.github.com/repos/nodejs/node/issues/50894/events", "html_url": "https://github.com/nodejs/node/issues/50894", "id": 2009481403, "node_id": "I_kwDOAZ7xs853xkC7", "number": 50894, "title": "Apply source maps to profiles", "user": {"login": "mbrevda", "id": 293004, "node_id": "MDQ6VXNlcjI5MzAwNA==", "avatar_url": "https://avatars.githubusercontent.com/u/293004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbrevda", "html_url": "https://github.com/mbrevda", "followers_url": "https://api.github.com/users/mbrevda/followers", "following_url": "https://api.github.com/users/mbrevda/following{/other_user}", "gists_url": "https://api.github.com/users/mbrevda/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbrevda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbrevda/subscriptions", "organizations_url": "https://api.github.com/users/mbrevda/orgs", "repos_url": "https://api.github.com/users/mbrevda/repos", "events_url": "https://api.github.com/users/mbrevda/events{/privacy}", "received_events_url": "https://api.github.com/users/mbrevda/received_events", "type": "User", "user_view_type": "public", "site_admin": false}, "labels": [{"id": 207445406, "node_id": "MDU6TGFiZWwyMDc0NDU0MDY=", "url": "https://api.github.com/repos/nodejs/node/labels/feature%20request", "name": "feature request", "color": "0D7BDE", "default": false, "description": "Issues that request new features to be added to Node.js."}, {"id": 1653954544, "node_id": "MDU6TGFiZWwxNjUzOTU0NTQ0", "url": "https://api.github.com/repos/nodejs/node/labels/source%20maps", "name": "source maps", "color": "dd82d0", "default": false, "description": "Issues and PRs related to source map support."}, {"id": 3774588687, "node_id": "LA_kwDOAZ7xs87g-6cP", "url": "https://api.github.com/repos/nodejs/node/labels/stale", "name": "stale", "color": "f9d0c4", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2023-11-24T10:27:28Z", "updated_at": "2025-09-15T13:14:10Z", "closed_at": "2025-08-18T01:30:08Z", "author_association": "NONE", "type": null, "active_lock_reason": null, "sub_issues_summary": {"total": 0, "completed": 0, "percent_completed": 0}, "issue_dependencies_summary": {"blocked_by": 0, "total_blocked_by": 0, "blocking": 0, "total_blocking": 0}, "body": "### What is the problem this feature will solve?\n\nWhen debugging bundled/compiled/minified code, it's difficult to read a profile as locations and many function names point to the compiled code.\n\n### What is the feature you are proposing to solve the problem?\n\nApply source maps to profiles (perhaps when `--enable-source-maps` is passed).\n\n### What alternatives have you considered?\n\npost-augmentation (via the [source-map](https://www.npmjs.com/package/source-map) package), or other tools (such as [speedscope](https://www.speedscope.app/)) which claim to be able to apply sourcemaps (but dont [always work](https://github.com/jlfwong/speedscope/issues/446)).", "reactions": {"url": "https://api.github.com/repos/nodejs/node/issues/50894/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/nodejs/node/issues/50894/timeline", "performed_via_github_app": null, "state_reason": "not_planned", "score": 1.0}, {"url": "https://api.github.com/repos/nodejs/node/issues/58741", "repository_url": "https://api.github.com/repos/nodejs/node", "labels_url": "https://api.github.com/repos/nodejs/node/issues/58741/labels{/name}", "comments_url": "https://api.github.com/repos/nodejs/node/issues/58741/comments", "events_url": "https://api.github.com/repos/nodejs/node/issues/58741/events", "html_url": "https://github.com/nodejs/node/issues/58741", "id": 3153380698, "node_id": "I_kwDOAZ7xs8679MVa", "number": 58741, "title": "Build Error on riscv64", "user": {"login": "alitariq4589", "id": 99069972, "node_id": "U_kgDOBeewFA", "avatar_url": "https://avatars.githubusercontent.com/u/99069972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alitariq4589", "html_url": "https://github.com/alitariq4589", "followers_url": "https://api.github.com/users/alitariq4589/followers", "following_url": "https://api.github.com/users/alitariq4589/following{/other_user}", "gists_url": "https://api.github.com/users/alitariq4589/gists{/gist_id}", "starred_url": "https://api.github.com/users/alitariq4589/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alitariq4589/subscriptions", "organizations_url": "https://api.github.com/users/alitariq4589/orgs", "repos_url": "https://api.github.com/users/alitariq4589/repos", "events_url": "https://api.github.com/users/alitariq4589/events{/privacy}", "received_events_url": "https://api.github.com/users/alitariq4589/received_events", "type": "User", "user_view_type": "public", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2025-06-17T12:46:26Z", "updated_at": "2025-09-15T09:02:16Z", "closed_at": "2025-09-15T09:02:16Z", "author_association": "NONE", "type": null, "active_lock_reason": null, "sub_issues_summary": {"total": 0, "completed": 0, "percent_completed": 0}, "issue_dependencies_summary": {"blocked_by": 0, "total_blocked_by": 0, "blocking": 0, "total_blocking": 0}, "body": "### Version\n\ntrunk of repo\n\n### Platform\n\n```text\nLinux pioneer-128G-1 6.6.66-pioneer #2024.12.27.05.50+c30fe9b9c SMP Fri Dec 27 06:19:30 UTC 2024 riscv64 GNU/Linux\n```\n\n### Subsystem\n\n_No response_\n\n### What steps will reproduce the bug?\n\ncd node\n./configure --prefix=$(readlink -f ../installed_binaries) --openssl-no-asm --dest-cpu=riscv64\nmake -j32\n\nComplete CI file can be found here: https://github.com/alitariq4589/cloud-v-builds/blob/main/nodejs\n\n### How often does it reproduce? Is there a required condition?\n\nEvery time I build the master branch now, this issue appears in riscv64 on debian trixie\n\n### What is the expected behavior? Why is that the expected behavior?\n\nTo build properly from source\n\n### What do you see instead?\n\nComplete log of the build can be found here: https://dash.cloud-v.co/view/Cloud-V%20Builds/job/cloud-v-builds-folder/job/node-riscv-build/18/consoleFull\n\n```\nmake[1]: *** [tools/v8_gypfiles/v8_compiler.target.mk:379: /home/riscv-builds/runner_dir/workspace/cloud-v-builds-folder/node-riscv-build/node/out/Release/obj.target/v8_compiler/deps/v8/src/compiler/backend/jump-threading.o] Error 1\nmake[1]: *** Waiting for unfinished jobs....\nIn file included from ../deps/v8/src/codegen/macro-assembler.h:82,\n                 from ../deps/v8/src/maglev/maglev-ir.cc:18:\n../deps/v8/src/codegen/riscv/macro-assembler-riscv.h:409:13: error: explicit specialization in non-namespace scope \u2018class v8::internal::MacroAssembler\u2019\n  409 |   template <>\n      |             ^\n../deps/v8/src/codegen/riscv/macro-assembler-riscv.h:557:13: error: explicit specialization in non-namespace scope \u2018class v8::internal::MacroAssembler\u2019\n  557 |   template <>\n      |             ^\nIn file included from ../deps/v8/src/codegen/macro-assembler.h:82,\n                 from ../deps/v8/src/compiler/backend/instruction-selector-impl.h:8,\n                 from ../deps/v8/src/compiler/backend/instruction-selector.cc:16:\n../deps/v8/src/codegen/riscv/macro-assembler-riscv.h:409:13: error: explicit specialization in non-namespace scope \u2018class v8::internal::MacroAssembler\u2019\n  409 |   template <>\n      |             ^\n../deps/v8/src/codegen/riscv/macro-assembler-riscv.h:557:13: error: explicit specialization in non-namespace scope \u2018class v8::internal::MacroAssembler\u2019\n  557 |   template <>\n      |             ^\nIn file included from ../deps/v8/src/codegen/macro-assembler.h:82,\n                 from ../deps/v8/src/compiler/c-linkage.cc:6:\n../deps/v8/src/codegen/riscv/macro-assembler-riscv.h:409:13: error: explicit specialization in non-namespace scope \u2018class v8::internal::MacroAssembler\u2019\n  409 |   template <>\n      |             ^\n../deps/v8/src/codegen/riscv/macro-assembler-riscv.h:557:13: error: explicit specialization in non-namespace scope \u2018class v8::internal::MacroAssembler\u2019\n  557 |   template <>\n      |             ^\nmake[1]: *** [tools/v8_gypfiles/v8_compiler.target.mk:379: /home/riscv-builds/runner_dir/workspace/cloud-v-builds-folder/node-riscv-build/node/out/Release/obj.target/v8_compiler/deps/v8/src/compiler/c-linkage.o] Error 1\nmake[1]: *** [tools/v8_gypfiles/v8_compiler.target.mk:379: /home/riscv-builds/runner_dir/workspace/cloud-v-builds-folder/node-riscv-build/node/out/Release/obj.target/v8_compiler/deps/v8/src/compiler/backend/code-generator.o] Error 1\nmake[1]: *** [tools/v8_gypfiles/v8_compiler.target.mk:379: /home/riscv-builds/runner_dir/workspace/cloud-v-builds-folder/node-riscv-build/node/out/Release/obj.target/v8_compiler/deps/v8/src/maglev/maglev-ir.o] Error 1\nmake[1]: *** [tools/v8_gypfiles/v8_compiler.target.mk:379: /home/riscv-builds/runner_dir/workspace/cloud-v-builds-folder/node-riscv-build/node/out/Release/obj.target/v8_compiler/deps/v8/src/compiler/backend/instruction-selector.o] Error 1\nrm 34a4c6057edee8594d60d6f57a7a30ec5d3de25b.intermediate 4f132d24141093a0f4a73ab5729e1f13b0f9eb30.intermediate 34cb89d13cb038fbc7b4135d2a1a14390e770f3f.intermediate\nmake: *** [Makefile:135: node] Error 2\n```\n\n### Additional information\n\nI have set up regular nightly builds for many opensource packages for riscv64 architecture as I have a lot of RISC-V compute instances in the [Cloud-V](https://cloud-v.co). \n\nI have added nodejs. Previously it was working fine without any issues but now it is throwing errors. My guess is that it is related to v8 but I don't see any requirement anywhere in the documentation about the dependencies of v8. ", "reactions": {"url": "https://api.github.com/repos/nodejs/node/issues/58741/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/nodejs/node/issues/58741/timeline", "performed_via_github_app": null, "state_reason": "completed", "score": 1.0}, {"url": "https://api.github.com/repos/nodejs/node/issues/59850", "repository_url": "https://api.github.com/repos/nodejs/node", "labels_url": "https://api.github.com/repos/nodejs/node/issues/59850/labels{/name}", "comments_url": "https://api.github.com/repos/nodejs/node/issues/59850/comments", "events_url": "https://api.github.com/repos/nodejs/node/issues/59850/events", "html_url": "https://github.com/nodejs/node/issues/59850", "id": 3405261184, "node_id": "I_kwDOAZ7xs87K-CmA", "number": 59850, "title": "fetch requests crashes node process when trying to see more details in chrome dev tools with new --experimental-network-inspection flag", "user": {"login": "OmriBarZik", "id": 16163470, "node_id": "MDQ6VXNlcjE2MTYzNDcw", "avatar_url": "https://avatars.githubusercontent.com/u/16163470?v=4", "gravatar_id": "", "url": "https://api.github.com/users/OmriBarZik", "html_url": "https://github.com/OmriBarZik", "followers_url": "https://api.github.com/users/OmriBarZik/followers", "following_url": "https://api.github.com/users/OmriBarZik/following{/other_user}", "gists_url": "https://api.github.com/users/OmriBarZik/gists{/gist_id}", "starred_url": "https://api.github.com/users/OmriBarZik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/OmriBarZik/subscriptions", "organizations_url": "https://api.github.com/users/OmriBarZik/orgs", "repos_url": "https://api.github.com/users/OmriBarZik/repos", "events_url": "https://api.github.com/users/OmriBarZik/events{/privacy}", "received_events_url": "https://api.github.com/users/OmriBarZik/received_events", "type": "User", "user_view_type": "public", "site_admin": false}, "labels": [{"id": 386816750, "node_id": "MDU6TGFiZWwzODY4MTY3NTA=", "url": "https://api.github.com/repos/nodejs/node/labels/inspector", "name": "inspector", "color": "bfd4f2", "default": false, "description": "Issues and PRs related to the V8 inspector protocol"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2025-09-11T07:45:32Z", "updated_at": "2025-09-14T16:46:01Z", "closed_at": "2025-09-14T16:46:01Z", "author_association": "NONE", "type": null, "active_lock_reason": null, "sub_issues_summary": {"total": 0, "completed": 0, "percent_completed": 0}, "issue_dependencies_summary": {"blocked_by": 0, "total_blocked_by": 0, "blocking": 0, "total_blocking": 0}, "body": "### Version\n\nv22.18.0\n\n### Platform\n\n```text\nDarwin obil-obar-zik.local 24.6.0 Darwin Kernel Version 24.6.0: Mon Jul 14 11:28:30 PDT 2025; root:xnu-11417.140.69~1/RELEASE_ARM64_T6030 arm64\n```\n\n### Subsystem\n\n_No response_\n\n### What steps will reproduce the bug?\n\n1. Create a file with this content:\n```js\nawait fetch('https://www.google.com')\n```\n\n2. Run the command\n```bash\nnode  --inspect-wait --experimental-network-inspection script.js\n```\n\n3. Open Chrome Dev Tools and select the request to view more details\n\n### How often does it reproduce? Is there a required condition?\n\nEvery Time you click the request in the browser, the node process crashes\n\n### What is the expected behavior? Why is that the expected behavior?\n\nTo show the request details and not crash the node\n\n### What do you see instead?\n\n```text\n  #  node[18013]: void node::MaybeStackBuffer<char>::SetLength(size_t) [T = char, kStackStorageSize = 1024] at ../src/util.h:446\n  #  Assertion failed: (length) <= (capacity())\n\n----- Native stack trace -----\n\n 1: 0x10043c9dc node::Assert(node::AssertionInfo const&) [/Users/myUser/Library/Application Support/fnm/node-versions/v24.8.0/installation/bin/node]\n 2: 0x1025a6880 node::inspector::protocol::Binary::toBase64() const (.cold.1) [/Users/myUser/Library/Application Support/fnm/node-versions/v24.8.0/installation/bin/node]\n 3: 0x1005b1ce0 node::inspector::protocol::Binary::toBase64() const [/Users/myUser/Library/Application Support/fnm/node-versions/v24.8.0/installation/bin/node]\n 4: 0x1005bb114 node::inspector::NetworkAgent::getResponseBody(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*, bool*) [/Users/myUser/Library/Application Support/fnm/node-versions/v24.8.0/installation/bin/node]\n 5: 0x10062e8f4 node::inspector::protocol::Network::DomainDispatcherImpl::getResponseBody(crdtp::Dispatchable const&) [/Users/myUser/Library/Application Support/fnm/node-versions/v24.8.0/installation/bin/node]\n 6: 0x101bf1a28 crdtp::UberDispatcher::DispatchResult::Run() [/Users/myUser/Library/Application Support/fnm/node-versions/v24.8.0/installation/bin/node]\n 7: 0x10059a8fc node::inspector::NodeInspectorClient::dispatchMessageFromFrontend(int, v8_inspector::StringView const&) [/Users/myUser/Library/Application Support/fnm/node-versions/v24.8.0/installation/bin/node]\n 8: 0x10059a500 node::inspector::(anonymous namespace)::SameThreadInspectorSession::Dispatch(v8_inspector::StringView const&) [/Users/myUser/Library/Application Support/fnm/node-versions/v24.8.0/installation/bin/node]\n 9: 0x1005aee78 node::inspector::(anonymous namespace)::MainThreadSessionState::Dispatch(std::__1::unique_ptr<v8_inspector::StringBuffer, std::__1::default_delete<v8_inspector::StringBuffer>>) [/Users/myUser/Library/Application Support/fnm/node-versions/v24.8.0/installation/bin/node]\n10: 0x1005aeebc void node::inspector::(anonymous namespace)::AnotherThreadObjectReference<node::inspector::(anonymous namespace)::MainThreadSessionState>::Apply<std::__1::unique_ptr<v8_inspector::StringBuffer, std::__1::default_delete<v8_inspector::StringBuffer>>>(node::inspector::(anonymous namespace)::MainThreadSessionState*, void (node::inspector::(anonymous namespace)::MainThreadSessionState::*)(std::__1::unique_ptr<v8_inspector::StringBuffer, std::__1::default_delete<v8_inspector::StringBuffer>>), std::__1::unique_ptr<v8_inspector::StringBuffer, std::__1::default_delete<v8_inspector::StringBuffer>>&) [/Users/myUser/Library/Application Support/fnm/node-versions/v24.8.0/installation/bin/node]\n11: 0x1005aded4 node::inspector::MainThreadInterface::DispatchMessages() [/Users/myUser/Library/Application Support/fnm/node-versions/v24.8.0/installation/bin/node]\n12: 0x1005afd88 node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::inspector::MainThreadInterface::Post(std::__1::unique_ptr<node::inspector::Request, std::__1::default_delete<node::inspector::Request>>)::$_0>::Call(node::Environment*) [/Users/myUser/Library/Application Support/fnm/node-versions/v24.8.0/installation/bin/node]\n13: 0x1003c9d40 node::Environment::RunAndClearInterrupts() [/Users/myUser/Library/Application Support/fnm/node-versions/v24.8.0/installation/bin/node]\n14: 0x10059a9f0 node::inspector::NodeInspectorClient::runMessageLoop() [/Users/myUser/Library/Application Support/fnm/node-versions/v24.8.0/installation/bin/node]\n15: 0x100597cd8 node::inspector::Agent::WaitForDisconnect() [/Users/myUser/Library/Application Support/fnm/node-versions/v24.8.0/installation/bin/node]\n16: 0x1003c9a24 node::Environment::RunAtExitCallbacks() [/Users/myUser/Library/Application Support/fnm/node-versions/v24.8.0/installation/bin/node]\n17: 0x10033d71c node::FreeEnvironment(node::Environment*) [/Users/myUser/Library/Application Support/fnm/node-versions/v24.8.0/installation/bin/node]\n18: 0x100490ca0 node::NodeMainInstance::Run() [/Users/myUser/Library/Application Support/fnm/node-versions/v24.8.0/installation/bin/node]\n19: 0x1003f6d20 node::Start(int, char**) [/Users/myUser/Library/Application Support/fnm/node-versions/v24.8.0/installation/bin/node]\n20: 0x19a256b98 start [/usr/lib/dyld]\nFATAL ERROR: v8::HandleScope::CreateHandle() Cannot create a handle without a HandleScope\n----- Native stack trace -----\n\n 1: 0x10043cd14 node::OnFatalError(char const*, char const*) [/Users/myUser/Library/Application Support/fnm/node-versions/v24.8.0/installation/bin/node]\n 2: 0x1006343cc v8::Utils::ReportApiFailure(char const*, char const*) [/Users/myUser/Library/Application Support/fnm/node-versions/v24.8.0/installation/bin/node]\n 3: 0x10081e540 v8::internal::HandleScope::Extend(v8::internal::Isolate*) [/Users/myUser/Library/Application Support/fnm/node-versions/v24.8.0/installation/bin/node]\n 4: 0x10063527c v8::EscapableHandleScopeBase::EscapableHandleScopeBase(v8::Isolate*) [/Users/myUser/Library/Application Support/fnm/node-versions/v24.8.0/installation/bin/node]\n 5: 0x10043b688 node::GetCurrentStackTrace(v8::Isolate*, int) [/Users/myUser/Library/Application Support/fnm/node-versions/v24.8.0/installation/bin/node]\n 6: 0x100376aa0 node::DumpJavaScriptBacktrace(__sFILE*) [/Users/myUser/Library/Application Support/fnm/node-versions/v24.8.0/installation/bin/node]\n 7: 0x10043c9e4 node::Assert(node::AssertionInfo const&) [/Users/myUser/Library/Application Support/fnm/node-versions/v24.8.0/installation/bin/node]\n 8: 0x1025a6880 node::inspector::protocol::Binary::toBase64() const (.cold.1) [/Users/myUser/Library/Application Support/fnm/node-versions/v24.8.0/installation/bin/node]\n 9: 0x1005b1ce0 node::inspector::protocol::Binary::toBase64() const [/Users/myUser/Library/Application Support/fnm/node-versions/v24.8.0/installation/bin/node]\n10: 0x1005bb114 node::inspector::NetworkAgent::getResponseBody(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*, bool*) [/Users/myUser/Library/Application Support/fnm/node-versions/v24.8.0/installation/bin/node]\n11: 0x10062e8f4 node::inspector::protocol::Network::DomainDispatcherImpl::getResponseBody(crdtp::Dispatchable const&) [/Users/myUser/Library/Application Support/fnm/node-versions/v24.8.0/installation/bin/node]\n12: 0x101bf1a28 crdtp::UberDispatcher::DispatchResult::Run() [/Users/myUser/Library/Application Support/fnm/node-versions/v24.8.0/installation/bin/node]\n13: 0x10059a8fc node::inspector::NodeInspectorClient::dispatchMessageFromFrontend(int, v8_inspector::StringView const&) [/Users/myUser/Library/Application Support/fnm/node-versions/v24.8.0/installation/bin/node]\n14: 0x10059a500 node::inspector::(anonymous namespace)::SameThreadInspectorSession::Dispatch(v8_inspector::StringView const&) [/Users/myUser/Library/Application Support/fnm/node-versions/v24.8.0/installation/bin/node]\n15: 0x1005aee78 node::inspector::(anonymous namespace)::MainThreadSessionState::Dispatch(std::__1::unique_ptr<v8_inspector::StringBuffer, std::__1::default_delete<v8_inspector::StringBuffer>>) [/Users/myUser/Library/Application Support/fnm/node-versions/v24.8.0/installation/bin/node]\n16: 0x1005aeebc void node::inspector::(anonymous namespace)::AnotherThreadObjectReference<node::inspector::(anonymous namespace)::MainThreadSessionState>::Apply<std::__1::unique_ptr<v8_inspector::StringBuffer, std::__1::default_delete<v8_inspector::StringBuffer>>>(node::inspector::(anonymous namespace)::MainThreadSessionState*, void (node::inspector::(anonymous namespace)::MainThreadSessionState::*)(std::__1::unique_ptr<v8_inspector::StringBuffer, std::__1::default_delete<v8_inspector::StringBuffer>>), std::__1::unique_ptr<v8_inspector::StringBuffer, std::__1::default_delete<v8_inspector::StringBuffer>>&) [/Users/myUser/Library/Application Support/fnm/node-versions/v24.8.0/installation/bin/node]\n17: 0x1005aded4 node::inspector::MainThreadInterface::DispatchMessages() [/Users/myUser/Library/Application Support/fnm/node-versions/v24.8.0/installation/bin/node]\n18: 0x1005afd88 node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::inspector::MainThreadInterface::Post(std::__1::unique_ptr<node::inspector::Request, std::__1::default_delete<node::inspector::Request>>)::$_0>::Call(node::Environment*) [/Users/myUser/Library/Application Support/fnm/node-versions/v24.8.0/installation/bin/node]\n19: 0x1003c9d40 node::Environment::RunAndClearInterrupts() [/Users/myUser/Library/Application Support/fnm/node-versions/v24.8.0/installation/bin/node]\n20: 0x10059a9f0 node::inspector::NodeInspectorClient::runMessageLoop() [/Users/myUser/Library/Application Support/fnm/node-versions/v24.8.0/installation/bin/node]\n21: 0x100597cd8 node::inspector::Agent::WaitForDisconnect() [/Users/myUser/Library/Application Support/fnm/node-versions/v24.8.0/installation/bin/node]\n22: 0x1003c9a24 node::Environment::RunAtExitCallbacks() [/Users/myUser/Library/Application Support/fnm/node-versions/v24.8.0/installation/bin/node]\n23: 0x10033d71c node::FreeEnvironment(node::Environment*) [/Users/myUser/Library/Application Support/fnm/node-versions/v24.8.0/installation/bin/node]\n24: 0x100490ca0 node::NodeMainInstance::Run() [/Users/myUser/Library/Application Support/fnm/node-versions/v24.8.0/installation/bin/node]\n25: 0x1003f6d20 node::Start(int, char**) [/Users/myUser/Library/Application Support/fnm/node-versions/v24.8.0/installation/bin/node]\n26: 0x19a256b98 start [/usr/lib/dyld]\n[1]    18013 abort      node --inspect-wait --experimental-network-inspection script.js\n```\n\n### Additional information\n\n_No response_", "reactions": {"url": "https://api.github.com/repos/nodejs/node/issues/59850/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/nodejs/node/issues/59850/timeline", "performed_via_github_app": null, "state_reason": "completed", "score": 1.0}, {"url": "https://api.github.com/repos/nodejs/node/issues/56828", "repository_url": "https://api.github.com/repos/nodejs/node", "labels_url": "https://api.github.com/repos/nodejs/node/issues/56828/labels{/name}", "comments_url": "https://api.github.com/repos/nodejs/node/issues/56828/comments", "events_url": "https://api.github.com/repos/nodejs/node/issues/56828/events", "html_url": "https://github.com/nodejs/node/issues/56828", "id": 2820870561, "node_id": "I_kwDOAZ7xs86oIxGh", "number": 56828, "title": "Proposal: Built-in __VERSION__ Import for Package Version Detection", "user": {"login": "aqeelat", "id": 5212744, "node_id": "MDQ6VXNlcjUyMTI3NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5212744?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aqeelat", "html_url": "https://github.com/aqeelat", "followers_url": "https://api.github.com/users/aqeelat/followers", "following_url": "https://api.github.com/users/aqeelat/following{/other_user}", "gists_url": "https://api.github.com/users/aqeelat/gists{/gist_id}", "starred_url": "https://api.github.com/users/aqeelat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aqeelat/subscriptions", "organizations_url": "https://api.github.com/users/aqeelat/orgs", "repos_url": "https://api.github.com/users/aqeelat/repos", "events_url": "https://api.github.com/users/aqeelat/events{/privacy}", "received_events_url": "https://api.github.com/users/aqeelat/received_events", "type": "User", "user_view_type": "public", "site_admin": false}, "labels": [{"id": 207445406, "node_id": "MDU6TGFiZWwyMDc0NDU0MDY=", "url": "https://api.github.com/repos/nodejs/node/labels/feature%20request", "name": "feature request", "color": "0D7BDE", "default": false, "description": "Issues that request new features to be added to Node.js."}, {"id": 3774588687, "node_id": "LA_kwDOAZ7xs87g-6cP", "url": "https://api.github.com/repos/nodejs/node/labels/stale", "name": "stale", "color": "f9d0c4", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2025-01-30T13:40:36Z", "updated_at": "2025-09-14T01:29:11Z", "closed_at": "2025-09-14T01:29:11Z", "author_association": "NONE", "type": null, "active_lock_reason": null, "sub_issues_summary": {"total": 0, "completed": 0, "percent_completed": 0}, "issue_dependencies_summary": {"blocked_by": 0, "total_blocked_by": 0, "blocking": 0, "total_blocking": 0}, "body": "### What is the problem this feature will solve?\n\nMany packages need to adapt their behavior based on the installed version of a dependency. Currently, there is no built-in way in Node.js to dynamically determine the version of an imported package at runtime. Developers must resort to workarounds such as reading package.json manually, which is cumbersome and inefficient.\n\nFor example, the nest-pino package supports both NestJS 10 and 11. However, NestJS 10 uses Express 4, while NestJS 11 uses Express 5. Because of this, a [small change](https://github.com/iamolegga/nestjs-pino/blob/36fd5463ef8ae4cd22e44721f82f33b4e583613a/src/LoggerModule.ts#L26-L31) is required:\n\n```ts\nconst DEFAULT_ROUTES = [{ path: '*', method: RequestMethod.ALL }];\n```\nShould be:\n```ts\nconst DEFAULT_ROUTES = [{ path: '/{*splat}', method: RequestMethod.ALL }];\n```\n\np.s. I'm not affiliated with that package\n\n### What is the feature you are proposing to solve the problem?\n\nA convenient way to read the version from `package.json`. Something like:\n```ts\nimport { __VERSION__ } from 'some-package';\nconsole.log(__VERSION__); // e.g. '1.2.3'\n```\n\nThis way, 'nest-pino` can adapt to both version by using:\n```ts\nimport { __VERSION__ as nestVersion } from '@nestjs/common';\n\nconst DEFAULT_ROUTES = [{ path: nestVersion.startsWith('11') ? '/{*splat}' : '*', method: RequestMethod.ALL }];\n```\n\nThe beautiful thing is that this will require zero efforts from package maintainers.\nIf a package already exports a `__VERSION__` variable, then that takes precedence over the one supplied by node.\n\n### What alternatives have you considered?\n\n1. node-pino could release a new version to support NestJS 11. However:\n    1.  this approach does not scale. Consider a scenario where pino releases a new version that is not backwards compatible. Then pino-js will have to either release two new major versions, or drop support for older versions. This introduces a version matrix that's hard to maintain.\n    2. it is a hassle especially when the change is very minimal\n2. using a package like `pkginfo`, but why add another package for something that node can easily provide?", "reactions": {"url": "https://api.github.com/repos/nodejs/node/issues/56828/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/nodejs/node/issues/56828/timeline", "performed_via_github_app": null, "state_reason": "not_planned", "score": 1.0}, {"url": "https://api.github.com/repos/nodejs/node/issues/59881", "repository_url": "https://api.github.com/repos/nodejs/node", "labels_url": "https://api.github.com/repos/nodejs/node/issues/59881/labels{/name}", "comments_url": "https://api.github.com/repos/nodejs/node/issues/59881/comments", "events_url": "https://api.github.com/repos/nodejs/node/issues/59881/events", "html_url": "https://github.com/nodejs/node/issues/59881", "id": 3414244694, "node_id": "I_kwDOAZ7xs87LgT1W", "number": 59881, "title": "project 4", "user": {"login": "Paulpatel11", "id": 213365030, "node_id": "U_kgDODLexJg", "avatar_url": "https://avatars.githubusercontent.com/u/213365030?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Paulpatel11", "html_url": "https://github.com/Paulpatel11", "followers_url": "https://api.github.com/users/Paulpatel11/followers", "following_url": "https://api.github.com/users/Paulpatel11/following{/other_user}", "gists_url": "https://api.github.com/users/Paulpatel11/gists{/gist_id}", "starred_url": "https://api.github.com/users/Paulpatel11/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Paulpatel11/subscriptions", "organizations_url": "https://api.github.com/users/Paulpatel11/orgs", "repos_url": "https://api.github.com/users/Paulpatel11/repos", "events_url": "https://api.github.com/users/Paulpatel11/events{/privacy}", "received_events_url": "https://api.github.com/users/Paulpatel11/received_events", "type": "User", "user_view_type": "public", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2025-09-13T22:50:34Z", "updated_at": "2025-09-14T00:33:08Z", "closed_at": "2025-09-14T00:33:08Z", "author_association": "NONE", "type": null, "active_lock_reason": null, "sub_issues_summary": {"total": 0, "completed": 0, "percent_completed": 0}, "issue_dependencies_summary": {"blocked_by": 0, "total_blocked_by": 0, "blocking": 0, "total_blocking": 0}, "body": null, "reactions": {"url": "https://api.github.com/repos/nodejs/node/issues/59881/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/nodejs/node/issues/59881/timeline", "performed_via_github_app": null, "state_reason": "completed", "score": 1.0}, {"url": "https://api.github.com/repos/nodejs/node/issues/56676", "repository_url": "https://api.github.com/repos/nodejs/node", "labels_url": "https://api.github.com/repos/nodejs/node/issues/56676/labels{/name}", "comments_url": "https://api.github.com/repos/nodejs/node/issues/56676/comments", "events_url": "https://api.github.com/repos/nodejs/node/issues/56676/events", "html_url": "https://github.com/nodejs/node/issues/56676", "id": 2801416051, "node_id": "I_kwDOAZ7xs86m-jdz", "number": 56676, "title": "util.debuglog callback argument behavior and purpose appears to be documented incorrectly", "user": {"login": "GB609", "id": 39741460, "node_id": "MDQ6VXNlcjM5NzQxNDYw", "avatar_url": "https://avatars.githubusercontent.com/u/39741460?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GB609", "html_url": "https://github.com/GB609", "followers_url": "https://api.github.com/users/GB609/followers", "following_url": "https://api.github.com/users/GB609/following{/other_user}", "gists_url": "https://api.github.com/users/GB609/gists{/gist_id}", "starred_url": "https://api.github.com/users/GB609/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GB609/subscriptions", "organizations_url": "https://api.github.com/users/GB609/orgs", "repos_url": "https://api.github.com/users/GB609/repos", "events_url": "https://api.github.com/users/GB609/events{/privacy}", "received_events_url": "https://api.github.com/users/GB609/received_events", "type": "User", "user_view_type": "public", "site_admin": false}, "labels": [{"id": 151728674, "node_id": "MDU6TGFiZWwxNTE3Mjg2NzQ=", "url": "https://api.github.com/repos/nodejs/node/labels/confirmed-bug", "name": "confirmed-bug", "color": "fc2929", "default": false, "description": "Issues with confirmed bugs."}, {"id": 155267446, "node_id": "MDU6TGFiZWwxNTUyNjc0NDY=", "url": "https://api.github.com/repos/nodejs/node/labels/util", "name": "util", "color": "d4c5f9", "default": false, "description": "Issues and PRs related to the built-in util module."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2025-01-21T10:41:14Z", "updated_at": "2025-09-14T00:06:58Z", "closed_at": "2025-09-14T00:06:58Z", "author_association": "NONE", "type": null, "active_lock_reason": null, "sub_issues_summary": {"total": 0, "completed": 0, "percent_completed": 0}, "issue_dependencies_summary": {"blocked_by": 0, "total_blocked_by": 0, "blocking": 0, "total_blocking": 0}, "body": "### Affected URL(s)\n\nhttps://nodejs.org/docs/latest/api/util.html#utildebuglogsection-callback\n\n### Description of the problem\n\nThe usage example of the callback function for `util.debuglog` is not sufficiently documented imho.\nMoreover, when looking at the code, it also seems to even work differently than described. \n\nThe example for the callback does the following:\n```javascript\nconst util = require('node:util');\nlet debuglog = util.debuglog('internals', (debug) => {\n  // Replace with a logging function that optimizes out\n  // testing if the section is enabled\n  debuglog = debug;\n});\n```\n\nWhat debuglog effectively does is:\n```javascript\nfunction debuglog(set, cb){\n  realLogFunction = (...args){\n     init() //sets up the set name and an enabled boolean value\n\n     // creates a noop function when enabled=false\n     realLogFunction = debugLogImpl(enabled) \n     if(typeof cb == \"function\"){\n       // this is the part where the documentation is lacking\n       cb(realLogFunction) //code depends on side-effects of the callback?\n     }\n     // this line is only effective the very first time, when still in the factory\n     // likely to not 'swallow' the first log line that lazily inits the real logger\n     realLogFunction(...args)\n  }\n\n  //left out for brewity, but works on the same principle as realLogFunction\n  let innerEnabledCheck ()=>{...}\n  \n  logDelegate = (...) => {\n    //some switch on argument length, but effectively always results in the next line, with a varying\n    //amount of arguments passed on.\n    realLogFunction(args)\n  }\n  logDelegate.enabled = innerEnabledCheck() //left out for brewity\n  return logDelegate;\n}\n```\n\nThe first time `logDelegate` is called, the enabled test is already optimized out and `logDelegate` will call the now-changed `realLogFunction` generated from `debugLogImpl`.\nWhat actually happens when the callback is used as in the documentation's example, is that the outside variable, (`debuglog` in the example) which points to `logDelegate`, will be replaced by `realLogFunction`.\n\nThus, what is 'optimized out' is the switch in `logDelegate` when the callback is used as shown in the example, but at the price of also losing the `enabled` getter. 'Testing if the section is enabled' is always automatically and implicitly optimized out in the inner factory method.", "reactions": {"url": "https://api.github.com/repos/nodejs/node/issues/56676/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/nodejs/node/issues/56676/timeline", "performed_via_github_app": null, "state_reason": "completed", "score": 1.0}, {"url": "https://api.github.com/repos/nodejs/node/issues/43343", "repository_url": "https://api.github.com/repos/nodejs/node", "labels_url": "https://api.github.com/repos/nodejs/node/issues/43343/labels{/name}", "comments_url": "https://api.github.com/repos/nodejs/node/issues/43343/comments", "events_url": "https://api.github.com/repos/nodejs/node/issues/43343/events", "html_url": "https://github.com/nodejs/node/issues/43343", "id": 1264029067, "node_id": "I_kwDOAZ7xs85LV42L", "number": 43343, "title": "Pasting very long strings freezes node REPL on MacOS", "user": {"login": "JoBrad", "id": 847746, "node_id": "MDQ6VXNlcjg0Nzc0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/847746?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JoBrad", "html_url": "https://github.com/JoBrad", "followers_url": "https://api.github.com/users/JoBrad/followers", "following_url": "https://api.github.com/users/JoBrad/following{/other_user}", "gists_url": "https://api.github.com/users/JoBrad/gists{/gist_id}", "starred_url": "https://api.github.com/users/JoBrad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JoBrad/subscriptions", "organizations_url": "https://api.github.com/users/JoBrad/orgs", "repos_url": "https://api.github.com/users/JoBrad/repos", "events_url": "https://api.github.com/users/JoBrad/events{/privacy}", "received_events_url": "https://api.github.com/users/JoBrad/received_events", "type": "User", "user_view_type": "public", "site_admin": false}, "labels": [{"id": 155435882, "node_id": "MDU6TGFiZWwxNTU0MzU4ODI=", "url": "https://api.github.com/repos/nodejs/node/labels/repl", "name": "repl", "color": "5319e7", "default": false, "description": "Issues and PRs related to the REPL subsystem."}, {"id": 235508847, "node_id": "MDU6TGFiZWwyMzU1MDg4NDc=", "url": "https://api.github.com/repos/nodejs/node/labels/macos", "name": "macos", "color": "9944dd", "default": false, "description": "Issues and PRs related to the macOS platform / OSX."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2022-06-08T00:23:31Z", "updated_at": "2025-09-14T00:06:49Z", "closed_at": "2025-09-14T00:06:49Z", "author_association": "NONE", "type": null, "active_lock_reason": null, "sub_issues_summary": {"total": 0, "completed": 0, "percent_completed": 0}, "issue_dependencies_summary": {"blocked_by": 0, "total_blocked_by": 0, "blocking": 0, "total_blocking": 0}, "body": "### Version\r\n\r\n18.3.0\r\n\r\n### Platform\r\n\r\nDarwin SoMuchBiggerOnTheInside-2.local 21.4.0 Darwin Kernel Version 21.4.0: Fri Mar 18 00:45:05 PDT 2022; root:xnu-8020.101.4~15/RELEASE_X86_64 x86_64\r\n\r\n### Subsystem\r\n\r\n_No response_\r\n\r\n### What steps will reproduce the bug?\r\n\r\n- Open iTerm2 version 3.4.15 and start a new node REPL session.\r\n- Ignoring the comment on the first line, copy the first 3,500 characters of the jQuery v3.6.0 minified library (https://code.jquery.com/jquery-3.6.0.min.js) into the REPL. The REPL will freeze.\r\n- Open a new tab, start a new node REPL, and paste ~2,000 characters of the library into the REPL. The code will be cut short. You can copy and paste new chunks of text into the REPL, as long as you keep your text less than ~2,000 - 3,500 characters in length. However if you paste more than that, the REPL will freeze. \r\n- Use this formatter to format the jquery library (don't make any changes to the default settings for the formatter): https://webformatter.com/javascript\r\n- Paste the first 128 lines into the REPL (including the first comment line). This is 3,906 characters. The REPL will display errors and only show part of the code you have pasted, but will not freeze. \r\n- The 129th line is the beginning of a for statement. Copying all of the text up until the end of the keyword `for` (but before the `(`) and pasting this into the REPL will cause it to freeze. If you only copy a part of the word `for` it won't freeze.\r\n\r\n### How often does it reproduce? Is there a required condition?\r\n\r\nI can replicate these symptoms every time. Note that I can paste the entire jQuery library into a Python REPL (in the same iTerm2 tab) without any freezing at all. The fact that the `for` keyword changes behavior makes me think the error is happening when parsing the language. It may be a regression of #32999 (or a similar bug, for Macs), but pasting the 1000 \"a\" commands in the gist below (mentioned in  #32999 comments) does not cause the REPL to freeze. \r\n\r\nhttps://gist.githubusercontent.com/bzoz/bba634114402fee35554f4972a0887b6/raw/c71217ab21ecdf8d6e0874e955fe3b780df4e89f/aaaaaa.txt\r\n\r\n\r\n### What is the expected behavior?\r\n\r\nI expect the REPL to accept the pasted text.\r\n\r\n### What do you see instead?\r\n\r\nThe REPL freezes or only shows part of the pasted text.\r\n\r\n### Additional information\r\n\r\n_No response_", "reactions": {"url": "https://api.github.com/repos/nodejs/node/issues/43343/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/nodejs/node/issues/43343/timeline", "performed_via_github_app": null, "state_reason": "completed", "score": 1.0}, {"url": "https://api.github.com/repos/nodejs/node/issues/40626", "repository_url": "https://api.github.com/repos/nodejs/node", "labels_url": "https://api.github.com/repos/nodejs/node/issues/40626/labels{/name}", "comments_url": "https://api.github.com/repos/nodejs/node/issues/40626/comments", "events_url": "https://api.github.com/repos/nodejs/node/issues/40626/events", "html_url": "https://github.com/nodejs/node/issues/40626", "id": 1037339095, "node_id": "I_kwDOAZ7xs8491InX", "number": 40626, "title": "Pasting long json in REPL is slow", "user": {"login": "septatrix", "id": 24257556, "node_id": "MDQ6VXNlcjI0MjU3NTU2", "avatar_url": "https://avatars.githubusercontent.com/u/24257556?v=4", "gravatar_id": "", "url": "https://api.github.com/users/septatrix", "html_url": "https://github.com/septatrix", "followers_url": "https://api.github.com/users/septatrix/followers", "following_url": "https://api.github.com/users/septatrix/following{/other_user}", "gists_url": "https://api.github.com/users/septatrix/gists{/gist_id}", "starred_url": "https://api.github.com/users/septatrix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/septatrix/subscriptions", "organizations_url": "https://api.github.com/users/septatrix/orgs", "repos_url": "https://api.github.com/users/septatrix/repos", "events_url": "https://api.github.com/users/septatrix/events{/privacy}", "received_events_url": "https://api.github.com/users/septatrix/received_events", "type": "User", "user_view_type": "public", "site_admin": false}, "labels": [{"id": 155435882, "node_id": "MDU6TGFiZWwxNTU0MzU4ODI=", "url": "https://api.github.com/repos/nodejs/node/labels/repl", "name": "repl", "color": "5319e7", "default": false, "description": "Issues and PRs related to the REPL subsystem."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2021-10-27T12:06:38Z", "updated_at": "2025-09-14T00:06:48Z", "closed_at": "2025-09-14T00:06:48Z", "author_association": "NONE", "type": null, "active_lock_reason": null, "sub_issues_summary": {"total": 0, "completed": 0, "percent_completed": 0}, "issue_dependencies_summary": {"blocked_by": 0, "total_blocked_by": 0, "blocking": 0, "total_blocking": 0}, "body": "### Version\n\nv14.18.1\n\n### Platform\n\nLinux thinkpad-e570 5.14.13-200.fc34.x86_64 #1 SMP Mon Oct 18 12:39:31 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux\n\n### Subsystem\n\n_No response_\n\n### What steps will reproduce the bug?\n\n1. Copy a large amount of data to your clipboard\u00b9\r\n2. Open the nodejs REPL\r\n3. Paste the data\r\n\r\n\u00b9 The effect can be observed starting at ~2000 chars on my pc with an Intel i7-7500U (4) @ 3.500GHz).\r\nI generated the data using `cat /dev/zero | head -c 2000 | tr \"\\0\" 0 | wl-copy`\n\n### How often does it reproduce? Is there a required condition?\n\nIt is consistent and becomes more noticeable with a larger clipboard content\n\n### What is the expected behavior?\n\nThe pasting should happen instantaneous\r\n\r\nhttps://user-images.githubusercontent.com/24257556/139062239-9ba8ee71-233d-4d88-bc56-fe3387f85588.mp4\n\n### What do you see instead?\n\nOne can see how the content trickles in bit by bit\r\n\r\nhttps://user-images.githubusercontent.com/24257556/139062293-7f86da74-4931-47ca-9ada-0db24e605d4a.mp4\n\n### Additional information\n\nI am using Gnome Terminal but can observe the same behaviour in other terminals like Alacritty. The cpu utilization when pasting goes up to 100%. Other REPLs like python do not show the same behaviour.\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/nodejs/node/issues/40626/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/nodejs/node/issues/40626/timeline", "performed_via_github_app": null, "state_reason": "completed", "score": 1.0}, {"url": "https://api.github.com/repos/nodejs/node/issues/59879", "repository_url": "https://api.github.com/repos/nodejs/node", "labels_url": "https://api.github.com/repos/nodejs/node/issues/59879/labels{/name}", "comments_url": "https://api.github.com/repos/nodejs/node/issues/59879/comments", "events_url": "https://api.github.com/repos/nodejs/node/issues/59879/events", "html_url": "https://github.com/nodejs/node/issues/59879", "id": 3413228633, "node_id": "I_kwDOAZ7xs87LcbxZ", "number": 59879, "title": "Landed in e30928485e20769c1112c56d7bbabff9366f260e", "user": {"login": "DMPMFSQHFK10", "id": 225871578, "node_id": "U_kgDODXaG2g", "avatar_url": "https://avatars.githubusercontent.com/u/225871578?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DMPMFSQHFK10", "html_url": "https://github.com/DMPMFSQHFK10", "followers_url": "https://api.github.com/users/DMPMFSQHFK10/followers", "following_url": "https://api.github.com/users/DMPMFSQHFK10/following{/other_user}", "gists_url": "https://api.github.com/users/DMPMFSQHFK10/gists{/gist_id}", "starred_url": "https://api.github.com/users/DMPMFSQHFK10/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DMPMFSQHFK10/subscriptions", "organizations_url": "https://api.github.com/users/DMPMFSQHFK10/orgs", "repos_url": "https://api.github.com/users/DMPMFSQHFK10/repos", "events_url": "https://api.github.com/users/DMPMFSQHFK10/events{/privacy}", "received_events_url": "https://api.github.com/users/DMPMFSQHFK10/received_events", "type": "User", "user_view_type": "public", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2025-09-13T11:18:44Z", "updated_at": "2025-09-13T11:18:48Z", "closed_at": "2025-09-13T11:18:48Z", "author_association": "NONE", "type": null, "active_lock_reason": null, "sub_issues_summary": {"total": 0, "completed": 0, "percent_completed": 0}, "issue_dependencies_summary": {"blocked_by": 0, "total_blocked_by": 0, "blocking": 0, "total_blocking": 0}, "body": "Landed in e30928485e20769c1112c56d7bbabff9366f260e\r\n\r\n_Originally posted by @nodejs-github-bot in https://github.com/nodejs/node/issues/53235#issuecomment-2156147218_\r\n            ", "reactions": {"url": "https://api.github.com/repos/nodejs/node/issues/59879/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/nodejs/node/issues/59879/timeline", "performed_via_github_app": null, "state_reason": "completed", "score": 1.0}, {"url": "https://api.github.com/repos/nodejs/node/issues/57010", "repository_url": "https://api.github.com/repos/nodejs/node", "labels_url": "https://api.github.com/repos/nodejs/node/issues/57010/labels{/name}", "comments_url": "https://api.github.com/repos/nodejs/node/issues/57010/comments", "events_url": "https://api.github.com/repos/nodejs/node/issues/57010/events", "html_url": "https://github.com/nodejs/node/issues/57010", "id": 2847406248, "node_id": "I_kwDOAZ7xs86pt_io", "number": 57010, "title": "AsyncLocalStorage store cleanup callback", "user": {"login": "eliocapella", "id": 66358542, "node_id": "MDQ6VXNlcjY2MzU4NTQy", "avatar_url": "https://avatars.githubusercontent.com/u/66358542?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eliocapella", "html_url": "https://github.com/eliocapella", "followers_url": "https://api.github.com/users/eliocapella/followers", "following_url": "https://api.github.com/users/eliocapella/following{/other_user}", "gists_url": "https://api.github.com/users/eliocapella/gists{/gist_id}", "starred_url": "https://api.github.com/users/eliocapella/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eliocapella/subscriptions", "organizations_url": "https://api.github.com/users/eliocapella/orgs", "repos_url": "https://api.github.com/users/eliocapella/repos", "events_url": "https://api.github.com/users/eliocapella/events{/privacy}", "received_events_url": "https://api.github.com/users/eliocapella/received_events", "type": "User", "user_view_type": "public", "site_admin": false}, "labels": [{"id": 207445406, "node_id": "MDU6TGFiZWwyMDc0NDU0MDY=", "url": "https://api.github.com/repos/nodejs/node/labels/feature%20request", "name": "feature request", "color": "0D7BDE", "default": false, "description": "Issues that request new features to be added to Node.js."}, {"id": 3774588687, "node_id": "LA_kwDOAZ7xs87g-6cP", "url": "https://api.github.com/repos/nodejs/node/labels/stale", "name": "stale", "color": "f9d0c4", "default": false, "description": ""}, {"id": 7298959872, "node_id": "LA_kwDOAZ7xs88AAAABsw1KAA", "url": "https://api.github.com/repos/nodejs/node/labels/async_local_storage", "name": "async_local_storage", "color": "F516DE", "default": false, "description": "AsyncLocalStorage"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2025-02-12T07:30:52Z", "updated_at": "2025-09-13T01:28:26Z", "closed_at": "2025-09-13T01:28:26Z", "author_association": "NONE", "type": null, "active_lock_reason": null, "sub_issues_summary": {"total": 0, "completed": 0, "percent_completed": 0}, "issue_dependencies_summary": {"blocked_by": 0, "total_blocked_by": 0, "blocking": 0, "total_blocking": 0}, "body": "### What is the problem this feature will solve?\n\nCurrently I would like to store in `AsyncLocalStorage` an object that requires clean up. It is a MongoDB session, after the async chain is finished I should execute `session.endSession`. I have no way to listen when the AsyncLocalStorage is going to be destroyed and execute my clean operation.\n\n### What is the feature you are proposing to solve the problem?\n\nI propose the adding a callback argument to the `AsyncLocalStorage.run` function to be executed at the end of the async chain started there.\n\n### What alternatives have you considered?\n\nI've tried using AsyncHooks to try to achieve this but I've unable to achieve this reliably.", "reactions": {"url": "https://api.github.com/repos/nodejs/node/issues/57010/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/nodejs/node/issues/57010/timeline", "performed_via_github_app": null, "state_reason": "not_planned", "score": 1.0}, {"url": "https://api.github.com/repos/nodejs/node/issues/27820", "repository_url": "https://api.github.com/repos/nodejs/node", "labels_url": "https://api.github.com/repos/nodejs/node/issues/27820/labels{/name}", "comments_url": "https://api.github.com/repos/nodejs/node/issues/27820/comments", "events_url": "https://api.github.com/repos/nodejs/node/issues/27820/events", "html_url": "https://github.com/nodejs/node/issues/27820", "id": 447155519, "node_id": "MDU6SXNzdWU0NDcxNTU1MTk=", "number": 27820, "title": "[Documentation Suggestion] How To Contribute To Unit Tests", "user": {"login": "srcmake", "id": 34385198, "node_id": "MDQ6VXNlcjM0Mzg1MTk4", "avatar_url": "https://avatars.githubusercontent.com/u/34385198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/srcmake", "html_url": "https://github.com/srcmake", "followers_url": "https://api.github.com/users/srcmake/followers", "following_url": "https://api.github.com/users/srcmake/following{/other_user}", "gists_url": "https://api.github.com/users/srcmake/gists{/gist_id}", "starred_url": "https://api.github.com/users/srcmake/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/srcmake/subscriptions", "organizations_url": "https://api.github.com/users/srcmake/orgs", "repos_url": "https://api.github.com/users/srcmake/repos", "events_url": "https://api.github.com/users/srcmake/events{/privacy}", "received_events_url": "https://api.github.com/users/srcmake/received_events", "type": "User", "user_view_type": "public", "site_admin": false}, "labels": [{"id": 151728677, "node_id": "MDU6TGFiZWwxNTE3Mjg2Nzc=", "url": "https://api.github.com/repos/nodejs/node/labels/help%20wanted", "name": "help wanted", "color": "159818", "default": true, "description": "Issues that need assistance from volunteers or PRs that need help to proceed."}, {"id": 155267517, "node_id": "MDU6TGFiZWwxNTUyNjc1MTc=", "url": "https://api.github.com/repos/nodejs/node/labels/doc", "name": "doc", "color": "006b75", "default": false, "description": "Issues and PRs related to the documentations."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2019-05-22T14:01:27Z", "updated_at": "2025-09-12T23:38:54Z", "closed_at": "2025-09-12T22:31:51Z", "author_association": "CONTRIBUTOR", "type": null, "active_lock_reason": null, "sub_issues_summary": {"total": 0, "completed": 0, "percent_completed": 0}, "issue_dependencies_summary": {"blocked_by": 0, "total_blocked_by": 0, "blocking": 0, "total_blocking": 0}, "body": "**Description**\r\nI'm new to the Node project and I want to help contribute, and I've seen suggestions that a great way to contribute is to look at the [code coverage report](https://coverage.nodejs.org/), find something that doesn't have full coverage, and write/add to tests to help the coverage be more complete. \r\n\r\nHowever, the actual steps to do that are a bit vague (the code coverage website is a bit hard to understand), and this process isn't documented in this project. (I actually heard about doing this in [this medium article](https://medium.com/the-node-js-collection/interested-in-contributing-to-node-js-core-read-on-5614f60d074d).)\r\n\r\n**Solution**\r\nCan we add a section in one of the contributing documents (I guess either on the website or maybe a new doc (that gets referenced in [CONTRIBUTING.md](https://github.com/nodejs/node/blob/master/CONTRIBUTING.md)) to list out the steps of how to either use the code coverage tool to find code that's untested, and how to help add tests (or add to current tests) to contribute?\r\n\r\nI'm not sure if we should treat this in two parts (one part being documentation on how to use the code coverage tool, and another on how to use contribute by using it to find untested code), or to make just one document.", "reactions": {"url": "https://api.github.com/repos/nodejs/node/issues/27820/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/nodejs/node/issues/27820/timeline", "performed_via_github_app": null, "state_reason": "completed", "score": 1.0}, {"url": "https://api.github.com/repos/nodejs/node/issues/31407", "repository_url": "https://api.github.com/repos/nodejs/node", "labels_url": "https://api.github.com/repos/nodejs/node/issues/31407/labels{/name}", "comments_url": "https://api.github.com/repos/nodejs/node/issues/31407/comments", "events_url": "https://api.github.com/repos/nodejs/node/issues/31407/events", "html_url": "https://github.com/nodejs/node/issues/31407", "id": 551756406, "node_id": "MDU6SXNzdWU1NTE3NTY0MDY=", "number": 31407, "title": "we should publish and compare benchmark results some where", "user": {"login": "frank-dspeed", "id": 7239575, "node_id": "MDQ6VXNlcjcyMzk1NzU=", "avatar_url": "https://avatars.githubusercontent.com/u/7239575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frank-dspeed", "html_url": "https://github.com/frank-dspeed", "followers_url": "https://api.github.com/users/frank-dspeed/followers", "following_url": "https://api.github.com/users/frank-dspeed/following{/other_user}", "gists_url": "https://api.github.com/users/frank-dspeed/gists{/gist_id}", "starred_url": "https://api.github.com/users/frank-dspeed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frank-dspeed/subscriptions", "organizations_url": "https://api.github.com/users/frank-dspeed/orgs", "repos_url": "https://api.github.com/users/frank-dspeed/repos", "events_url": "https://api.github.com/users/frank-dspeed/events{/privacy}", "received_events_url": "https://api.github.com/users/frank-dspeed/received_events", "type": "User", "user_view_type": "public", "site_admin": false}, "labels": [{"id": 191708559, "node_id": "MDU6TGFiZWwxOTE3MDg1NTk=", "url": "https://api.github.com/repos/nodejs/node/labels/benchmark", "name": "benchmark", "color": "009800", "default": false, "description": "Issues and PRs related to the benchmark subsystem."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-18T11:21:12Z", "updated_at": "2025-09-12T22:58:52Z", "closed_at": "2025-09-12T22:58:52Z", "author_association": "CONTRIBUTOR", "type": null, "active_lock_reason": null, "sub_issues_summary": {"total": 0, "completed": 0, "percent_completed": 0}, "issue_dependencies_summary": {"blocked_by": 0, "total_blocked_by": 0, "blocking": 0, "total_blocking": 0}, "body": "It would be cool if we would offer a way to let endusers run the benchmarks complet and submit results with some added data so we can compare the results against diffrent cpu and other metrics.\r\n", "reactions": {"url": "https://api.github.com/repos/nodejs/node/issues/31407/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/nodejs/node/issues/31407/timeline", "performed_via_github_app": null, "state_reason": "completed", "score": 1.0}, {"url": "https://api.github.com/repos/nodejs/node/issues/29368", "repository_url": "https://api.github.com/repos/nodejs/node", "labels_url": "https://api.github.com/repos/nodejs/node/issues/29368/labels{/name}", "comments_url": "https://api.github.com/repos/nodejs/node/issues/29368/comments", "events_url": "https://api.github.com/repos/nodejs/node/issues/29368/events", "html_url": "https://github.com/nodejs/node/issues/29368", "id": 487068532, "node_id": "MDU6SXNzdWU0ODcwNjg1MzI=", "number": 29368, "title": "doc: how to document multiple inheritance", "user": {"login": "trivikr", "id": 16024985, "node_id": "MDQ6VXNlcjE2MDI0OTg1", "avatar_url": "https://avatars.githubusercontent.com/u/16024985?v=4", "gravatar_id": "", "url": "https://api.github.com/users/trivikr", "html_url": "https://github.com/trivikr", "followers_url": "https://api.github.com/users/trivikr/followers", "following_url": "https://api.github.com/users/trivikr/following{/other_user}", "gists_url": "https://api.github.com/users/trivikr/gists{/gist_id}", "starred_url": "https://api.github.com/users/trivikr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/trivikr/subscriptions", "organizations_url": "https://api.github.com/users/trivikr/orgs", "repos_url": "https://api.github.com/users/trivikr/repos", "events_url": "https://api.github.com/users/trivikr/events{/privacy}", "received_events_url": "https://api.github.com/users/trivikr/received_events", "type": "User", "user_view_type": "public", "site_admin": false}, "labels": [{"id": 155267517, "node_id": "MDU6TGFiZWwxNTUyNjc1MTc=", "url": "https://api.github.com/repos/nodejs/node/labels/doc", "name": "doc", "color": "006b75", "default": false, "description": "Issues and PRs related to the documentations."}, {"id": 191447057, "node_id": "MDU6TGFiZWwxOTE0NDcwNTc=", "url": "https://api.github.com/repos/nodejs/node/labels/meta", "name": "meta", "color": "fef2c0", "default": false, "description": "Issues and PRs related to the general management of the project."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-08-29T16:46:15Z", "updated_at": "2025-09-12T22:52:56Z", "closed_at": "2025-09-12T22:52:56Z", "author_association": "MEMBER", "type": null, "active_lock_reason": null, "sub_issues_summary": {"total": 0, "completed": 0, "percent_completed": 0}, "issue_dependencies_summary": {"blocked_by": 0, "total_blocked_by": 0, "blocking": 0, "total_blocking": 0}, "body": "**Is your feature request related to a problem? Please describe.**\r\nThis request was raised in PR comment https://github.com/nodejs/node/pull/29290#discussion_r317847743\r\n\r\n**Describe the solution you'd like**\r\nHow to represent multiple inheritance in Node.js documentation\r\n\r\n**Describe alternatives you've considered**\r\n* The documentation only shows single parent class, or no inheritance at all\r\n* Going through the code to find out particular class extends multiple classes", "reactions": {"url": "https://api.github.com/repos/nodejs/node/issues/29368/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/nodejs/node/issues/29368/timeline", "performed_via_github_app": null, "state_reason": "not_planned", "score": 1.0}, {"url": "https://api.github.com/repos/nodejs/node/issues/30116", "repository_url": "https://api.github.com/repos/nodejs/node", "labels_url": "https://api.github.com/repos/nodejs/node/issues/30116/labels{/name}", "comments_url": "https://api.github.com/repos/nodejs/node/issues/30116/comments", "events_url": "https://api.github.com/repos/nodejs/node/issues/30116/events", "html_url": "https://github.com/nodejs/node/issues/30116", "id": 512580274, "node_id": "MDU6SXNzdWU1MTI1ODAyNzQ=", "number": 30116, "title": "suggested updates to the onboarding doc", "user": {"login": "joyeecheung", "id": 4299420, "node_id": "MDQ6VXNlcjQyOTk0MjA=", "avatar_url": "https://avatars.githubusercontent.com/u/4299420?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joyeecheung", "html_url": "https://github.com/joyeecheung", "followers_url": "https://api.github.com/users/joyeecheung/followers", "following_url": "https://api.github.com/users/joyeecheung/following{/other_user}", "gists_url": "https://api.github.com/users/joyeecheung/gists{/gist_id}", "starred_url": "https://api.github.com/users/joyeecheung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joyeecheung/subscriptions", "organizations_url": "https://api.github.com/users/joyeecheung/orgs", "repos_url": "https://api.github.com/users/joyeecheung/repos", "events_url": "https://api.github.com/users/joyeecheung/events{/privacy}", "received_events_url": "https://api.github.com/users/joyeecheung/received_events", "type": "User", "user_view_type": "public", "site_admin": false}, "labels": [{"id": 155267517, "node_id": "MDU6TGFiZWwxNTUyNjc1MTc=", "url": "https://api.github.com/repos/nodejs/node/labels/doc", "name": "doc", "color": "006b75", "default": false, "description": "Issues and PRs related to the documentations."}, {"id": 191447057, "node_id": "MDU6TGFiZWwxOTE0NDcwNTc=", "url": "https://api.github.com/repos/nodejs/node/labels/meta", "name": "meta", "color": "fef2c0", "default": false, "description": "Issues and PRs related to the general management of the project."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-10-25T15:28:21Z", "updated_at": "2025-09-12T22:51:32Z", "closed_at": "2025-09-12T22:51:32Z", "author_association": "MEMBER", "type": null, "active_lock_reason": null, "sub_issues_summary": {"total": 0, "completed": 0, "percent_completed": 0}, "issue_dependencies_summary": {"blocked_by": 0, "total_blocked_by": 0, "blocking": 0, "total_blocking": 0}, "body": "This is a TODO list that I took during the onboarding of legendcas. Opening an issue in case I forget about them - but feel free to pick them up if you are interested to help!\r\n\r\n- [ ] Mention this trick `git remote set-url origin --push no_push`\r\n- [ ] Mention nodejs/help (when triaging issues)\r\n- [ ] It\u2019s not necessary to explain everything in the on boarding document. The person doing the onboarding can ask whether the collaborator already knows about each point and skip if they already do. If they have questions, answer them.\r\n- [ ] Mention the new 7 day rule, or just add a link to the collaborator guide about the rules\r\n- [ ] Mention other commonly used CIs\r\n  - [ ] micro benchmark\r\n  - [ ] v8\r\n  - [ ] custom e.g. internet\r\n  - [ ] stress test\r\n  - [ ] citgm\r\n- [ ] Mention how to get a git ref to use in the Jenkins build parameters\r\n- [ ] The `what belongs in Node.js` seems a bit outdated? In general we just open issues and discuss on a case-by-case basis\r\n- [ ] Mention the travis CI\r\n- [ ] Mention the resume build button and the stop button in Jenkins\r\n- [ ] Mention how to report issues to the build team: with the machine id\r\n- [ ] TODO(joyee): Update node-core-utils recording, and just add a link to the recording to quickly demonstrate how to use it\r\n- [ ] Add the github-bot and node-core-utils repo to the \"other repos\" links, and explain what those are\r\n- [ ] Mention the Collboarator github team discussion page\r\n- [ ] Mention how security bugs are handled (or a link to SECURITY.md)\r\n- [ ] Mention that collaborators can nominate other collaborators (and add a link to GOVERNANCE.md)\r\n", "reactions": {"url": "https://api.github.com/repos/nodejs/node/issues/30116/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/nodejs/node/issues/30116/timeline", "performed_via_github_app": null, "state_reason": "completed", "score": 1.0}, {"url": "https://api.github.com/repos/nodejs/node/issues/9720", "repository_url": "https://api.github.com/repos/nodejs/node", "labels_url": "https://api.github.com/repos/nodejs/node/issues/9720/labels{/name}", "comments_url": "https://api.github.com/repos/nodejs/node/issues/9720/comments", "events_url": "https://api.github.com/repos/nodejs/node/issues/9720/events", "html_url": "https://github.com/nodejs/node/issues/9720", "id": 190774336, "node_id": "MDU6SXNzdWUxOTA3NzQzMzY=", "number": 9720, "title": "Poll phase documentation", "user": {"login": "LucaFranceschini", "id": 23529148, "node_id": "MDQ6VXNlcjIzNTI5MTQ4", "avatar_url": "https://avatars.githubusercontent.com/u/23529148?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LucaFranceschini", "html_url": "https://github.com/LucaFranceschini", "followers_url": "https://api.github.com/users/LucaFranceschini/followers", "following_url": "https://api.github.com/users/LucaFranceschini/following{/other_user}", "gists_url": "https://api.github.com/users/LucaFranceschini/gists{/gist_id}", "starred_url": "https://api.github.com/users/LucaFranceschini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LucaFranceschini/subscriptions", "organizations_url": "https://api.github.com/users/LucaFranceschini/orgs", "repos_url": "https://api.github.com/users/LucaFranceschini/repos", "events_url": "https://api.github.com/users/LucaFranceschini/events{/privacy}", "received_events_url": "https://api.github.com/users/LucaFranceschini/received_events", "type": "User", "user_view_type": "public", "site_admin": false}, "labels": [{"id": 151728677, "node_id": "MDU6TGFiZWwxNTE3Mjg2Nzc=", "url": "https://api.github.com/repos/nodejs/node/labels/help%20wanted", "name": "help wanted", "color": "159818", "default": true, "description": "Issues that need assistance from volunteers or PRs that need help to proceed."}, {"id": 155267517, "node_id": "MDU6TGFiZWwxNTUyNjc1MTc=", "url": "https://api.github.com/repos/nodejs/node/labels/doc", "name": "doc", "color": "006b75", "default": false, "description": "Issues and PRs related to the documentations."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2016-11-21T16:51:07Z", "updated_at": "2025-09-12T22:46:06Z", "closed_at": "2025-09-12T22:46:06Z", "author_association": "NONE", "type": null, "active_lock_reason": null, "sub_issues_summary": {"total": 0, "completed": 0, "percent_completed": 0}, "issue_dependencies_summary": {"blocked_by": 0, "total_blocked_by": 0, "blocking": 0, "total_blocking": 0}, "body": "<!--\r\nThank you for reporting an issue.\r\n\r\nThis issue tracker is for bugs and issues found within Node.js core.\r\nIf you require more general support please file an issue on our help\r\nrepo. https://github.com/nodejs/help\r\n\r\n\r\nPlease fill in as much of the template below as you're able.\r\n\r\nVersion: output of `node -v`\r\nPlatform: output of `uname -a` (UNIX), or version and 32 or 64-bit (Windows)\r\nSubsystem: if known, please specify affected core module name\r\n\r\nIf possible, please provide code that demonstrates the problem, keeping it as\r\nsimple and free of external dependencies as you are able.\r\n-->\r\n\r\n* **Version**:\r\n* **Platform**:\r\n* **Subsystem**:\r\n\r\n<!-- Enter your issue details below this comment. -->\r\n~~[`/doc/topics/event-loop-timers-and-nexttick.md`](https://github.com/nodejs/node/blob/master/doc/topics/event-loop-timers-and-nexttick.md#poll)~~\r\nThe documentation has been moved (https://github.com/nodejs/node/issues/10792):\r\nhttps://github.com/nodejs/nodejs.org/blob/master/locale/en/docs/guides/event-loop-timers-and-nexttick.md\r\n\r\nThe description of the poll phase is not clear at all to me. Could someone please clarify the (sequence of the) operations in this phase?\r\n\r\nExamples:\r\n\r\n> When the event loop enters the **poll** phase _and there are no timers scheduled_, one of two things will happen:\r\n\r\nWell, what happens if _there are_ timers scheduled?\r\n\r\n> If scripts **have not** been scheduled by `setImmediate()`, the event loop will wait for callbacks to be added to the queue, then execute them immediately.\r\n\r\nUntil... what?\r\n\r\n> Once the poll queue is empty [...]\r\n\r\nThis could not even happen if we reached the system-dependent hard limit, right? Would this step be ignored in such cases?", "reactions": {"url": "https://api.github.com/repos/nodejs/node/issues/9720/reactions", "total_count": 19, "+1": 19, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/nodejs/node/issues/9720/timeline", "performed_via_github_app": null, "state_reason": "completed", "score": 1.0}, {"url": "https://api.github.com/repos/nodejs/node/issues/22052", "repository_url": "https://api.github.com/repos/nodejs/node", "labels_url": "https://api.github.com/repos/nodejs/node/issues/22052/labels{/name}", "comments_url": "https://api.github.com/repos/nodejs/node/issues/22052/comments", "events_url": "https://api.github.com/repos/nodejs/node/issues/22052/events", "html_url": "https://github.com/nodejs/node/issues/22052", "id": 346449635, "node_id": "MDU6SXNzdWUzNDY0NDk2MzU=", "number": 22052, "title": "[async_hooks] - A possible bug or requirement of clarity?  Perhaps another hook needed?", "user": {"login": "bradennapier", "id": 15365418, "node_id": "MDQ6VXNlcjE1MzY1NDE4", "avatar_url": "https://avatars.githubusercontent.com/u/15365418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bradennapier", "html_url": "https://github.com/bradennapier", "followers_url": "https://api.github.com/users/bradennapier/followers", "following_url": "https://api.github.com/users/bradennapier/following{/other_user}", "gists_url": "https://api.github.com/users/bradennapier/gists{/gist_id}", "starred_url": "https://api.github.com/users/bradennapier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bradennapier/subscriptions", "organizations_url": "https://api.github.com/users/bradennapier/orgs", "repos_url": "https://api.github.com/users/bradennapier/repos", "events_url": "https://api.github.com/users/bradennapier/events{/privacy}", "received_events_url": "https://api.github.com/users/bradennapier/received_events", "type": "User", "user_view_type": "public", "site_admin": false}, "labels": [{"id": 171787081, "node_id": "MDU6TGFiZWwxNzE3ODcwODE=", "url": "https://api.github.com/repos/nodejs/node/labels/discuss", "name": "discuss", "color": "02d7e1", "default": false, "description": "Issues opened for discussions and feedbacks."}, {"id": 442446525, "node_id": "MDU6TGFiZWw0NDI0NDY1MjU=", "url": "https://api.github.com/repos/nodejs/node/labels/async_hooks", "name": "async_hooks", "color": "55a3f7", "default": false, "description": "Issues and PRs related to the async hooks subsystem."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-08-01T05:06:29Z", "updated_at": "2025-09-12T22:43:34Z", "closed_at": "2025-09-12T22:43:34Z", "author_association": "NONE", "type": null, "active_lock_reason": null, "sub_issues_summary": {"total": 0, "completed": 0, "percent_completed": 0}, "issue_dependencies_summary": {"blocked_by": 0, "total_blocked_by": 0, "blocking": 0, "total_blocking": 0}, "body": "* **Version**: 10.7.0\r\n* **Platform**: OSX\r\n\r\n> **Note:** Sorry this got so long but I think it does help to illustrate the flow and process that brought this issue up!  Please bare with me as I do feel this may be part of a larger issue at this point?\r\n\r\n**Update:** Added a repro [async_hooks_repro](https://github.com/bradennapier/async_hooks_repro)\r\n\r\nHey Guys!\r\n\r\nSo I am playing with `async_hooks` and definitely some powerful stuff here!  It's a bit hard to grasp at first and seems fairly prone to potential problems for people using it to cause memory leaks and such. \r\n\r\nI think one source of that is that the `destroy` is called when the garbage collector actually collects a given resource while the `after` doesn't fire for many things.  This seems like it will lead towards confusion and people likely causing larger problems in their applications that may be difficult to see (with the garbage collector which is notoriously difficult to troubleshoot - no complaints there though, understand fully).\r\n\r\nI was wondering if it makes sense to have another hook for `complete` which is similar to `after` but is guaranteed to fire once the asynchronous task itself has finished its job.  This may not be possible for whatever reason but it does seem to fit better with how it feels it should operate. \r\n\r\nTo illustrate, just want to show what my experience as I was trying to grasp what was going on was as it may help to hear from avg user that doesn't necessarily understand the intimate details of the gc may approach this.\r\n\r\n---\r\n\r\n\r\n## The Project \r\n\r\nSo in order to learn this, I wanted to build what most others already have built for the most part and make sure I understood the overall flow of everything.  Basically a replacement for the node-continuation library.\r\n\r\nEssentially a way to create an asynchronous state that is available for the length of a scope regardless of asynchronous calls made in-between.\r\n\r\nI have a couple general goals:\r\n\r\n- Allow \"contexts\" (namespace) to be created which are used to capture the state throughout a lifecycle. \r\n- Enable the created hooks only when we have a running asynchronous context\r\n- Disable the created hooks as soon as we are no longer executing\r\n\r\n## Test Code\r\n\r\nI ended up adding logs (using fs.writeSync) to each hook to see where and when things occur so I could grasp the exact flow.  My test code for a simple example here looks like this:\r\n\r\n```javascript\r\nconst ctx = require('./dist').default;\r\nconst log = require('./dist/log').default;\r\n\r\nfunction fn() {\r\n  // outputs using fs.writeSync(1, message)\r\n  log(`\r\n    Context State: ${JSON.stringify(ctx.get('foo').state())}\r\n  `);\r\n}\r\n\r\nctx.run('foo', () => {\r\n  ctx.get('foo').set('myvar', 'value3');\r\n  setTimeout(fn);\r\n});\r\n```\r\n\r\nIn this simple example it works exactly as I'd expect, outputting the following:\r\n\r\n```javascript\r\n[ENABLING HOOKS]\r\n[START]: Context Base EID: 5\r\n1533096660930 | [INIT]     | Timeout     | asyncId 6 | trigger: 5\r\n1533096660930 | [INIT]     | TIMERWRAP   | asyncId 7 | trigger: 5\r\n\r\n    Context State: {\"root\":5,\"myvar\":\"value3\"}\r\n\r\n1533096660931 | [AFTER]    | asyncId 6\r\n1533096660931 | [AFTER]    | asyncId 7\r\n1533096660931 | [DESTROY]  | asyncId 6   | remaining 1   | ids left: 7\r\n1533096660931 | [DESTROY]  | asyncId 7   | remaining 0   | ids left:\r\n[DISABLING HOOKS]\r\n``` \r\n\r\n> In case there is confusion, the \"state\" value includes whatever is set on it and a key \"root\" which saves the root eid that started the context.\r\n\r\n### Where it gets tricky\r\n\r\nThis may be less of an issue than I'm worried about, but where I started to run into confusion was when other things started going on within the example.   For example, if I add a timeout outside of the entire context/hooks process, now we run into a larger issue:\r\n\r\n> **Note:** This is where I actually solved the problem but the solution is so subtle and it is very hard to understand exactly what was happening here.  I think it likely still should have better handling in some way so that leaks are not so simple to occur.\r\n\r\nSo my issue came in when I then wanted to embed a call to run within another call to run.  When I would do this, each time I ended up with a memory leak situation where a single value was never calling `after`, `promiseResolve`, or `destroy`.  \r\n\r\n#### Script \r\n\r\n```javascript\r\nfunction fn() {\r\n  // outputs using fs.writeSync(1, message)\r\n  log(`\r\n    Context State: ${JSON.stringify(ctx.get('foo').state())}\r\n  `);\r\n}\r\n\r\nctx.run('foo', () => {\r\n  ctx.get('foo').set('myvar', 'value1');\r\n  setTimeout(fn);\r\n  ctx.run('foo', () => {\r\n    ctx.get('foo').set('myvar', 'value2');\r\n    setTimeout(fn);\r\n  });\r\n});\r\n\r\nsetTimeout(() => {\r\n  console.log(`${String(Date.now())} | EVALUATION COMPLETED`);\r\n}, 8000);\r\n```\r\n\r\n#### Outputs \r\n\r\n```javascript\r\n[ENABLING HOOKS]\r\n[START]: Context Base EID: 5\r\n1533098775911 | [INIT]     | Timeout     | asyncId 6 | trigger: 5\r\n1533098775911 | [INIT]     | TIMERWRAP   | asyncId 7 | trigger: 5\r\n1533098775911 | [INIT]     | PROMISE     | asyncId 8 | trigger: 5\r\n1533098775911 | [INIT]     | PROMISE     | asyncId 9 | trigger: 5\r\n[START]: Context Base EID: 10\r\n1533098775912 | [INIT]     | Timeout     | asyncId 11 | trigger: 10\r\n1533098775912 | [AFTER]    | asyncId 10\r\n1533098775912 | [DESTROY]  | asyncId 10  | remaining 6   | ids left: 5, 6, 7, 8, 9, 11\r\n1533098775912 | [RESOLVE]  | asyncId 9\r\n1533098775912 | [DESTROY]  | asyncId 9   | remaining 5   | ids left: 5, 6, 7, 8, 11\r\n1533098775912 | [AFTER]    | asyncId 5\r\n1533098775912 | [DESTROY]  | asyncId 5   | remaining 4   | ids left: 6, 7, 8, 11\r\n\r\n    Context State: {\"root\":5,\"myvar\":\"value1\"}\r\n\r\n1533098775913 | [AFTER]    | asyncId 6\r\n1533098775913 | [DESTROY]  | asyncId 6   | remaining 3   | ids left: 7, 8, 11\r\n\r\n    Context State: {\"root\":10,\"myvar\":\"value2\"}\r\n\r\n1533098775913 | [AFTER]    | asyncId 11\r\n1533098775913 | [DESTROY]  | asyncId 11  | remaining 2   | ids left: 7, 8\r\n1533098775913 | [AFTER]    | asyncId 7\r\n1533098775913 | [DESTROY]  | asyncId 7   | remaining 1   | ids left: 8\r\n\r\n1533098783913 | EVALUATION COMPLETED\r\n```\r\n\r\nSo here we seem to have a problem.  A promise (asyncId 8) is never being handled by our hooks.  In order to evaluate further, I ended up saving id 8 during init to global and later logging it so it wouldn't be caught by console.log and it ended up showing that there is a Promise that is never resolved, it remains pending forever. \r\n\r\nWhat is weird and I still don't fully grasp, is that the problem was with an `async function`  which actually really wasn't using any async features (my original hope was that `.run()` would return a promise outside of the asynchronous context - but that proved pointless.  \r\n\r\nStill, this tiny little problem would cause memory leaks that 99% of people probably would never be aware existed.  \r\n\r\nSo `ctx.run(...args)` looked like this:\r\n\r\n```javascript\r\nexport async function runInContext(contextID, fn, ...args) {\r\n  const context = AsyncContexts.get(contextID) || createAsyncContext(contextID);\r\n  const runner = new ContextRoot(context, fn);\r\n  runner.run(args);\r\n}\r\n\r\nexport default Object.freeze({\r\n  create: createAsyncContext,\r\n  get: getContext,\r\n  run: runInContext,\r\n});\r\n\r\n```\r\n\r\nThis is the promise that will remain pending forever (async id 8).  This is a really odd place in my mind for the problem to be happening - I would imagine that this promise would be resolved immediately after the 3 lines shown are completed.  The functions that it calls do complete within a millisecond so the entire body of `runInContext` absolutely is finished right away. \r\n\r\n### In Summary\r\n\r\nJust wanted to say thanks, I know it got long but I actually feel this is either part of a larger bug or might help me understand what about the gc would cause this type of thing.  We have ongoing issues with gc issues freezing up a larger application that I have been brought on to help and the problem seems largely due to Promises as well so I am wondering if there is a quirk about them and the gc that I am not fully grasping that could help in both areas here.\r\n\r\nAnyway, by just making `runInContext` a function instead of `async function` it appears to work as expected for the most part:\r\n\r\n```javascript\r\n[ENABLING HOOKS]\r\n[START]: Context Base EID: 5\r\n1533099546996 | [INIT]     | Timeout     | asyncId 6 | trigger: 5\r\n1533099546997 | [INIT]     | TIMERWRAP   | asyncId 7 | trigger: 5\r\n[START]: Context Base EID: 8\r\n1533099546997 | [INIT]     | Timeout     | asyncId 9 | trigger: 8\r\n1533099546997 | [AFTER]    | asyncId 8\r\n1533099546997 | [DESTROY]  | asyncId 8   | remaining 4   | ids left: 5, 6, 7, 9\r\n1533099546997 | [AFTER]    | asyncId 5\r\n1533099546997 | [DESTROY]  | asyncId 5   | remaining 3   | ids left: 6, 7, 9\r\n\r\n    Context State: {\"root\":5,\"myvar\":\"value1\"}\r\n\r\n1533099546998 | [AFTER]    | asyncId 6\r\n1533099546998 | [DESTROY]  | asyncId 6   | remaining 2   | ids left: 7, 9\r\n\r\n    Context State: {\"root\":8,\"myvar\":\"value2\"}\r\n\r\n1533099546998 | [AFTER]    | asyncId 9\r\n1533099546998 | [DESTROY]  | asyncId 9   | remaining 1   | ids left: 7\r\n1533099546998 | [AFTER]    | asyncId 7\r\n1533099546998 | [DESTROY]  | asyncId 7   | remaining 0   | ids left:\r\n[DISABLING HOOKS]\r\n\r\n1533099554997 | EVALUATION COMPLETED\r\n```\r\n\r\n\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/nodejs/node/issues/22052/reactions", "total_count": 2, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 1, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/nodejs/node/issues/22052/timeline", "performed_via_github_app": null, "state_reason": "completed", "score": 1.0}, {"url": "https://api.github.com/repos/nodejs/node/issues/22021", "repository_url": "https://api.github.com/repos/nodejs/node", "labels_url": "https://api.github.com/repos/nodejs/node/issues/22021/labels{/name}", "comments_url": "https://api.github.com/repos/nodejs/node/issues/22021/comments", "events_url": "https://api.github.com/repos/nodejs/node/issues/22021/events", "html_url": "https://github.com/nodejs/node/issues/22021", "id": 345573541, "node_id": "MDU6SXNzdWUzNDU1NzM1NDE=", "number": 22021, "title": "doc: explanation about flagged feature etiquette needed", "user": {"login": "devsnek", "id": 5952481, "node_id": "MDQ6VXNlcjU5NTI0ODE=", "avatar_url": "https://avatars.githubusercontent.com/u/5952481?v=4", "gravatar_id": "", "url": "https://api.github.com/users/devsnek", "html_url": "https://github.com/devsnek", "followers_url": "https://api.github.com/users/devsnek/followers", "following_url": "https://api.github.com/users/devsnek/following{/other_user}", "gists_url": "https://api.github.com/users/devsnek/gists{/gist_id}", "starred_url": "https://api.github.com/users/devsnek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/devsnek/subscriptions", "organizations_url": "https://api.github.com/users/devsnek/orgs", "repos_url": "https://api.github.com/users/devsnek/repos", "events_url": "https://api.github.com/users/devsnek/events{/privacy}", "received_events_url": "https://api.github.com/users/devsnek/received_events", "type": "User", "user_view_type": "public", "site_admin": false}, "labels": [{"id": 151728677, "node_id": "MDU6TGFiZWwxNTE3Mjg2Nzc=", "url": "https://api.github.com/repos/nodejs/node/labels/help%20wanted", "name": "help wanted", "color": "159818", "default": true, "description": "Issues that need assistance from volunteers or PRs that need help to proceed."}, {"id": 155267517, "node_id": "MDU6TGFiZWwxNTUyNjc1MTc=", "url": "https://api.github.com/repos/nodejs/node/labels/doc", "name": "doc", "color": "006b75", "default": false, "description": "Issues and PRs related to the documentations."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-07-29T23:50:27Z", "updated_at": "2025-09-12T22:41:53Z", "closed_at": "2025-09-12T22:41:52Z", "author_association": "MEMBER", "type": null, "active_lock_reason": null, "sub_issues_summary": {"total": 0, "completed": 0, "percent_completed": 0}, "issue_dependencies_summary": {"blocked_by": 0, "total_blocked_by": 0, "blocking": 0, "total_blocking": 0}, "body": "There is a lot of misunderstanding in the ecosystem about how harmony* and experimental flags should be used, most alarmingly in the case of libraries that ship support for features that are flagged.\r\n\r\nWe need to document:\r\n- Why flags are how we (and V8*) ship experimental features\r\n- Why you should only use flagged features at an application level\r\n- Why you shouldn't use flagged features in production environments\r\n- Why you shouldn't publish versions of your libraries with support for flagged features\r\n- Given the restrictions above, ways that you *can* help us test flagged features\r\n\r\nThis seems like a lot for one person so I thought I would open an issue about it and get some collaboration going.\r\n\r\n\\*We probably shouldn't document V8's flagging, but it might be necessary to at least mention harmony flags.", "reactions": {"url": "https://api.github.com/repos/nodejs/node/issues/22021/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/nodejs/node/issues/22021/timeline", "performed_via_github_app": null, "state_reason": "completed", "score": 1.0}, {"url": "https://api.github.com/repos/nodejs/node/issues/21383", "repository_url": "https://api.github.com/repos/nodejs/node", "labels_url": "https://api.github.com/repos/nodejs/node/issues/21383/labels{/name}", "comments_url": "https://api.github.com/repos/nodejs/node/issues/21383/comments", "events_url": "https://api.github.com/repos/nodejs/node/issues/21383/events", "html_url": "https://github.com/nodejs/node/issues/21383", "id": 333201353, "node_id": "MDU6SXNzdWUzMzMyMDEzNTM=", "number": 21383, "title": "make test: use after free: parallel/test-cli-node-options", "user": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "user_view_type": "public", "site_admin": false}, "labels": [{"id": 527937726, "node_id": "MDU6TGFiZWw1Mjc5Mzc3MjY=", "url": "https://api.github.com/repos/nodejs/node/labels/trace_events", "name": "trace_events", "color": "f4a6c1", "default": false, "description": "Issues and PRs related to V8, Node.js core, and userspace code trace events."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-06-18T09:48:18Z", "updated_at": "2025-09-12T22:40:43Z", "closed_at": "2025-09-12T22:40:43Z", "author_association": "NONE", "type": null, "active_lock_reason": null, "sub_issues_summary": {"total": 0, "completed": 0, "percent_completed": 0}, "issue_dependencies_summary": {"blocked_by": 0, "total_blocked_by": 0, "blocking": 0, "total_blocking": 0}, "body": "git repo (nodejs/node) @ 64de66d78888f46c74ba8b8ea18100a9f35a1c7a\r\nI was running ```` CFLAGS=\"-fsanitize=address -fno-sanitize=leak -g3\" CXXFLAGS=\"$CFLAGS\" LDFLAGS=\"-fsanitize=address -fno-sanitize=leak -g3\"  ASAN_OPTIONS=detect_leaks=0   make test -j 4 ````\r\nplatform: ````Linux t470 4.17.0-2-MANJARO #1 SMP PREEMPT Fri Jun 8 07:13:17 UTC 2018 x86_64 GNU/Linux````\r\n\r\nI used clang 6.0 as CC/CXX.\r\n\r\nDuring ````make test````, I got a use after free:\r\n\r\n````\r\n[----------] Global test environment tear-down\r\n[==========] 74 tests from 9 test cases ran. (424 ms total)\r\n[  PASSED  ] 74 tests.\r\nmake -s jstest\r\n  touch 251b41f63160e3e22459f6ddaeb4fca739404752.intermediate\r\n  touch 1b6e683759875e45877a449826f87697ec02fb35.intermediate\r\n  LD_LIBRARY_PATH=/home/matthias/vcs/github/node/out/Release/lib.host:/home/matthias/vcs/github/node/out/Release/lib.target:$LD_LIBRARY_PATH; export LD_LIBRARY_PATH; cd ../.; mkdir -p /home/matthias/vcs/github/node/out/Release/obj/gen/src/node/inspector/protocol; python deps/v8/third_party/inspector_protocol/CodeGenerator.py --jinja_dir deps/v8/third_party/inspector_protocol/.. --output_base \"/home/matthias/vcs/github/node/out/Release/obj/gen/src/\" --config \"/home/matthias/vcs/github/node/out/Release/obj/gen/node_protocol_config.json\"\r\n  LD_LIBRARY_PATH=/home/matthias/vcs/github/node/out/Release/lib.host:/home/matthias/vcs/github/node/out/Release/lib.target:$LD_LIBRARY_PATH; export LD_LIBRARY_PATH; cd ../deps/v8/gypfiles; mkdir -p /home/matthias/vcs/github/node/out/Release/obj/gen/src/inspector/protocol /home/matthias/vcs/github/node/out/Release/obj/gen/include/inspector; python ../third_party/inspector_protocol/CodeGenerator.py --jinja_dir ../third_party --output_base \"/home/matthias/vcs/github/node/out/Release/obj/gen/src/inspector\" --config ../src/inspector/inspector_protocol_config.json\r\n=== release test-cli-node-options ===\r\nPath: parallel/test-cli-node-options\r\nassert.js:671\r\n    throw newErr;\r\n    ^\r\nAssertionError [ERR_ASSERTION]: ifError got unwanted exception: Command failed: /home/matthias/vcs/github/node/out/Release/node -e console.log(\"B\")\r\n=================================================================\r\n==25285==ERROR: AddressSanitizer: heap-use-after-free on address 0x619000000ae0 at pc 0x000001a219ac bp 0x7f46b37fed10 sp 0x7f46b37fed08\r\nREAD of size 8 at 0x619000000ae0 thread T1\r\n    #0 0x1a219ab in uv__run_closing_handles /home/matthias/vcs/github/node/out/../deps/uv/src/unix/core.c:299:12\r\n    #1 0x1a219ab in uv_run /home/matthias/vcs/github/node/out/../deps/uv/src/unix/core.c:370\r\n    #2 0x7f46b6490074 in start_thread (/usr/lib/libpthread.so.0+0x7074)\r\n    #3 0x7f46b5fad53e in __GI___clone (/usr/lib/libc.so.6+0xf853e)\r\n0x619000000ae0 is located 96 bytes inside of 952-byte region [0x619000000a80,0x619000000e38)\r\nfreed by thread T0 here:\r\n    #0 0x16cbbe2 in operator delete(void*) /home/matthias/LLVM/LLVM6/stage_2/llvm/projects/compiler-rt/lib/asan/asan_new_delete.cc:149:3\r\n    #1 0x18f762d in std::default_delete<node::tracing::AsyncTraceWriter>::operator()(node::tracing::AsyncTraceWriter*) const /usr/lib64/gcc/x86_64-pc-linux-gnu/8.1.1/../../../../include/c++/8.1.1/bits/unique_ptr.h:81:2\r\n    #2 0x18f762d in std::unique_ptr<node::tracing::AsyncTraceWriter, std::default_delete<node::tracing::AsyncTraceWriter> >::~unique_ptr() /usr/lib64/gcc/x86_64-pc-linux-gnu/8.1.1/../../../../include/c++/8.1.1/bits/unique_ptr.h:274\r\n    #3 0x18f762d in std::pair<int const, std::unique_ptr<node::tracing::AsyncTraceWriter, std::default_delete<node::tracing::AsyncTraceWriter> > >::~pair() /usr/lib64/gcc/x86_64-pc-linux-gnu/8.1.1/../../../../include/c++/8.1.1/bits/stl_pair.h:198\r\n    #4 0x18f762d in void __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<int const, std::unique_ptr<node::tracing::AsyncTraceWriter, std::default_delete<node::tracing::AsyncTraceWriter> > >, false> >::destroy<std::pair<int const, std::unique_ptr<node::tracing::AsyncTraceWriter, std::default_delete<node::tracing::AsyncTraceWriter> > > >(std::pair<int const, std::unique_ptr<node::tracing::AsyncTraceWriter, std::default_delete<node::tracing::AsyncTraceWriter> > >*) /usr/lib64/gcc/x86_64-pc-linux-gnu/8.1.1/../../../../include/c++/8.1.1/ext/new_allocator.h:140\r\n    #5 0x18f762d in void std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<int const, std::unique_ptr<node::tracing::AsyncTraceWriter, std::default_delete<node::tracing::AsyncTraceWriter> > >, false> > >::destroy<std::pair<int const, std::unique_ptr<node::tracing::AsyncTraceWriter, std::default_delete<node::tracing::AsyncTraceWriter> > > >(std::allocator<std::__detail::_Hash_node<std::pair<int const, std::unique_ptr<node::tracing::AsyncTraceWriter, std::default_delete<node::tracing::AsyncTraceWriter> > >, false> >&, std::pair<int const, std::unique_ptr<node::tracing::AsyncTraceWriter, std::default_delete<node::tracing::AsyncTraceWriter> > >*) /usr/lib64/gcc/x86_64-pc-linux-gnu/8.1.1/../../../../include/c++/8.1.1/bits/alloc_traits.h:487\r\n    #6 0x18f762d in std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<int const, std::unique_ptr<node::tracing::AsyncTraceWriter, std::default_delete<node::tracing::AsyncTraceWriter> > >, false> > >::_M_deallocate_node(std::__detail::_Hash_node<std::pair<int const, std::unique_ptr<node::tracing::AsyncTraceWriter, std::default_delete<node::tracing::AsyncTraceWriter> > >, false>*) /usr/lib64/gcc/x86_64-pc-linux-gnu/8.1.1/../../../../include/c++/8.1.1/bits/hashtable_policy.h:2100\r\n    #7 0x18f762d in std::_Hashtable<int, std::pair<int const, std::unique_ptr<node::tracing::AsyncTraceWriter, std::default_delete<node::tracing::AsyncTraceWriter> > >, std::allocator<std::pair<int const, std::unique_ptr<node::tracing::AsyncTraceWriter, std::default_delete<node::tracing::AsyncTraceWriter> > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_erase(unsigned long, std::__detail::_Hash_node_base*, std::__detail::_Hash_node<std::pair<int const, std::unique_ptr<node::tracing::AsyncTraceWriter, std::default_delete<node::tracing::AsyncTraceWriter> > >, false>*) /usr/lib64/gcc/x86_64-pc-linux-gnu/8.1.1/../../../../include/c++/8.1.1/bits/hashtable.h:1905\r\n    #8 0x18f762d in std::_Hashtable<int, std::pair<int const, std::unique_ptr<node::tracing::AsyncTraceWriter, std::default_delete<node::tracing::AsyncTraceWriter> > >, std::allocator<std::pair<int const, std::unique_ptr<node::tracing::AsyncTraceWriter, std::default_delete<node::tracing::AsyncTraceWriter> > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_erase(std::integral_constant<bool, true>, int const&) /usr/lib64/gcc/x86_64-pc-linux-gnu/8.1.1/../../../../include/c++/8.1.1/bits/hashtable.h:1931\r\n    #9 0x18f762d in std::_Hashtable<int, std::pair<int const, std::unique_ptr<node::tracing::AsyncTraceWriter, std::default_delete<node::tracing::AsyncTraceWriter> > >, std::allocator<std::pair<int const, std::unique_ptr<node::tracing::AsyncTraceWriter, std::default_delete<node::tracing::AsyncTraceWriter> > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::erase(int const&) /usr/lib64/gcc/x86_64-pc-linux-gnu/8.1.1/../../../../include/c++/8.1.1/bits/hashtable.h:771\r\n    #10 0x18f762d in std::unordered_map<int, std::unique_ptr<node::tracing::AsyncTraceWriter, std::default_delete<node::tracing::AsyncTraceWriter> >, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<int const, std::unique_ptr<node::tracing::AsyncTraceWriter, std::default_delete<node::tracing::AsyncTraceWriter> > > > >::erase(int const&) /usr/lib64/gcc/x86_64-pc-linux-gnu/8.1.1/../../../../include/c++/8.1.1/bits/unordered_map.h:818\r\n    #11 0x18f762d in node::tracing::Agent::Disconnect(int) /home/matthias/vcs/github/node/out/../src/tracing/agent.cc:100\r\n    #12 0x18fb9a8 in node::tracing::Agent::DisconnectClient(std::pair<node::tracing::Agent*, int>*) /home/matthias/vcs/github/node/out/../src/tracing/agent.h:67:22\r\n    #13 0x1770792 in node::$_0::StopTracingAgent() /home/matthias/vcs/github/node/out/../src/node.cc:334:23\r\n    #14 0x1770792 in node::Start(int, char**) /home/matthias/vcs/github/node/out/../src/node.cc:3684\r\n    #15 0x7f46b5ed806a in __libc_start_main (/usr/lib/libc.so.6+0x2306a)\r\npreviously allocated by thread T0 here:\r\n    #0 0x16cb002 in operator new(unsigned long) /home/matthias/LLVM/LLVM6/stage_2/llvm/projects/compiler-rt/lib/asan/asan_new_delete.cc:92:3\r\n    #1 0x18f93bf in node::tracing::Agent::Enable(std::set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) /home/matthias/vcs/github/node/out/../src/tracing/agent.cc:137:9\r\n    #2 0x18f857c in node::tracing::Agent::Enable(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) /home/matthias/vcs/github/node/out/../src/tracing/agent.cc:120:3\r\n    #3 0x1770699 in node::$_0::StartTracingAgent() /home/matthias/vcs/github/node/out/../src/node.cc:329:21\r\n    #4 0x1770699 in node::$_0::Initialize(int) /home/matthias/vcs/github/node/out/../src/node.cc:294\r\n    #5 0x1770699 in node::Start(int, char**) /home/matthias/vcs/github/node/out/../src/node.cc:3678\r\n    #6 0x7f46b5ed806a in __libc_start_main (/usr/lib/libc.so.6+0x2306a)\r\nThread T1 created by T0 here:\r\n    #0 0x168601d in __interceptor_pthread_create /home/matthias/LLVM/LLVM6/stage_2/llvm/projects/compiler-rt/lib/asan/asan_interceptors.cc:204:3\r\n    #1 0x1a4755b in uv_thread_create /home/matthias/vcs/github/node/out/../deps/uv/src/unix/thread.c:202:9\r\n    #2 0x18f62de in node::tracing::Agent::Start() /home/matthias/vcs/github/node/out/../src/tracing/agent.cc:65:3\r\n    #3 0x18f93b5 in node::tracing::Agent::Enable(std::set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) /home/matthias/vcs/github/node/out/../src/tracing/agent.cc:135:5\r\n    #4 0x18f857c in node::tracing::Agent::Enable(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) /home/matthias/vcs/github/node/out/../src/tracing/agent.cc:120:3\r\n    #5 0x1770699 in node::$_0::StartTracingAgent() /home/matthias/vcs/github/node/out/../src/node.cc:329:21\r\n    #6 0x1770699 in node::$_0::Initialize(int) /home/matthias/vcs/github/node/out/../src/node.cc:294\r\n    #7 0x1770699 in node::Start(int, char**) /home/matthias/vcs/github/node/out/../src/node.cc:3678\r\n    #8 0x7f46b5ed806a in __libc_start_main (/usr/lib/libc.so.6+0x2306a)\r\nSUMMARY: AddressSanitizer: heap-use-after-free /home/matthias/vcs/github/node/out/../deps/uv/src/unix/core.c:299:12 in uv__run_closing_handles\r\nShadow bytes around the buggy address:\r\n  0x0c327fff8100: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\r\n  0x0c327fff8110: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\r\n  0x0c327fff8120: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\r\n  0x0c327fff8130: 00 00 00 00 00 fa fa fa fa fa fa fa fa fa fa fa\r\n  0x0c327fff8140: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\r\n=>0x0c327fff8150: fd fd fd fd fd fd fd fd fd fd fd fd[fd]fd fd fd\r\n  0x0c327fff8160: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd\r\n  0x0c327fff8170: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd\r\n  0x0c327fff8180: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd\r\n  0x0c327fff8190: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd\r\n  0x0c327fff81a0: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd\r\nShadow byte legend (one shadow byte represents 8 application bytes):\r\n  Addressable:           00\r\n  Partially addressable: 01 02 03 04 05 06 07\r\n  Heap left redzone:       fa\r\n  Freed heap region:       fd\r\n  Stack left redzone:      f1\r\n  Stack mid redzone:       f2\r\n  Stack right redzone:     f3\r\n  Stack after return:      f5\r\n  Stack use after scope:   f8\r\n  Global redzone:          f9\r\n  Global init order:       f6\r\n  Poisoned by user:        f7\r\n  Container overflow:      fc\r\n  Array cookie:            ac\r\n  Intra object redzone:    bb\r\n  ASan internal:           fe\r\n  Left alloca redzone:     ca\r\n  Right alloca redzone:    cb\r\n==25285==ABORTING\r\n    at ChildProcess.exithandler (child_process.js:291:12)\r\n    at ChildProcess.emit (events.js:182:13)\r\n    at maybeClose (internal/child_process.js:961:16)\r\n    at Process.ChildProcess._handle.onexit (internal/child_process.js:248:5)\r\nCommand: out/Release/node /home/matthias/vcs/github/node/test/parallel/test-cli-node-options.js\r\n=== release test-crypto-dh-leak ===\r\nPath: parallel/test-crypto-dh-leak\r\nassert.js:270\r\n    throw err;\r\n    ^\r\nAssertionError [ERR_ASSERTION]: before=131252224 after=150888448\r\n    at Object.<anonymous> (/home/matthias/vcs/github/node/test/parallel/test-crypto-dh-leak.js:26:1)\r\n    at Module._compile (internal/modules/cjs/loader.js:702:30)\r\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:713:10)\r\n    at Module.load (internal/modules/cjs/loader.js:612:32)\r\n    at tryModuleLoad (internal/modules/cjs/loader.js:551:12)\r\n    at Function.Module._load (internal/modules/cjs/loader.js:543:3)\r\n    at Function.Module.runMain (internal/modules/cjs/loader.js:744:10)\r\n    at startup (internal/bootstrap/node.js:241:19)\r\n    at bootstrapNodeJSCore (internal/bootstrap/node.js:565:3)\r\nCommand: out/Release/node --expose-gc --noconcurrent_recompilation /home/matthias/vcs/github/node/test/parallel/test-crypto-dh-leak.js\r\n````", "reactions": {"url": "https://api.github.com/repos/nodejs/node/issues/21383/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/nodejs/node/issues/21383/timeline", "performed_via_github_app": null, "state_reason": "completed", "score": 1.0}, {"url": "https://api.github.com/repos/nodejs/node/issues/50658", "repository_url": "https://api.github.com/repos/nodejs/node", "labels_url": "https://api.github.com/repos/nodejs/node/issues/50658/labels{/name}", "comments_url": "https://api.github.com/repos/nodejs/node/issues/50658/comments", "events_url": "https://api.github.com/repos/nodejs/node/issues/50658/events", "html_url": "https://github.com/nodejs/node/issues/50658", "id": 1987959282, "node_id": "I_kwDOAZ7xs852fdny", "number": 50658, "title": "node:test --test with glob patterns and npm can't find files", "user": {"login": "dalssoft", "id": 209287, "node_id": "MDQ6VXNlcjIwOTI4Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/209287?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dalssoft", "html_url": "https://github.com/dalssoft", "followers_url": "https://api.github.com/users/dalssoft/followers", "following_url": "https://api.github.com/users/dalssoft/following{/other_user}", "gists_url": "https://api.github.com/users/dalssoft/gists{/gist_id}", "starred_url": "https://api.github.com/users/dalssoft/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dalssoft/subscriptions", "organizations_url": "https://api.github.com/users/dalssoft/orgs", "repos_url": "https://api.github.com/users/dalssoft/repos", "events_url": "https://api.github.com/users/dalssoft/events{/privacy}", "received_events_url": "https://api.github.com/users/dalssoft/received_events", "type": "User", "user_view_type": "public", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2023-11-10T16:32:40Z", "updated_at": "2025-09-12T22:34:05Z", "closed_at": "2023-11-11T09:57:38Z", "author_association": "NONE", "type": null, "active_lock_reason": null, "sub_issues_summary": {"total": 0, "completed": 0, "percent_completed": 0}, "issue_dependencies_summary": {"blocked_by": 0, "total_blocked_by": 0, "blocking": 0, "total_blocking": 0}, "body": "### Version\n\nv20.9.0\n\n### Platform\n\nDarwin 22.5.0 Darwin Kernel Version 22.5.0: Mon Apr 24 20:53:19 PDT 2023; root:xnu-8796.121.2~5/RELEASE_ARM64_T6020 arm64\n\n### Subsystem\n\nnode:test\n\n### What steps will reproduce the bug?\n\n- create a subdirectory `src/folder1/folder2` and add a `file.test.js` on it\r\n- add `\"scripts\": { \"test\": \"node --test **/*.test.js\",` to the `package.json`\r\n- run `npm run test`\n\n### How often does it reproduce? Is there a required condition?\n\nAlways\n\n### What is the expected behavior? Why is that the expected behavior?\n\nRun the tests.\r\n\r\nRunning `node --test **/*.test.js` direct on terminal, without npm, runs just fine.\n\n### What do you see instead?\n\n```bash\r\n> npm run test                         \r\n\r\n   > project1@0.0.1 test\r\n   > node --test **/*.test.js\r\n\r\nCould not find '/Users/xyz/Projects/project1/**/*.test.js'\r\n```\n\n### Additional information\n\n_No response_", "reactions": {"url": "https://api.github.com/repos/nodejs/node/issues/50658/reactions", "total_count": 3, "+1": 3, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/nodejs/node/issues/50658/timeline", "performed_via_github_app": null, "state_reason": "not_planned", "score": 1.0}, {"url": "https://api.github.com/repos/nodejs/node/issues/17431", "repository_url": "https://api.github.com/repos/nodejs/node", "labels_url": "https://api.github.com/repos/nodejs/node/issues/17431/labels{/name}", "comments_url": "https://api.github.com/repos/nodejs/node/issues/17431/comments", "events_url": "https://api.github.com/repos/nodejs/node/issues/17431/events", "html_url": "https://github.com/nodejs/node/issues/17431", "id": 278732877, "node_id": "MDU6SXNzdWUyNzg3MzI4Nzc=", "number": 17431, "title": "Use %TypedArray%.prototype.subarray for Buffer.prototype.slice", "user": {"login": "TimothyGu", "id": 1538624, "node_id": "MDQ6VXNlcjE1Mzg2MjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1538624?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TimothyGu", "html_url": "https://github.com/TimothyGu", "followers_url": "https://api.github.com/users/TimothyGu/followers", "following_url": "https://api.github.com/users/TimothyGu/following{/other_user}", "gists_url": "https://api.github.com/users/TimothyGu/gists{/gist_id}", "starred_url": "https://api.github.com/users/TimothyGu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TimothyGu/subscriptions", "organizations_url": "https://api.github.com/users/TimothyGu/orgs", "repos_url": "https://api.github.com/users/TimothyGu/repos", "events_url": "https://api.github.com/users/TimothyGu/events{/privacy}", "received_events_url": "https://api.github.com/users/TimothyGu/received_events", "type": "User", "user_view_type": "public", "site_admin": false}, "labels": [{"id": 155267414, "node_id": "MDU6TGFiZWwxNTUyNjc0MTQ=", "url": "https://api.github.com/repos/nodejs/node/labels/buffer", "name": "buffer", "color": "f7c6c7", "default": false, "description": "Issues and PRs related to the buffer subsystem."}, {"id": 176191361, "node_id": "MDU6TGFiZWwxNzYxOTEzNjE=", "url": "https://api.github.com/repos/nodejs/node/labels/v8%20engine", "name": "v8 engine", "color": "0052cc", "default": false, "description": "Issues and PRs related to the V8 dependency."}, {"id": 326905670, "node_id": "MDU6TGFiZWwzMjY5MDU2NzA=", "url": "https://api.github.com/repos/nodejs/node/labels/performance", "name": "performance", "color": "5319e7", "default": false, "description": "Issues and PRs related to the performance of Node.js."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2017-12-03T00:54:53Z", "updated_at": "2025-09-12T22:28:01Z", "closed_at": "2025-09-12T22:28:01Z", "author_association": "MEMBER", "type": null, "active_lock_reason": null, "sub_issues_summary": {"total": 0, "completed": 0, "percent_completed": 0}, "issue_dependencies_summary": {"blocked_by": 0, "total_blocked_by": 0, "blocking": 0, "total_blocking": 0}, "body": "* **Version**: master\r\n* **Platform**: all\r\n* **Subsystem**: buffer\r\n\r\nCurrently, [our implementation](https://github.com/nodejs/node/blob/9fb390a1c66c91796626fe199176619ce4a54f62/lib/buffer.js#L992-L1014) of [`Buffer.prototype.slice()`](https://nodejs.org/api/buffer.html#buffer_buf_slice_start_end) operates identically to [`TypedArray.prototype.subarray()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/subarray) ([spec](https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.subarray)) down to the last minutia (with the assumption that `this` is indeed a `Buffer`, and `Buffer[Symbol.species]` has not been tampered with). Ideally, we should just set `Buffer.prototype.slice` to `Uint8Array.prototype.subarray` instead of reimplementing it. The only problem is performance: `subarray()` is much slower than `slice()`:\r\n\r\n<details><summary>diff</summary>\r\n\r\n```diff\r\ndiff --git a/lib/buffer.js b/lib/buffer.js\r\nindex b56c032f9e..112dc22d69 100644\r\n--- a/lib/buffer.js\r\n+++ b/lib/buffer.js\r\n@@ -989,29 +989,7 @@ Buffer.prototype.toJSON = function toJSON() {\r\n };\r\n \r\n \r\n-function adjustOffset(offset, length) {\r\n-  // Use Math.trunc() to convert offset to an integer value that can be larger\r\n-  // than an Int32. Hence, don't use offset | 0 or similar techniques.\r\n-  offset = Math.trunc(offset);\r\n-  // `x !== x`-style conditionals are a faster form of `isNaN(x)`\r\n-  if (offset === 0 || offset !== offset) {\r\n-    return 0;\r\n-  } else if (offset < 0) {\r\n-    offset += length;\r\n-    return offset > 0 ? offset : 0;\r\n-  } else {\r\n-    return offset < length ? offset : length;\r\n-  }\r\n-}\r\n-\r\n-\r\n-Buffer.prototype.slice = function slice(start, end) {\r\n-  const srcLength = this.length;\r\n-  start = adjustOffset(start, srcLength);\r\n-  end = end !== undefined ? adjustOffset(end, srcLength) : srcLength;\r\n-  const newLength = end > start ? end - start : 0;\r\n-  return new FastBuffer(this.buffer, this.byteOffset + start, newLength);\r\n-};\r\n+Buffer.prototype.slice = Uint8Array.prototype.subarray;\r\n \r\n \r\n function checkOffset(offset, ext, length) {\r\n```\r\n</details>\r\n\r\n```\r\n$ ./node-master benchmark/buffers/buffer-slice.js \r\nbuffers/buffer-slice.js n=1024 type=\"fast\": 11,632.49754936561\r\nbuffers/buffer-slice.js n=1024 type=\"slow\": 11,584.90297078093\r\n$ ./node benchmark/buffers/buffer-slice.js \r\nbuffers/buffer-slice.js n=1024 type=\"fast\": 6,675.602412489698\r\nbuffers/buffer-slice.js n=1024 type=\"slow\": 6,487.594815897296\r\n```\r\n\r\nI'd like to work with the V8 team to resolve the performance problem, and eventually use the language built-in for `Buffer.prototype.slice`.\r\n\r\n/cc @bmeurer", "reactions": {"url": "https://api.github.com/repos/nodejs/node/issues/17431/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/nodejs/node/issues/17431/timeline", "performed_via_github_app": null, "state_reason": "completed", "score": 1.0}, {"url": "https://api.github.com/repos/nodejs/node/issues/59361", "repository_url": "https://api.github.com/repos/nodejs/node", "labels_url": "https://api.github.com/repos/nodejs/node/issues/59361/labels{/name}", "comments_url": "https://api.github.com/repos/nodejs/node/issues/59361/comments", "events_url": "https://api.github.com/repos/nodejs/node/issues/59361/events", "html_url": "https://github.com/nodejs/node/issues/59361", "id": 3292425654, "node_id": "I_kwDOAZ7xs87EPm22", "number": 59361, "title": "Preview of code execution results in REPL go wrong when encountering large bigint operation", "user": {"login": "Withered-Flower-0422", "id": 142531691, "node_id": "U_kgDOCH7caw", "avatar_url": "https://avatars.githubusercontent.com/u/142531691?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Withered-Flower-0422", "html_url": "https://github.com/Withered-Flower-0422", "followers_url": "https://api.github.com/users/Withered-Flower-0422/followers", "following_url": "https://api.github.com/users/Withered-Flower-0422/following{/other_user}", "gists_url": "https://api.github.com/users/Withered-Flower-0422/gists{/gist_id}", "starred_url": "https://api.github.com/users/Withered-Flower-0422/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Withered-Flower-0422/subscriptions", "organizations_url": "https://api.github.com/users/Withered-Flower-0422/orgs", "repos_url": "https://api.github.com/users/Withered-Flower-0422/repos", "events_url": "https://api.github.com/users/Withered-Flower-0422/events{/privacy}", "received_events_url": "https://api.github.com/users/Withered-Flower-0422/received_events", "type": "User", "user_view_type": "public", "site_admin": false}, "labels": [{"id": 151728679, "node_id": "MDU6TGFiZWwxNTE3Mjg2Nzk=", "url": "https://api.github.com/repos/nodejs/node/labels/question", "name": "question", "color": "cc317c", "default": true, "description": "Issues that look for answers."}, {"id": 155435882, "node_id": "MDU6TGFiZWwxNTU0MzU4ODI=", "url": "https://api.github.com/repos/nodejs/node/labels/repl", "name": "repl", "color": "5319e7", "default": false, "description": "Issues and PRs related to the REPL subsystem."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2025-08-05T09:58:06Z", "updated_at": "2025-09-12T22:23:05Z", "closed_at": "2025-09-12T22:22:54Z", "author_association": "NONE", "type": null, "active_lock_reason": null, "sub_issues_summary": {"total": 0, "completed": 0, "percent_completed": 0}, "issue_dependencies_summary": {"blocked_by": 0, "total_blocked_by": 0, "blocking": 0, "total_blocking": 0}, "body": "### Version\n\nv24.5.0\n\n### Platform\n\n```text\nMicrosoft Windows NT 10.0.26100.0 x64\n```\n\n### Subsystem\n\n_No response_\n\n### What steps will reproduce the bug?\n\n1. Enter node repl.\n2. Calculate some super large bigint operation, such as `4n ** 4000000n`.\n3. The preview of the result goes wrong: `0x10000000000000000000000000000000000000000000000...`\n\n### How often does it reproduce? Is there a required condition?\n\nAlways.\n\n### What is the expected behavior? Why is that the expected behavior?\n\nThe preview of the result can display correctly. For `4n ** 4000000n`, display `9232341268346647528563879137021076647837054441642142807...`.\n\n### What do you see instead?\n\nThe preview of the result displays `0x10000000000000000000000000000000000000000000000...`\n\n### Additional information\n\n_No response_", "reactions": {"url": "https://api.github.com/repos/nodejs/node/issues/59361/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/nodejs/node/issues/59361/timeline", "performed_via_github_app": null, "state_reason": "completed", "score": 1.0}, {"url": "https://api.github.com/repos/nodejs/node/issues/58905", "repository_url": "https://api.github.com/repos/nodejs/node", "labels_url": "https://api.github.com/repos/nodejs/node/issues/58905/labels{/name}", "comments_url": "https://api.github.com/repos/nodejs/node/issues/58905/comments", "events_url": "https://api.github.com/repos/nodejs/node/issues/58905/events", "html_url": "https://github.com/nodejs/node/issues/58905", "id": 3188802067, "node_id": "I_kwDOAZ7xs86-EUIT", "number": 58905, "title": "```RegExp.prototype.test``` produces inconsistent results in Node.js vs Chrome", "user": {"login": "kevgeoleo", "id": 47811834, "node_id": "MDQ6VXNlcjQ3ODExODM0", "avatar_url": "https://avatars.githubusercontent.com/u/47811834?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kevgeoleo", "html_url": "https://github.com/kevgeoleo", "followers_url": "https://api.github.com/users/kevgeoleo/followers", "following_url": "https://api.github.com/users/kevgeoleo/following{/other_user}", "gists_url": "https://api.github.com/users/kevgeoleo/gists{/gist_id}", "starred_url": "https://api.github.com/users/kevgeoleo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kevgeoleo/subscriptions", "organizations_url": "https://api.github.com/users/kevgeoleo/orgs", "repos_url": "https://api.github.com/users/kevgeoleo/repos", "events_url": "https://api.github.com/users/kevgeoleo/events{/privacy}", "received_events_url": "https://api.github.com/users/kevgeoleo/received_events", "type": "User", "user_view_type": "public", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2025-06-30T14:55:48Z", "updated_at": "2025-09-12T21:47:46Z", "closed_at": "2025-09-12T21:47:46Z", "author_association": "NONE", "type": null, "active_lock_reason": null, "sub_issues_summary": {"total": 0, "completed": 0, "percent_completed": 0}, "issue_dependencies_summary": {"blocked_by": 0, "total_blocked_by": 0, "blocking": 0, "total_blocking": 0}, "body": "### Version\n\nv24.1.0\n\n### Platform\n\n```text\nMicrosoft Windows NT 10.0.26100.0 x64\n```\n\n### Subsystem\n\n_No response_\n\n### What steps will reproduce the bug?\n\nHi,\n\nThe bug can be reproduced by running the below code snippet:\n\n```javascript\nfunction testPropertyEscapes(regExp, string, expression) {\n  if (!regExp.test(string)) {\n    console.log(\"foo\");\n  }\n}\n\nfunction f() {\n  const matchSymbols = \"\u00b9\ud839\uddf1\ud839\uddf2\ud839\uddf3\ud839\uddf4\ud839\uddf5\ud839\uddf6\ud839\uddf7\ud839\uddf8\ud839\uddf9\ud839\uddfa\";\n  testPropertyEscapes(/^\\p{General_Category=Number}+$/u, matchSymbols);\n}\nf();\n```\n\n### How often does it reproduce? Is there a required condition?\n\nCan be observed when the above code snippet is run\n\n### What is the expected behavior? Why is that the expected behavior?\n\nI tried running the same code snippet in Chrome browser console and it produced the output \"foo\"\n\n![Image](https://github.com/user-attachments/assets/de96ef03-a45a-44c5-9dec-09b7044311c0)\n\n### What do you see instead?\n\nNo output\n\n### Additional information\n\n_No response_", "reactions": {"url": "https://api.github.com/repos/nodejs/node/issues/58905/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/nodejs/node/issues/58905/timeline", "performed_via_github_app": null, "state_reason": "completed", "score": 1.0}, {"url": "https://api.github.com/repos/nodejs/node/issues/58572", "repository_url": "https://api.github.com/repos/nodejs/node", "labels_url": "https://api.github.com/repos/nodejs/node/issues/58572/labels{/name}", "comments_url": "https://api.github.com/repos/nodejs/node/issues/58572/comments", "events_url": "https://api.github.com/repos/nodejs/node/issues/58572/events", "html_url": "https://github.com/nodejs/node/issues/58572", "id": 3117544466, "node_id": "I_kwDOAZ7xs8650fQS", "number": 58572, "title": "[Docs] Wrong definition of assert.ifError(value)", "user": {"login": "pr4j3sh", "id": 75523737, "node_id": "MDQ6VXNlcjc1NTIzNzM3", "avatar_url": "https://avatars.githubusercontent.com/u/75523737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pr4j3sh", "html_url": "https://github.com/pr4j3sh", "followers_url": "https://api.github.com/users/pr4j3sh/followers", "following_url": "https://api.github.com/users/pr4j3sh/following{/other_user}", "gists_url": "https://api.github.com/users/pr4j3sh/gists{/gist_id}", "starred_url": "https://api.github.com/users/pr4j3sh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pr4j3sh/subscriptions", "organizations_url": "https://api.github.com/users/pr4j3sh/orgs", "repos_url": "https://api.github.com/users/pr4j3sh/repos", "events_url": "https://api.github.com/users/pr4j3sh/events{/privacy}", "received_events_url": "https://api.github.com/users/pr4j3sh/received_events", "type": "User", "user_view_type": "public", "site_admin": false}, "labels": [{"id": 155267517, "node_id": "MDU6TGFiZWwxNTUyNjc1MTc=", "url": "https://api.github.com/repos/nodejs/node/labels/doc", "name": "doc", "color": "006b75", "default": false, "description": "Issues and PRs related to the documentations."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2025-06-04T11:45:28Z", "updated_at": "2025-09-12T21:45:59Z", "closed_at": "2025-09-12T21:45:52Z", "author_association": "CONTRIBUTOR", "type": null, "active_lock_reason": null, "sub_issues_summary": {"total": 0, "completed": 0, "percent_completed": 0}, "issue_dependencies_summary": {"blocked_by": 0, "total_blocked_by": 0, "blocking": 0, "total_blocking": 0}, "body": "The definition provided for `assert.ifError(value)` [here](https://nodejs.org/docs/latest/api/assert.html#assertiferrorvalue) contains `value`, instead of `AssertionError`.\n\n**Actual Definition**\n```\nThrows value if value is not undefined or null. This is useful when testing the error argument in callbacks. The stack trace contains all frames from the error passed to ifError() including the potential new frames for ifError() itself.\n```\n> The second word, should be `AssertionError`.\n\n**Changes**\nChanging [this](https://github.com/nodejs/node/blob/919ef7cae89ea9821db041cde892697cc8030b7c/lib/assert.js#L685) line in `lib/assert.js` would fix this issue.", "reactions": {"url": "https://api.github.com/repos/nodejs/node/issues/58572/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/nodejs/node/issues/58572/timeline", "performed_via_github_app": null, "state_reason": "completed", "score": 1.0}, {"url": "https://api.github.com/repos/nodejs/node/issues/57655", "repository_url": "https://api.github.com/repos/nodejs/node", "labels_url": "https://api.github.com/repos/nodejs/node/issues/57655/labels{/name}", "comments_url": "https://api.github.com/repos/nodejs/node/issues/57655/comments", "events_url": "https://api.github.com/repos/nodejs/node/issues/57655/events", "html_url": "https://github.com/nodejs/node/issues/57655", "id": 2954886068, "node_id": "I_kwDOAZ7xs86wH_u0", "number": 57655, "title": "error message  disappeared between v21 and v22", "user": {"login": "allan-bonadio", "id": 1013152, "node_id": "MDQ6VXNlcjEwMTMxNTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1013152?v=4", "gravatar_id": "", "url": "https://api.github.com/users/allan-bonadio", "html_url": "https://github.com/allan-bonadio", "followers_url": "https://api.github.com/users/allan-bonadio/followers", "following_url": "https://api.github.com/users/allan-bonadio/following{/other_user}", "gists_url": "https://api.github.com/users/allan-bonadio/gists{/gist_id}", "starred_url": "https://api.github.com/users/allan-bonadio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/allan-bonadio/subscriptions", "organizations_url": "https://api.github.com/users/allan-bonadio/orgs", "repos_url": "https://api.github.com/users/allan-bonadio/repos", "events_url": "https://api.github.com/users/allan-bonadio/events{/privacy}", "received_events_url": "https://api.github.com/users/allan-bonadio/received_events", "type": "User", "user_view_type": "public", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2025-03-28T02:59:43Z", "updated_at": "2025-09-12T21:41:04Z", "closed_at": "2025-09-12T21:41:04Z", "author_association": "NONE", "type": null, "active_lock_reason": null, "sub_issues_summary": {"total": 0, "completed": 0, "percent_completed": 0}, "issue_dependencies_summary": {"blocked_by": 0, "total_blocked_by": 0, "blocking": 0, "total_blocking": 0}, "body": "================================ Problem 1: missing error message\nI had a file named 'ff':\n\n```\n#!/usr/bin/env node\nimport fs from 'node:fs';\nconsole.log(`starting ff cmd`)\n```\n\nI ran it with node v22.9.0, and there was no response.  No errror message, no starting message.  Debugger breakpoints I'd set didn't break, because the program never started.  (this took me like an hour to figure out.)  Now I  switch it over to v21.7.3 and I got the message \n\n```\n(node:62342) Warning: To load an ES module, set \"type\": \"module\" in the package.json or use the .mjs extension.\n(Use `node --trace-warnings ...` to show where the warning was created)\n/opt/GLMR5/gscripts/ff:4\nimport fs from 'node:fs';\n^^^^^^\n\nSyntaxError: Cannot use import statement outside a module\n    at internalCompileFunction (node:internal/vm:128:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1279:20)\n    at Module._compile (node:internal/modules/cjs/loader:1331:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1426:10)\n    at Module.load (node:internal/modules/cjs/loader:1205:32)\n    at Module._load (node:internal/modules/cjs/loader:1021:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:142:12)\n    at node:internal/main/run_main_module:28:49\n\nNode.js v21.7.3\n```\nThe message is also missing with v23.10.0.  So, the first problem is, the error message went away, leaving no clue as to what the problem was.  I'm sure you guys can fix it!\n\n================================ Problem 2: no way to make a command line command that's esm\nThen I tried to fix it with a command line option:\n```\nnode --experimental-default-type=module  ff\n```\nIn v23, a message says to not use `--experimental-default-type=module`\nI also tried `node --import=fs ff` because somewhere it said that an --import would implicitly set it to ESM module.  Didn't work.\nand `node --input-type=module ff` didn't work.\n\nI know I can set the suffix to .mjs and it'll work, but that's not a way to make a tidy command for end users.  It makes the command look like a hack.  You can make shell scripts and php executables without suffixes with the #! convension, even JavaScript if it's written in cjs, but not JS modules.  This is NOT in the middle of a node package, this is just a small program that should be runable anywhere. \"ff.mjs\" is six characters long, whereas \"ff\" is two.  \n\nI can't find any other way to make a command-line command that's an ESM module.  There should be such a way.Thanks for reading this far!\n", "reactions": {"url": "https://api.github.com/repos/nodejs/node/issues/57655/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/nodejs/node/issues/57655/timeline", "performed_via_github_app": null, "state_reason": "completed", "score": 1.0}, {"url": "https://api.github.com/repos/nodejs/node/issues/57780", "repository_url": "https://api.github.com/repos/nodejs/node", "labels_url": "https://api.github.com/repos/nodejs/node/issues/57780/labels{/name}", "comments_url": "https://api.github.com/repos/nodejs/node/issues/57780/comments", "events_url": "https://api.github.com/repos/nodejs/node/issues/57780/events", "html_url": "https://github.com/nodejs/node/issues/57780", "id": 2975497357, "node_id": "I_kwDOAZ7xs86xWnyN", "number": 57780, "title": "UTF8 characters show incorrectly after win cmd chcp 65001", "user": {"login": "YourLights", "id": 118877345, "node_id": "U_kgDOBxXsoQ", "avatar_url": "https://avatars.githubusercontent.com/u/118877345?v=4", "gravatar_id": "", "url": "https://api.github.com/users/YourLights", "html_url": "https://github.com/YourLights", "followers_url": "https://api.github.com/users/YourLights/followers", "following_url": "https://api.github.com/users/YourLights/following{/other_user}", "gists_url": "https://api.github.com/users/YourLights/gists{/gist_id}", "starred_url": "https://api.github.com/users/YourLights/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/YourLights/subscriptions", "organizations_url": "https://api.github.com/users/YourLights/orgs", "repos_url": "https://api.github.com/users/YourLights/repos", "events_url": "https://api.github.com/users/YourLights/events{/privacy}", "received_events_url": "https://api.github.com/users/YourLights/received_events", "type": "User", "user_view_type": "public", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2025-04-07T03:03:37Z", "updated_at": "2025-09-12T21:39:44Z", "closed_at": "2025-09-12T21:39:44Z", "author_association": "NONE", "type": null, "active_lock_reason": null, "sub_issues_summary": {"total": 0, "completed": 0, "percent_completed": 0}, "issue_dependencies_summary": {"blocked_by": 0, "total_blocked_by": 0, "blocking": 0, "total_blocking": 0}, "body": "### Version\n\nv20.18.3\n\n### Platform\n\n```text\nMicrosoft Windows NT 10.0.19045.0 x64\n```\n\n### Subsystem\n\n_No response_\n\n### What steps will reproduce the bug?\n\n// in test2.js\n\nconst child_process = require('node:child_process')\nconst iconv = require('iconv-lite')\n\nconst buffer=child_process.execSync('chcp')\nchild_process.execSync('chcp 65001')\nconsole.log(iconv.decode(buffer,'gbk'))\nconsole.log(process.version)\nconsole.log(process.arch)\n\n\nasync function amain() {\n  let cp=child_process.spawn('cmd',[],{stdio:['pipe','inherit','inherit']})\n  let cmd='cd /d c:/\\r\\nchcp\\r\\necho utf8ChineseTest\u4e2d\u6587\u6d4b\u8bd5\\r\\n'\n  cp.stdin.write((new TextEncoder('utf8')).encode(cmd))\n\n  cp.stdin.write(iconv.encode('echo gbkChineseTest\u4e2d\u6587\u6d4b\u8bd5\\r\\n','gbk'))\n  \n}\n\namain()\n\n\n// the output-------------------------------------------\n\n// \u6d3b\u52a8\u4ee3\u7801\u9875: 936\n\n// v20.18.3\n// ia32    \n// Microsoft Windows [Version 10.0.19045.5608]    \n// (c) Microsoft Corporation. All rights reserved.\n\n// C:\\zzydata\\school\\kjxy>cd /d c:/\n\n// c:\\>chcp\n// Active code page: 65001\n\n// c:\\>echo utf8ChineseTest\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\n// utf8ChineseTest\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\n\n// c:\\>echo gbkChineseTest\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\n// gbkChineseTest\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\n\n// c:\\>\n\n\n### How often does it reproduce? Is there a required condition?\n\nAlways appear in run \"node test2.js\"\n\n### What is the expected behavior? Why is that the expected behavior?\n\nBoth gbk and utf8 encoder not work. Could be the behavior of buffer passing to cmd after chcp.\n\n### What do you see instead?\n\n\ufffd character.\n\n### Additional information\n\nI'm using 32bit nodejs in x64 win10.", "reactions": {"url": "https://api.github.com/repos/nodejs/node/issues/57780/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/nodejs/node/issues/57780/timeline", "performed_via_github_app": null, "state_reason": "completed", "score": 1.0}, {"url": "https://api.github.com/repos/nodejs/node/issues/56516", "repository_url": "https://api.github.com/repos/nodejs/node", "labels_url": "https://api.github.com/repos/nodejs/node/issues/56516/labels{/name}", "comments_url": "https://api.github.com/repos/nodejs/node/issues/56516/comments", "events_url": "https://api.github.com/repos/nodejs/node/issues/56516/events", "html_url": "https://github.com/nodejs/node/issues/56516", "id": 2774163651, "node_id": "I_kwDOAZ7xs86lWmDD", "number": 56516, "title": "gcc 14.2.0 breaks the build of Node-20.9.0", "user": {"login": "ddwolf", "id": 251396, "node_id": "MDQ6VXNlcjI1MTM5Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/251396?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ddwolf", "html_url": "https://github.com/ddwolf", "followers_url": "https://api.github.com/users/ddwolf/followers", "following_url": "https://api.github.com/users/ddwolf/following{/other_user}", "gists_url": "https://api.github.com/users/ddwolf/gists{/gist_id}", "starred_url": "https://api.github.com/users/ddwolf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ddwolf/subscriptions", "organizations_url": "https://api.github.com/users/ddwolf/orgs", "repos_url": "https://api.github.com/users/ddwolf/repos", "events_url": "https://api.github.com/users/ddwolf/events{/privacy}", "received_events_url": "https://api.github.com/users/ddwolf/received_events", "type": "User", "user_view_type": "public", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2025-01-08T03:18:20Z", "updated_at": "2025-09-12T21:38:14Z", "closed_at": "2025-09-12T21:38:13Z", "author_association": "NONE", "type": null, "active_lock_reason": null, "sub_issues_summary": {"total": 0, "completed": 0, "percent_completed": 0}, "issue_dependencies_summary": {"blocked_by": 0, "total_blocked_by": 0, "blocking": 0, "total_blocking": 0}, "body": "### Version\n\nNode.js v20.9.0\n\n### Platform\n\n```text\n$ uname -a\nLinux kp920 6.11.0-13-generic #14-Ubuntu SMP PREEMPT_DYNAMIC Sun Dec  1 00:22:04 UTC 2024 aarch64 aarch64 aarch64 GNU/Linux\n```\n\n### Subsystem\n\n_No response_\n\n### What steps will reproduce the bug?\n\n1. Ensure gcc14.2 was installed\n2. build [node-20.9.0](https://nodejs.org/dist/v20.9.0/node-v20.9.0.tar.xz) using standard method:\n```bash\n./configure --prefix=/usr/local/node-v20.9.0\nmake -j 64\n```\n\n\n### How often does it reproduce? Is there a required condition?\n\nIt fails everytime. Only need GCC 14.2.0\n\n### What is the expected behavior? Why is that the expected behavior?\n\nThe build process should not fail.\n\n### What do you see instead?\n\n```bash\nIn file included from ../deps/v8/src/heap/cppgc/process-heap-statistics.h:9,\n                 from ../deps/v8/src/heap/cppgc/process-heap-statistics.cc:5:\n../deps/v8/src/heap/cppgc/stats-collector.h: In member function \u2018void cppgc::internal::StatsCollector::ForAllAllocationObservers(Callback)\u2019:\n../deps/v8/src/heap/cppgc/stats-collector.h:401:48: error: cannot convert \u2018std::vector<cppgc::internal::StatsCollector::AllocationObserver*>::iterator\u2019 to \u2018const char*\u2019\n  401 |         std::remove(allocation_observers_.begin(), allocation_observers_.end(),\n      |                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~\n      |                                                |\n      |                                                std::vector<cppgc::internal::StatsCollector::AllocationObserver*>::iterator\n```\n\n### Additional information\n\n### Solution\n  using method suggested from this [question](https://stackoverflow.com/questions/79336225/building-nodejs-from-source-failed-cannot-convert-stdvector-to-const-cha)\n   - Either include `<algorithm>` in the header file `deps/v8/src/heap/cppgc/stats-collector.h`\n   - Or build using gcc13: `PATH=/usr/local/Python-3.11.0/bin:/usr/local/gcc-13.2.0/bin:$PATH make -j 64`", "reactions": {"url": "https://api.github.com/repos/nodejs/node/issues/56516/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/nodejs/node/issues/56516/timeline", "performed_via_github_app": null, "state_reason": "completed", "score": 1.0}, {"url": "https://api.github.com/repos/nodejs/node/issues/56837", "repository_url": "https://api.github.com/repos/nodejs/node", "labels_url": "https://api.github.com/repos/nodejs/node/issues/56837/labels{/name}", "comments_url": "https://api.github.com/repos/nodejs/node/issues/56837/comments", "events_url": "https://api.github.com/repos/nodejs/node/issues/56837/events", "html_url": "https://github.com/nodejs/node/issues/56837", "id": 2822447462, "node_id": "I_kwDOAZ7xs86oOyFm", "number": 56837, "title": "seems like nodejs console race condition bug when `sudo`", "user": {"login": "loynoir", "id": 78727408, "node_id": "MDQ6VXNlcjc4NzI3NDA4", "avatar_url": "https://avatars.githubusercontent.com/u/78727408?v=4", "gravatar_id": "", "url": "https://api.github.com/users/loynoir", "html_url": "https://github.com/loynoir", "followers_url": "https://api.github.com/users/loynoir/followers", "following_url": "https://api.github.com/users/loynoir/following{/other_user}", "gists_url": "https://api.github.com/users/loynoir/gists{/gist_id}", "starred_url": "https://api.github.com/users/loynoir/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/loynoir/subscriptions", "organizations_url": "https://api.github.com/users/loynoir/orgs", "repos_url": "https://api.github.com/users/loynoir/repos", "events_url": "https://api.github.com/users/loynoir/events{/privacy}", "received_events_url": "https://api.github.com/users/loynoir/received_events", "type": "User", "user_view_type": "public", "site_admin": false}, "labels": [{"id": 212828629, "node_id": "MDU6TGFiZWwyMTI4Mjg2Mjk=", "url": "https://api.github.com/repos/nodejs/node/labels/console", "name": "console", "color": "ff88cc", "default": false, "description": "Issues and PRs related to the console subsystem."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2025-01-31T04:58:57Z", "updated_at": "2025-09-12T21:37:36Z", "closed_at": "2025-09-12T21:37:36Z", "author_association": "NONE", "type": null, "active_lock_reason": null, "sub_issues_summary": {"total": 0, "completed": 0, "percent_completed": 0}, "issue_dependencies_summary": {"blocked_by": 0, "total_blocked_by": 0, "blocking": 0, "total_blocking": 0}, "body": "### Version\n\nv23.7.0\n\n### Platform\n\n```text\n\n```\n\n### Subsystem\n\n_No response_\n\n### What steps will reproduce the bug?\n\n# bug\n\nseems like nodejs console race condition bug when `sudo`\n\n## version\n\nnode v23.7.0\n\nyarn 4.6.0\n\n## reproduce\n\nhttps://github.com/loynoir/reproduce-yarn-berry-6667\n\n```json\n  \"scripts\": {\n    \"reproduce\": \"yarn workspaces foreach --all --exclude . run reproduce\",\n```\n\n```json\n  \"scripts\": {\n    \"reproduce\": \"sudo node ./simulate.mjs\",\n```\n\n```js\nimport { readFile } from \"node:fs/promises\";\nimport { stderr, stdout } from \"node:process\";\n\n/** @type {Array<{ type: \"stdout\" | \"stderr\"; value: string }>} */\nconst data = JSON.parse(\n    await readFile(\"./simulate.json\", \"utf8\"),\n);\n\nfor (const el of data) {\n    switch (el.type) {\n        case \"stdout\":\n            stdout.write(el.value);\n            break;\n        case \"stderr\":\n            stderr.write(el.value);\n            break;\n        default:\n            throw new Error();\n    }\n}\n```\n\n```sh\n[root@e556503f99d5 app]# yarn reproduce\n[hello]: Process started\n[hello]: #0 building with \"default\" instance using docker driver\n                                                                [hello]:\n                                                                         [hello]: #1 [internal] load build definition from Dockerfile\n                                                                                                                                     [hello]: #1 transferring dockerfile:\n                                                                                                                                                                         [hello]: #1 transferring dockerfile: 163B done\n                                      [hello]: #1 DONE 0.4s\n                                                           [hello]:\n                                                                    [hello]: #2 [internal] load metadata for public.ecr.aws/docker/library/hello-world:latest@sha256:d715f14f9eca81473d9112df50457893aa4d099adeb4729f679006bf5ea12407\n                                                    [hello]: #2 DONE 0.7s\n                                                                         [hello]:\n                                                                                  [hello]: #3 [internal] load .dockerignore\n                                                                                                                           [hello]: #3 transferring context:\n                                                                                                                                                            [hello]: #3 transferring context: 2B done\n                    [hello]: #3 DONE 0.4s\n                                         [hello]:\n                                                  [hello]: #4 [1/1] FROM public.ecr.aws/docker/library/hello-world:latest@sha256:d715f14f9eca81473d9112df50457893aa4d099adeb4729f679006bf5ea12407\n                [hello]: #4 CACHED\n                                  [hello]:\n                                           [hello]: #5 exporting to image\n                                                                         [hello]: #5 exporting layers done\n                                                                                                          [hello]: #5 writing image sha256:74cc54e27dc41bb10dc4b2226072d469509f2f22f1a3ce74f4a59661a1d44602 0.0s done\n                                    [hello]: #5 DONE 0.2s\n                                                         [hello]: Process exited (exit code 0), completed in 0s 160ms\nDone in 0s 165ms\n[root@e556503f99d5 app]#\n```\n\n## related\n\nhttps://github.com/yarnpkg/berry/issues/6667\n\n\n### How often does it reproduce? Is there a required condition?\n\n`sudo`\n\n### What is the expected behavior? Why is that the expected behavior?\n\nconsole OK\n\n### What do you see instead?\n\nconsole mess up\n\n### Additional information\n\n_No response_", "reactions": {"url": "https://api.github.com/repos/nodejs/node/issues/56837/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/nodejs/node/issues/56837/timeline", "performed_via_github_app": null, "state_reason": "not_planned", "score": 1.0}, {"url": "https://api.github.com/repos/nodejs/node/issues/57066", "repository_url": "https://api.github.com/repos/nodejs/node", "labels_url": "https://api.github.com/repos/nodejs/node/issues/57066/labels{/name}", "comments_url": "https://api.github.com/repos/nodejs/node/issues/57066/comments", "events_url": "https://api.github.com/repos/nodejs/node/issues/57066/events", "html_url": "https://github.com/nodejs/node/issues/57066", "id": 2855328870, "node_id": "I_kwDOAZ7xs86qMNxm", "number": 57066, "title": "remove node: prefixed modules from builtinModules", "user": {"login": "huseeiin", "id": 122984423, "node_id": "U_kgDOB1SX5w", "avatar_url": "https://avatars.githubusercontent.com/u/122984423?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huseeiin", "html_url": "https://github.com/huseeiin", "followers_url": "https://api.github.com/users/huseeiin/followers", "following_url": "https://api.github.com/users/huseeiin/following{/other_user}", "gists_url": "https://api.github.com/users/huseeiin/gists{/gist_id}", "starred_url": "https://api.github.com/users/huseeiin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huseeiin/subscriptions", "organizations_url": "https://api.github.com/users/huseeiin/orgs", "repos_url": "https://api.github.com/users/huseeiin/repos", "events_url": "https://api.github.com/users/huseeiin/events{/privacy}", "received_events_url": "https://api.github.com/users/huseeiin/received_events", "type": "User", "user_view_type": "public", "site_admin": false}, "labels": [{"id": 155435814, "node_id": "MDU6TGFiZWwxNTU0MzU4MTQ=", "url": "https://api.github.com/repos/nodejs/node/labels/module", "name": "module", "color": "fbca04", "default": false, "description": "Issues and PRs related to the module subsystem."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2025-02-15T08:22:55Z", "updated_at": "2025-09-12T21:34:41Z", "closed_at": "2025-09-12T21:34:29Z", "author_association": "NONE", "type": null, "active_lock_reason": null, "sub_issues_summary": {"total": 0, "completed": 0, "percent_completed": 0}, "issue_dependencies_summary": {"blocked_by": 0, "total_blocked_by": 0, "blocking": 0, "total_blocking": 0}, "body": "### Version\n\n23.6.0\n\n### Platform\n\n```text\n\n```\n\n### Subsystem\n\n_No response_\n\n### What steps will reproduce the bug?\n\n```ts\nimport { builtinModules } from \"node:module\";\nconsole.log(builtinModules.filter((r) => r.startsWith(\"node:\")).length);\n```\n\n\n\n### How often does it reproduce? Is there a required condition?\n\nevery time\n\n### What is the expected behavior? Why is that the expected behavior?\n\n0\n\n### What do you see instead?\n\n4\n\n### Additional information\n\nbuiltinModules docs say `Note: the list doesn't contain prefix-only modules like node:test.`", "reactions": {"url": "https://api.github.com/repos/nodejs/node/issues/57066/reactions", "total_count": 1, "+1": 0, "-1": 1, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/nodejs/node/issues/57066/timeline", "performed_via_github_app": null, "state_reason": "not_planned", "score": 1.0}, {"url": "https://api.github.com/repos/nodejs/node/issues/56634", "repository_url": "https://api.github.com/repos/nodejs/node", "labels_url": "https://api.github.com/repos/nodejs/node/issues/56634/labels{/name}", "comments_url": "https://api.github.com/repos/nodejs/node/issues/56634/comments", "events_url": "https://api.github.com/repos/nodejs/node/issues/56634/events", "html_url": "https://github.com/nodejs/node/issues/56634", "id": 2794011602, "node_id": "I_kwDOAZ7xs86miTvS", "number": 56634, "title": "console.context() returns inert object", "user": {"login": "rotu", "id": 119948, "node_id": "MDQ6VXNlcjExOTk0OA==", "avatar_url": "https://avatars.githubusercontent.com/u/119948?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rotu", "html_url": "https://github.com/rotu", "followers_url": "https://api.github.com/users/rotu/followers", "following_url": "https://api.github.com/users/rotu/following{/other_user}", "gists_url": "https://api.github.com/users/rotu/gists{/gist_id}", "starred_url": "https://api.github.com/users/rotu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rotu/subscriptions", "organizations_url": "https://api.github.com/users/rotu/orgs", "repos_url": "https://api.github.com/users/rotu/repos", "events_url": "https://api.github.com/users/rotu/events{/privacy}", "received_events_url": "https://api.github.com/users/rotu/received_events", "type": "User", "user_view_type": "public", "site_admin": false}, "labels": [{"id": 212828629, "node_id": "MDU6TGFiZWwyMTI4Mjg2Mjk=", "url": "https://api.github.com/repos/nodejs/node/labels/console", "name": "console", "color": "ff88cc", "default": false, "description": "Issues and PRs related to the console subsystem."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2025-01-16T23:30:53Z", "updated_at": "2025-09-12T21:32:36Z", "closed_at": "2025-09-12T21:32:36Z", "author_association": "NONE", "type": null, "active_lock_reason": null, "sub_issues_summary": {"total": 0, "completed": 0, "percent_completed": 0}, "issue_dependencies_summary": {"blocked_by": 0, "total_blocked_by": 0, "blocking": 0, "total_blocking": 0}, "body": "### Version\n\nv22.13.0\n\n### Platform\n\n```text\n\n```\n\n### Subsystem\n\n_No response_\n\n### What steps will reproduce the bug?\n\n```\nlet anon = console.context();\nanon.log(\"I should be logged to console\");\n\nlet named = console.context('name');\nnamed.log(\"I should be logged to console too\");\n```\n\n### How often does it reproduce? Is there a required condition?\n\nEvery time you try to log anything via a context returned from `console.context`.\n\n### What is the expected behavior? Why is that the expected behavior?\n\nThe example should log the provided strings to console. This is the behavior in Chrome.\n\nOtherwise, if Node does not intend to support these features, `context()` should not be exposed or should throw a runtime warning/error.\n\n### What do you see instead?\n\nThe above reproduction code does not log *anything* to the console, in the repl nor interactively.\n\n### Additional information\n\nThis (not well-documented) feature allows for multiple loggers to not conflict. E.g. calling `console.group` in one context does not affect the nesting level of another context. E.g. `console.time` in one context does not upset timers in another context.\n\nIt seems like the `console.Console` constructor is meant to work similarly.", "reactions": {"url": "https://api.github.com/repos/nodejs/node/issues/56634/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/nodejs/node/issues/56634/timeline", "performed_via_github_app": null, "state_reason": "completed", "score": 1.0}, {"url": "https://api.github.com/repos/nodejs/node/issues/57202", "repository_url": "https://api.github.com/repos/nodejs/node", "labels_url": "https://api.github.com/repos/nodejs/node/issues/57202/labels{/name}", "comments_url": "https://api.github.com/repos/nodejs/node/issues/57202/comments", "events_url": "https://api.github.com/repos/nodejs/node/issues/57202/events", "html_url": "https://github.com/nodejs/node/issues/57202", "id": 2876819851, "node_id": "I_kwDOAZ7xs86reMmL", "number": 57202, "title": "Enabled by default Float16Array!", "user": {"login": "DevSDK", "id": 18409763, "node_id": "MDQ6VXNlcjE4NDA5NzYz", "avatar_url": "https://avatars.githubusercontent.com/u/18409763?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DevSDK", "html_url": "https://github.com/DevSDK", "followers_url": "https://api.github.com/users/DevSDK/followers", "following_url": "https://api.github.com/users/DevSDK/following{/other_user}", "gists_url": "https://api.github.com/users/DevSDK/gists{/gist_id}", "starred_url": "https://api.github.com/users/DevSDK/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DevSDK/subscriptions", "organizations_url": "https://api.github.com/users/DevSDK/orgs", "repos_url": "https://api.github.com/users/DevSDK/repos", "events_url": "https://api.github.com/users/DevSDK/events{/privacy}", "received_events_url": "https://api.github.com/users/DevSDK/received_events", "type": "User", "user_view_type": "public", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2025-02-25T03:46:12Z", "updated_at": "2025-09-12T21:24:01Z", "closed_at": "2025-09-12T21:24:01Z", "author_association": "NONE", "type": null, "active_lock_reason": null, "sub_issues_summary": {"total": 0, "completed": 0, "percent_completed": 0}, "issue_dependencies_summary": {"blocked_by": 0, "total_blocked_by": 0, "blocking": 0, "total_blocking": 0}, "body": "Hi folks! chromium/v8 contributor here!\n\nLast Saturday, I just [flipped the feature flag](https://chromium-review.googlesource.com/c/chromium/src/+/6275531) for Float16Array to enable it by default! \n\nIt will be released on [Chrome M135](https://chromestatus.com/feature/5164400693215232)! (Maybe V8 [13.5?](https://v8.dev/docs/version-numbers))\nSo, I leave this issue to share about the status! :) \n\nCheers! \ud83c\udf89", "reactions": {"url": "https://api.github.com/repos/nodejs/node/issues/57202/reactions", "total_count": 9, "+1": 0, "-1": 0, "laugh": 0, "hooray": 9, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/nodejs/node/issues/57202/timeline", "performed_via_github_app": null, "state_reason": "completed", "score": 1.0}, {"url": "https://api.github.com/repos/nodejs/node/issues/56368", "repository_url": "https://api.github.com/repos/nodejs/node", "labels_url": "https://api.github.com/repos/nodejs/node/issues/56368/labels{/name}", "comments_url": "https://api.github.com/repos/nodejs/node/issues/56368/comments", "events_url": "https://api.github.com/repos/nodejs/node/issues/56368/events", "html_url": "https://github.com/nodejs/node/issues/56368", "id": 2759703429, "node_id": "I_kwDOAZ7xs86kfbuF", "number": 56368, "title": "Bug in Promises and performance", "user": {"login": "gridagribnoy", "id": 152844397, "node_id": "U_kgDOCRw4bQ", "avatar_url": "https://avatars.githubusercontent.com/u/152844397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gridagribnoy", "html_url": "https://github.com/gridagribnoy", "followers_url": "https://api.github.com/users/gridagribnoy/followers", "following_url": "https://api.github.com/users/gridagribnoy/following{/other_user}", "gists_url": "https://api.github.com/users/gridagribnoy/gists{/gist_id}", "starred_url": "https://api.github.com/users/gridagribnoy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gridagribnoy/subscriptions", "organizations_url": "https://api.github.com/users/gridagribnoy/orgs", "repos_url": "https://api.github.com/users/gridagribnoy/repos", "events_url": "https://api.github.com/users/gridagribnoy/events{/privacy}", "received_events_url": "https://api.github.com/users/gridagribnoy/received_events", "type": "User", "user_view_type": "public", "site_admin": false}, "labels": [{"id": 176191361, "node_id": "MDU6TGFiZWwxNzYxOTEzNjE=", "url": "https://api.github.com/repos/nodejs/node/labels/v8%20engine", "name": "v8 engine", "color": "0052cc", "default": false, "description": "Issues and PRs related to the V8 dependency."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2024-12-26T12:19:48Z", "updated_at": "2025-09-12T21:22:23Z", "closed_at": "2025-09-12T21:22:16Z", "author_association": "NONE", "type": null, "active_lock_reason": null, "sub_issues_summary": {"total": 0, "completed": 0, "percent_completed": 0}, "issue_dependencies_summary": {"blocked_by": 0, "total_blocked_by": 0, "blocking": 0, "total_blocking": 0}, "body": "### Version\n\nv22.11.0\n\n### Platform\n\n```text\nMicrosoft Windows NT 6.3.9600.0\nx64\n```\n\n### Subsystem\n\n_No response_\n\n### What steps will reproduce the bug?\n\n```js\nconst runTask = async fn => {\n  await fn();\n};\nconst iters = 3e6;\n\nasync function runWithAwait() {\n  let counter = 0;\n  const start = Date.now();\n  for (let index = 0; index < iters; index++) {\n    await \"any value :D or task\";\n    runTask(async () => counter++);\n  }\n  return { counter, time: (Date.now() - start) / 1000 };\n}\n\nasync function runWithAwaitWithThen() {\n  let counter = 0;\n  const start = Date.now();\n  for (let index = 0; index < iters; index++) {\n    await \"any value :D\";\n    runTask(async () => {}).then(() => counter++);\n  }\n  return { counter, time: (Date.now() - start) / 1000 };\n}\n\nasync function run() {\n  let counter = 0;\n  const start = Date.now();\n  for (let index = 0; index < iters; index++) {\n    runTask(async () => counter++);\n  }\n  return { counter, time: (Date.now() - start) / 1000 };\n}\n\nasync function runWithThen() {\n  let counter = 0;\n  const start = Date.now();\n  for (let index = 0; index < iters; index++) {\n    runTask(async () => {}).then(() => counter++);\n  }\n  return { counter, time: (Date.now() - start) / 1000 };\n}\n\nawait runWithAwait().then(res => console.log(\"runWithAwait\", res));\n\nawait runWithAwaitWithThen().then(res =>\n  console.log(\"runWithAwaitWithThen\", res)\n);\n\nawait run().then(res => console.log(\"run\", res));\n\nawait runWithThen().then(res => console.log(\"runWithThen\", res));\n\n```\n\nresult:\n\n```\nrunWithAwait { counter: 3000000, time: 1.325 }\nrunWithAwaitWithThen { counter: 2999998, time: 1.614 }\nrun { counter: 3000000, time: 8.356 }\nrunWithThen { counter: 0, time: 10.951 }\n```\n\n### How often does it reproduce? Is there a required condition?\n\nAlways if not awaited promise\n\n### What is the expected behavior? Why is that the expected behavior?\n\nFor example, you need to run asynchronous tasks with side effects that you don't need to wait for. Or the results go to the eventmeter, this can be useful for queues.\n\n```js\nimport EventEmitter from \"node:events\";\n\nconst events = new EventEmitter();\n\nconst add = async task => {\n  try {\n    events.emit(\"success\", await task());\n  } catch (err) {\n    events.emit(\"err\", { err, task });\n  }\n};\n\nfunction addTasks() {\n  for (let index = 0; index < 3e6; index++) {\n    //if you don't await it, you get bad performance\n    add(async () => { \n      const isEven = index % 2 == 0;\n      if (isEven) throw \"even\";\n      return index;\n    });\n  }\n}\n\naddTasks();\n\n\n/* for performance hack */\n\n// async function addTasksHack() {\n//   for (let index = 0; index < 3e6; index++) {\n//     await \"\";\n//     add(async () => {\n//       return index;\n//     });\n//   }\n// }\n// addTasksHack();\n\n```\n\n### What do you see instead?\n\nNot needed awaited result, with good performance\n\n### Additional information\n\n_No response_", "reactions": {"url": "https://api.github.com/repos/nodejs/node/issues/56368/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/nodejs/node/issues/56368/timeline", "performed_via_github_app": null, "state_reason": "completed", "score": 1.0}, {"url": "https://api.github.com/repos/nodejs/node/issues/56373", "repository_url": "https://api.github.com/repos/nodejs/node", "labels_url": "https://api.github.com/repos/nodejs/node/issues/56373/labels{/name}", "comments_url": "https://api.github.com/repos/nodejs/node/issues/56373/comments", "events_url": "https://api.github.com/repos/nodejs/node/issues/56373/events", "html_url": "https://github.com/nodejs/node/issues/56373", "id": 2760257472, "node_id": "I_kwDOAZ7xs86khi_A", "number": 56373, "title": "Inconsistent handling of -NaN in DataView.setFloat32", "user": {"login": "dy", "id": 300067, "node_id": "MDQ6VXNlcjMwMDA2Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/300067?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dy", "html_url": "https://github.com/dy", "followers_url": "https://api.github.com/users/dy/followers", "following_url": "https://api.github.com/users/dy/following{/other_user}", "gists_url": "https://api.github.com/users/dy/gists{/gist_id}", "starred_url": "https://api.github.com/users/dy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dy/subscriptions", "organizations_url": "https://api.github.com/users/dy/orgs", "repos_url": "https://api.github.com/users/dy/repos", "events_url": "https://api.github.com/users/dy/events{/privacy}", "received_events_url": "https://api.github.com/users/dy/received_events", "type": "User", "user_view_type": "public", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2024-12-27T00:48:49Z", "updated_at": "2025-09-12T21:20:37Z", "closed_at": "2025-09-12T21:20:37Z", "author_association": "NONE", "type": null, "active_lock_reason": null, "sub_issues_summary": {"total": 0, "completed": 0, "percent_completed": 0}, "issue_dependencies_summary": {"blocked_by": 0, "total_blocked_by": 0, "blocking": 0, "total_blocking": 0}, "body": "### Version\n\nv23.3.0\n\n### Platform\n\n```text\nDarwin Dimbook.local 24.1.0 Darwin Kernel Version 24.1.0: Thu Nov 14 18:15:21 PST 2024; root:xnu-11215.41.3~13/RELEASE_ARM64_T6041 arm64\n```\n\n### Subsystem\n\n_No response_\n\n### What steps will reproduce the bug?\n\n```js\nconst byteView = new DataView(new ArrayBuffer(4))\n\n  for (let i = 0; i < 1e5; i++) {\n    byteView.setFloat32(0,-NaN)\n    if ([\n      byteView.getUint8(3),\n      byteView.getUint8(2),\n      byteView.getUint8(1),\n      byteView.getUint8(0)\n    ]+'' !== [0, 0, 192, 127]+'') console.log('failed', i)\n  }\n```\n\nSometimes it returns `[0, 0, 192, 127]`, the other times `[0, 0, 192, 255]`\n\n### How often does it reproduce? Is there a required condition?\n\nSeems to always\n\n### What is the expected behavior? Why is that the expected behavior?\n\nShould return consistent result\n\n### What do you see instead?\n\nI see it changes sporadically\n\n### Additional information\n\nDuplicate bug in chromium: https://issues.chromium.org/u/1/issues/386172182", "reactions": {"url": "https://api.github.com/repos/nodejs/node/issues/56373/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/nodejs/node/issues/56373/timeline", "performed_via_github_app": null, "state_reason": "completed", "score": 1.0}, {"url": "https://api.github.com/repos/nodejs/node/issues/57024", "repository_url": "https://api.github.com/repos/nodejs/node", "labels_url": "https://api.github.com/repos/nodejs/node/issues/57024/labels{/name}", "comments_url": "https://api.github.com/repos/nodejs/node/issues/57024/comments", "events_url": "https://api.github.com/repos/nodejs/node/issues/57024/events", "html_url": "https://github.com/nodejs/node/issues/57024", "id": 2850546239, "node_id": "I_kwDOAZ7xs86p5-I_", "number": 57024, "title": "`console.log({ '\"\\'': 0 })` gives syntactically invalid JS", "user": {"login": "lionel-rowe", "id": 26078826, "node_id": "MDQ6VXNlcjI2MDc4ODI2", "avatar_url": "https://avatars.githubusercontent.com/u/26078826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lionel-rowe", "html_url": "https://github.com/lionel-rowe", "followers_url": "https://api.github.com/users/lionel-rowe/followers", "following_url": "https://api.github.com/users/lionel-rowe/following{/other_user}", "gists_url": "https://api.github.com/users/lionel-rowe/gists{/gist_id}", "starred_url": "https://api.github.com/users/lionel-rowe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lionel-rowe/subscriptions", "organizations_url": "https://api.github.com/users/lionel-rowe/orgs", "repos_url": "https://api.github.com/users/lionel-rowe/repos", "events_url": "https://api.github.com/users/lionel-rowe/events{/privacy}", "received_events_url": "https://api.github.com/users/lionel-rowe/received_events", "type": "User", "user_view_type": "public", "site_admin": false}, "labels": [{"id": 151728679, "node_id": "MDU6TGFiZWwxNTE3Mjg2Nzk=", "url": "https://api.github.com/repos/nodejs/node/labels/question", "name": "question", "color": "cc317c", "default": true, "description": "Issues that look for answers."}, {"id": 155267446, "node_id": "MDU6TGFiZWwxNTUyNjc0NDY=", "url": "https://api.github.com/repos/nodejs/node/labels/util", "name": "util", "color": "d4c5f9", "default": false, "description": "Issues and PRs related to the built-in util module."}, {"id": 212828629, "node_id": "MDU6TGFiZWwyMTI4Mjg2Mjk=", "url": "https://api.github.com/repos/nodejs/node/labels/console", "name": "console", "color": "ff88cc", "default": false, "description": "Issues and PRs related to the console subsystem."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2025-02-13T09:58:54Z", "updated_at": "2025-09-12T21:13:52Z", "closed_at": "2025-09-12T21:13:33Z", "author_association": "NONE", "type": null, "active_lock_reason": null, "sub_issues_summary": {"total": 0, "completed": 0, "percent_completed": 0}, "issue_dependencies_summary": {"blocked_by": 0, "total_blocked_by": 0, "blocking": 0, "total_blocking": 0}, "body": "### Version\n\n23.3.0\n\n### Platform\n\n```text\nLinux DESKTOP-3S4OV0F 5.15.167.4-microsoft-standard-WSL2 #1 SMP Tue Nov 5 00:21:55 UTC 2024 x86_64 x86_64 x86_64 GNU/Linux\n```\n\n### Subsystem\n\n_No response_\n\n### What steps will reproduce the bug?\n\n```js\nconsole.log({ '\"\\'': 0 })\n// logs { `\"'`: 0 }\n```\n\nHowever, `` { `\"'`: 0 } `` is not syntactically valid in JS:\n\n```js\nlet x\nx = { `\"'`: 0 }\n// parse error: Unexpected token ```. Expected identifier, string literal, numeric literal or [ for the computed key at 2:7\nx = { '\"\\'': 0 }\n// ok\nx = { [`\"'`]: 0 }\n// ok\n```\n\nWhile there's no hard requirement for `console.log` to always yield syntactically invalid JS (e.g. objects such as `File { name: \"\", size: 0, type: \"\" }`, truncation with `...`, etc.) I'd generally expect small JSON-compatible objects to be displayed in a way I can directly copy-paste into my code.\n\nFor comparison, Deno has [the same issue](https://github.com/denoland/deno/issues/28101), while Bun doesn't.\n\n### How often does it reproduce? Is there a required condition?\n\nAlways, given an object with a key that contains both single `'` and double `\"` quotes.\n\n### What is the expected behavior? Why is that the expected behavior?\n\nEither `{ '\"\\'': 0 }`, `{ \"\\\"'\": 0 }`, or `` { [`\"'`]: 0 } ``\n\n### What do you see instead?\n\n`` { `\"'`: 0 } ``\n\n### Additional information\n\n_No response_", "reactions": {"url": "https://api.github.com/repos/nodejs/node/issues/57024/reactions", "total_count": 1, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 1, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/nodejs/node/issues/57024/timeline", "performed_via_github_app": null, "state_reason": "completed", "score": 1.0}, {"url": "https://api.github.com/repos/nodejs/node/issues/48918", "repository_url": "https://api.github.com/repos/nodejs/node", "labels_url": "https://api.github.com/repos/nodejs/node/issues/48918/labels{/name}", "comments_url": "https://api.github.com/repos/nodejs/node/issues/48918/comments", "events_url": "https://api.github.com/repos/nodejs/node/issues/48918/events", "html_url": "https://github.com/nodejs/node/issues/48918", "id": 1820142393, "node_id": "I_kwDOAZ7xs85sfSs5", "number": 48918, "title": "`chai.should()` breaks error serialization", "user": {"login": "voxpelli", "id": 34457, "node_id": "MDQ6VXNlcjM0NDU3", "avatar_url": "https://avatars.githubusercontent.com/u/34457?v=4", "gravatar_id": "", "url": "https://api.github.com/users/voxpelli", "html_url": "https://github.com/voxpelli", "followers_url": "https://api.github.com/users/voxpelli/followers", "following_url": "https://api.github.com/users/voxpelli/following{/other_user}", "gists_url": "https://api.github.com/users/voxpelli/gists{/gist_id}", "starred_url": "https://api.github.com/users/voxpelli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/voxpelli/subscriptions", "organizations_url": "https://api.github.com/users/voxpelli/orgs", "repos_url": "https://api.github.com/users/voxpelli/repos", "events_url": "https://api.github.com/users/voxpelli/events{/privacy}", "received_events_url": "https://api.github.com/users/voxpelli/received_events", "type": "User", "user_view_type": "public", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2023-07-25T11:40:55Z", "updated_at": "2025-09-12T21:10:19Z", "closed_at": "2025-09-12T21:10:18Z", "author_association": "NONE", "type": null, "active_lock_reason": null, "sub_issues_summary": {"total": 0, "completed": 0, "percent_completed": 0}, "issue_dependencies_summary": {"blocked_by": 0, "total_blocked_by": 0, "blocking": 0, "total_blocking": 0}, "body": "### Version\n\n18.17.0\n\n### Platform\n\nMacOS\n\n### Subsystem\n\ntest\n\n### What steps will reproduce the bug?\n\nIn a test file like:\r\n\r\n```js\r\nimport { test } from \"node:test\";\r\n\r\ntest(\"failing test\", () => {\r\n  throw new Error('The failure');\r\n});\r\n```\r\n\r\nRun that with `node --test` and you'll get:\r\n\r\n```\r\n\u2716 failing test (0.59475ms)\r\n  Error: The failure\r\n      at TestContext.<anonymous>\r\n```\r\n\r\nAdd in `chai.should()`:\r\n\r\n```js\r\nimport { test } from \"node:test\";\r\nimport chai from 'chai';\r\n\r\nchai.should();\r\n\r\ntest(\"failing test\", () => {\r\n  throw new Error('The failure');\r\n});\r\n```\r\n\r\nAnd you instead get:\r\n\r\n```\r\n[Error [ERR_TEST_FAILURE]: The failure] {\r\n    [cause]: Error: The failure\r\n        at TestContext.<anonymous>\r\n```\r\n\n\n### How often does it reproduce? Is there a required condition?\n\nAlways\n\n### What is the expected behavior? Why is that the expected behavior?\n\nAll [`ERR_TEST_FAILURE`](https://nodejs.org/api/errors.html#err_test_failure) events given in the `data.details.error` of a `TestStream` [`test:fail`](https://nodejs.org/api/test.html#event-testfail) should have an `err.code` and should have that equal `'ERR_TEST_FAILURE'`, signaling that its `err.cause` contains the error thrown in the failing test: https://github.com/nodejs/node/blob/36c72c8b2fb03414e02ffd8402c05129647ce123/lib/internal/test_runner/reporter/spec.js#L59\n\n### What do you see instead?\n\nIn Node `18.16.1` I saw that, but in Node `18.17.0` adding `chai.should()` makes it so that no `err.code` at all appears in the errors in `data.details.error` in the `'test:fail'` `TestStream` event, yet the stack trace shows that its indeed a `ERR_TEST_FAILURE` in there somewhere.\r\n\r\nThis causes checks like these to fail:\r\n\r\nhttps://github.com/nodejs/node/blob/36c72c8b2fb03414e02ffd8402c05129647ce123/lib/internal/test_runner/reporter/spec.js#L59\r\n\r\nAnd eg. causes my diff of Chai errors in [`@voxpelli/node-test-pretty-reporter`](https://github.com/voxpelli/node-test-pretty-reporter) to no longer work (unless I do workarounds and check for the presence of the `'ERR_TEST_FAILURE'` string in the stack).\n\n### Additional information\n\nThis is a follow up to https://github.com/nodejs/node/issues/48900#issuecomment-1647666438 and is probably caused by the https://github.com/nodejs/node/pull/47867 that @MoLow mentioned in there and which fixed that issue.", "reactions": {"url": "https://api.github.com/repos/nodejs/node/issues/48918/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/nodejs/node/issues/48918/timeline", "performed_via_github_app": null, "state_reason": "completed", "score": 1.0}, {"url": "https://api.github.com/repos/nodejs/node/issues/44462", "repository_url": "https://api.github.com/repos/nodejs/node", "labels_url": "https://api.github.com/repos/nodejs/node/issues/44462/labels{/name}", "comments_url": "https://api.github.com/repos/nodejs/node/issues/44462/comments", "events_url": "https://api.github.com/repos/nodejs/node/issues/44462/events", "html_url": "https://github.com/nodejs/node/issues/44462", "id": 1356624522, "node_id": "I_kwDOAZ7xs85Q3HKK", "number": 44462, "title": "assert.deepStrictEqual() and the `vm` module are incompatible", "user": {"login": "Qix-", "id": 885648, "node_id": "MDQ6VXNlcjg4NTY0OA==", "avatar_url": "https://avatars.githubusercontent.com/u/885648?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Qix-", "html_url": "https://github.com/Qix-", "followers_url": "https://api.github.com/users/Qix-/followers", "following_url": "https://api.github.com/users/Qix-/following{/other_user}", "gists_url": "https://api.github.com/users/Qix-/gists{/gist_id}", "starred_url": "https://api.github.com/users/Qix-/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Qix-/subscriptions", "organizations_url": "https://api.github.com/users/Qix-/orgs", "repos_url": "https://api.github.com/users/Qix-/repos", "events_url": "https://api.github.com/users/Qix-/events{/privacy}", "received_events_url": "https://api.github.com/users/Qix-/received_events", "type": "User", "user_view_type": "public", "site_admin": false}, "labels": [{"id": 155267445, "node_id": "MDU6TGFiZWwxNTUyNjc0NDU=", "url": "https://api.github.com/repos/nodejs/node/labels/assert", "name": "assert", "color": "d4c5f9", "default": false, "description": "Issues and PRs related to the assert subsystem."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2022-08-31T01:41:09Z", "updated_at": "2025-09-12T21:05:18Z", "closed_at": "2025-09-12T21:05:17Z", "author_association": "NONE", "type": null, "active_lock_reason": null, "sub_issues_summary": {"total": 0, "completed": 0, "percent_completed": 0}, "issue_dependencies_summary": {"blocked_by": 0, "total_blocked_by": 0, "blocking": 0, "total_blocking": 0}, "body": "### Version\r\n\r\nv18.8.0\r\n\r\n### Platform\r\n\r\nLinux DESKTOP-TBGODF1 4.4.0-19041-Microsoft #1237-Microsoft Sat Sep 11 14:32:00 PST 2021 x86_64 x86_64 x86_64 GNU/Linux\r\n\r\n### Subsystem\r\n\r\n_No response_\r\n\r\n### What steps will reproduce the bug?\r\n\r\n```javascript\r\nimport vm from 'node:vm';\r\nimport assert from 'node:assert/strict';\r\nconst g = {exports: {}};\r\nconst result = vm.runInNewContext(`exports.result = {foo:'bar'};`, g);\r\nassert.deepStrictEqual(g.exports.result, {foo: 'bar'});\r\n```\r\n\r\n### How often does it reproduce? Is there a required condition?\r\n\r\n_No response_\r\n\r\n### What is the expected behavior?\r\n\r\nThese two objects are structurally identical and have the `Object` prototype. The `assert` library should accept them as deep-equal.\r\n\r\n### What do you see instead?\r\n\r\nSince the VM script's context creates its own `Object` for use in prototypes, therefore the prototype check introduced to the `assert` library in 02b66b5b866bd8398e7d815d3715ba3f94a5cf65 (#24974, ref #24917) fails since they're not equal (even though they represent the same underlying 'facility' in Javascript).\r\n\r\nThis caused some confusing output:\r\n\r\n```\r\nAssertionError [ERR_ASSERTION]: Values have same structure but are not reference-equal:\r\n\r\n{\r\n  foo: 'bar'\r\n}\r\n```\r\n\r\nFurther, of course they're not reference equal - that would defeat the entire purpose of a `deepEqual` check, would it not? \ud83d\ude43 I had to google to figure out it was referring to prototype checking. Perhaps the error message could be improved here?\r\n\r\n### Additional information\r\n\r\nIt'd be great if we could get a variant of the `node:assert` library that is 1) strict and 2) ignores prototypes for cases like this. I don't see how this could be fixed otherwise, given how v8's contexts work.", "reactions": {"url": "https://api.github.com/repos/nodejs/node/issues/44462/reactions", "total_count": 3, "+1": 3, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/nodejs/node/issues/44462/timeline", "performed_via_github_app": null, "state_reason": "completed", "score": 1.0}, {"url": "https://api.github.com/repos/nodejs/node/issues/49925", "repository_url": "https://api.github.com/repos/nodejs/node", "labels_url": "https://api.github.com/repos/nodejs/node/issues/49925/labels{/name}", "comments_url": "https://api.github.com/repos/nodejs/node/issues/49925/comments", "events_url": "https://api.github.com/repos/nodejs/node/issues/49925/events", "html_url": "https://github.com/nodejs/node/issues/49925", "id": 1917277547, "node_id": "I_kwDOAZ7xs85yR1Vr", "number": 49925, "title": "test_runner: allow to force exit after all tests finished", "user": {"login": "rluvaton", "id": 16746759, "node_id": "MDQ6VXNlcjE2NzQ2NzU5", "avatar_url": "https://avatars.githubusercontent.com/u/16746759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rluvaton", "html_url": "https://github.com/rluvaton", "followers_url": "https://api.github.com/users/rluvaton/followers", "following_url": "https://api.github.com/users/rluvaton/following{/other_user}", "gists_url": "https://api.github.com/users/rluvaton/gists{/gist_id}", "starred_url": "https://api.github.com/users/rluvaton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rluvaton/subscriptions", "organizations_url": "https://api.github.com/users/rluvaton/orgs", "repos_url": "https://api.github.com/users/rluvaton/repos", "events_url": "https://api.github.com/users/rluvaton/events{/privacy}", "received_events_url": "https://api.github.com/users/rluvaton/received_events", "type": "User", "user_view_type": "public", "site_admin": false}, "labels": [{"id": 207445406, "node_id": "MDU6TGFiZWwyMDc0NDU0MDY=", "url": "https://api.github.com/repos/nodejs/node/labels/feature%20request", "name": "feature request", "color": "0D7BDE", "default": false, "description": "Issues that request new features to be added to Node.js."}, {"id": 4103821612, "node_id": "LA_kwDOAZ7xs870m1ks", "url": "https://api.github.com/repos/nodejs/node/labels/test_runner", "name": "test_runner", "color": "EDD871", "default": false, "description": "Issues and PRs related to the test runner subsystem."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 18, "created_at": "2023-09-28T11:15:10Z", "updated_at": "2025-09-12T17:32:35Z", "closed_at": "2024-03-13T10:49:16Z", "author_association": "MEMBER", "type": null, "active_lock_reason": null, "sub_issues_summary": {"total": 0, "completed": 0, "percent_completed": 0}, "issue_dependencies_summary": {"blocked_by": 0, "total_blocked_by": 0, "blocking": 0, "total_blocking": 0}, "body": "### What is the problem this feature will solve?\n\nif you have some resource **that you don't control** blocks the process from exiting (socket/timer/etc) the tests will never finish\r\n\r\n\r\nhaving timeout in the run options marking the test as failed\n\n### What is the feature you are proposing to solve the problem?\n\nallow to specify force exit option that after all tests finished will exit\r\n\r\nsimilar solutions in other frameworks:\r\n- `mocha` has [`--exit`](https://mochajs.org/#-exit) flag\r\n- `jest` has [`--forceExit`](https://jestjs.io/docs/cli#--forceexit)\n\n### What alternatives have you considered?\n\n_No response_", "reactions": {"url": "https://api.github.com/repos/nodejs/node/issues/49925/reactions", "total_count": 7, "+1": 5, "-1": 2, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/nodejs/node/issues/49925/timeline", "performed_via_github_app": null, "state_reason": "completed", "score": 1.0}, {"url": "https://api.github.com/repos/nodejs/node/issues/56931", "repository_url": "https://api.github.com/repos/nodejs/node", "labels_url": "https://api.github.com/repos/nodejs/node/issues/56931/labels{/name}", "comments_url": "https://api.github.com/repos/nodejs/node/issues/56931/comments", "events_url": "https://api.github.com/repos/nodejs/node/issues/56931/events", "html_url": "https://github.com/nodejs/node/issues/56931", "id": 2834169796, "node_id": "I_kwDOAZ7xs86o7f_E", "number": 56931, "title": "Web Crypto API subtle.deriveKey cannot derive key when derivedKeyAlgorithm is an HkdfParams object", "user": {"login": "hMihaiDavid", "id": 24855110, "node_id": "MDQ6VXNlcjI0ODU1MTEw", "avatar_url": "https://avatars.githubusercontent.com/u/24855110?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hMihaiDavid", "html_url": "https://github.com/hMihaiDavid", "followers_url": "https://api.github.com/users/hMihaiDavid/followers", "following_url": "https://api.github.com/users/hMihaiDavid/following{/other_user}", "gists_url": "https://api.github.com/users/hMihaiDavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/hMihaiDavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hMihaiDavid/subscriptions", "organizations_url": "https://api.github.com/users/hMihaiDavid/orgs", "repos_url": "https://api.github.com/users/hMihaiDavid/repos", "events_url": "https://api.github.com/users/hMihaiDavid/events{/privacy}", "received_events_url": "https://api.github.com/users/hMihaiDavid/received_events", "type": "User", "user_view_type": "public", "site_admin": false}, "labels": [{"id": 155267357, "node_id": "MDU6TGFiZWwxNTUyNjczNTc=", "url": "https://api.github.com/repos/nodejs/node/labels/crypto", "name": "crypto", "color": "009800", "default": false, "description": "Issues and PRs related to the crypto subsystem."}, {"id": 2867346096, "node_id": "MDU6TGFiZWwyODY3MzQ2MDk2", "url": "https://api.github.com/repos/nodejs/node/labels/webcrypto", "name": "webcrypto", "color": "A097F5", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2025-02-05T23:30:26Z", "updated_at": "2025-09-12T14:57:24Z", "closed_at": "2025-09-12T14:48:24Z", "author_association": "NONE", "type": null, "active_lock_reason": null, "sub_issues_summary": {"total": 0, "completed": 0, "percent_completed": 0}, "issue_dependencies_summary": {"blocked_by": 0, "total_blocked_by": 0, "blocking": 0, "total_blocking": 0}, "body": "### Version\n\nv20.11.1\n\n### Platform\n\n```text\nLinux debian 6.1.0-22-amd64 #1 SMP PREEMPT_DYNAMIC Debian 6.1.94-1 (2024-06-21) x86_64 GNU/Linux\n```\n\n### Subsystem\n\nnode:internal/crypto/webcrypto\n\n### What steps will reproduce the bug?\n\n```\nimport {  TextEncoder  } from 'util';\nimport nodeCrypto from \"node:crypto\";\nconst subtle = nodeCrypto.webcrypto.subtle;\n\nasync function repro(password: Uint8Array, salt: Uint8Array): any {\n    const passphraseKeyObj = await subtle.importKey('raw', password, 'PBKDF2', false, ['deriveKey']);\n\n    return subtle.deriveKey({\n        name: 'PBKDF2',\n        hash: 'SHA-256',\n        salt,\n        iterations: 10,\n    }, passphraseKeyObj,\n    {\n        name: 'HKDF',\n        hash: 'SHA-256',\n        info: (new TextEncoder()).encode('arbitrary/derive/path'),\n        salt: new ArrayBuffer(32), // anything.\n        length: 32, // Same behavior if this line is removed.\n    }, false, ['deriveKey']);\n}\n```\n\n\n### How often does it reproduce? Is there a required condition?\n\nAlways.\n\n### What is the expected behavior? Why is that the expected behavior?\n\nUnless I'm misinterpreting the developer.mozilla.org docs, a `Promise<CryptoKey>` should be returned by the call to `deriveKey`, which is derived from CryptoKey `passphraseKeyObj`, which in turn is derived from a password (this first key derivation seems to work).\n\n### What do you see instead?\n\n```\nnode:internal/per_context/domexception:53\n    ErrorCaptureStackTrace(this);\n    ^\nDOMException [OperationError]: length cannot be null\n    at new DOMException (node:internal/per_context/domexception:53:5)\n    at __node_internal_ (node:internal/util:695:10)\n    at Object.pbkdf2DeriveBits (node:internal/crypto/pbkdf2:106:11)\n    at SubtleCrypto.deriveKey (node:internal/crypto/webcrypto:313:10)\n    at repro (/home/user/projects/xyz/babel_out/index.js:61:27)\n    at async sealBuffer (/home/user/projects/xyz/babel_out/index.js:45:21)\n    at async main (/home/user/projects/xyz/examples/test1.js:14:15)\n\nNode.js v20.11.1\n```\n\n### Additional information\n\nI did not try to reproduce in the browser.\nThis api originally comes from a WebAPI but it is supported now in Node.js too.\n\nSee:\nhttps://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/deriveKey\nhttps://developer.mozilla.org/en-US/docs/Web/API/HkdfParams\nhttps://developer.mozilla.org/en-US/docs/Web/API/Pbkdf2Params", "reactions": {"url": "https://api.github.com/repos/nodejs/node/issues/56931/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/nodejs/node/issues/56931/timeline", "performed_via_github_app": null, "state_reason": "not_planned", "score": 1.0}, {"url": "https://api.github.com/repos/nodejs/node/issues/58013", "repository_url": "https://api.github.com/repos/nodejs/node", "labels_url": "https://api.github.com/repos/nodejs/node/issues/58013/labels{/name}", "comments_url": "https://api.github.com/repos/nodejs/node/issues/58013/comments", "events_url": "https://api.github.com/repos/nodejs/node/issues/58013/events", "html_url": "https://github.com/nodejs/node/issues/58013", "id": 3018571652, "node_id": "I_kwDOAZ7xs86z67-E", "number": 58013, "title": "Make `util.isArray()` EOL", "user": {"login": "Renegade334", "id": 9092381, "node_id": "MDQ6VXNlcjkwOTIzODE=", "avatar_url": "https://avatars.githubusercontent.com/u/9092381?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Renegade334", "html_url": "https://github.com/Renegade334", "followers_url": "https://api.github.com/users/Renegade334/followers", "following_url": "https://api.github.com/users/Renegade334/following{/other_user}", "gists_url": "https://api.github.com/users/Renegade334/gists{/gist_id}", "starred_url": "https://api.github.com/users/Renegade334/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Renegade334/subscriptions", "organizations_url": "https://api.github.com/users/Renegade334/orgs", "repos_url": "https://api.github.com/users/Renegade334/repos", "events_url": "https://api.github.com/users/Renegade334/events{/privacy}", "received_events_url": "https://api.github.com/users/Renegade334/received_events", "type": "User", "user_view_type": "public", "site_admin": false}, "labels": [{"id": 155267446, "node_id": "MDU6TGFiZWwxNTUyNjc0NDY=", "url": "https://api.github.com/repos/nodejs/node/labels/util", "name": "util", "color": "d4c5f9", "default": false, "description": "Issues and PRs related to the built-in util module."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2025-04-24T22:16:17Z", "updated_at": "2025-09-12T14:13:43Z", "closed_at": "2025-09-12T14:13:42Z", "author_association": "CONTRIBUTOR", "type": null, "active_lock_reason": null, "sub_issues_summary": {"total": 0, "completed": 0, "percent_completed": 0}, "issue_dependencies_summary": {"blocked_by": 0, "total_blocked_by": 0, "blocking": 0, "total_blocking": 0}, "body": "`util.isArray()` was the sole `util.is*` type-checking method left over from #52744. The remainder are all EOL as of v23.0.0.\n\nIt looks like the motivation for leaving this at the time was to allow for its use to be removed from the form-data library, which it has since been.\n\nIs there another motivation for leaving this as-is, or can it now be made EOL?\n\ncc: @marco-ippolito", "reactions": {"url": "https://api.github.com/repos/nodejs/node/issues/58013/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/nodejs/node/issues/58013/timeline", "performed_via_github_app": null, "state_reason": "completed", "score": 1.0}, {"url": "https://api.github.com/repos/nodejs/node/issues/56570", "repository_url": "https://api.github.com/repos/nodejs/node", "labels_url": "https://api.github.com/repos/nodejs/node/issues/56570/labels{/name}", "comments_url": "https://api.github.com/repos/nodejs/node/issues/56570/comments", "events_url": "https://api.github.com/repos/nodejs/node/issues/56570/events", "html_url": "https://github.com/nodejs/node/issues/56570", "id": 2782552539, "node_id": "I_kwDOAZ7xs86l2mHb", "number": 56570, "title": "util.inspect fails in some border conditions with an argument that has a `name`", "user": {"login": "jandockx", "id": 3955483, "node_id": "MDQ6VXNlcjM5NTU0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/3955483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jandockx", "html_url": "https://github.com/jandockx", "followers_url": "https://api.github.com/users/jandockx/followers", "following_url": "https://api.github.com/users/jandockx/following{/other_user}", "gists_url": "https://api.github.com/users/jandockx/gists{/gist_id}", "starred_url": "https://api.github.com/users/jandockx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jandockx/subscriptions", "organizations_url": "https://api.github.com/users/jandockx/orgs", "repos_url": "https://api.github.com/users/jandockx/repos", "events_url": "https://api.github.com/users/jandockx/events{/privacy}", "received_events_url": "https://api.github.com/users/jandockx/received_events", "type": "User", "user_view_type": "public", "site_admin": false}, "labels": [{"id": 155267446, "node_id": "MDU6TGFiZWwxNTUyNjc0NDY=", "url": "https://api.github.com/repos/nodejs/node/labels/util", "name": "util", "color": "d4c5f9", "default": false, "description": "Issues and PRs related to the built-in util module."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2025-01-12T15:47:15Z", "updated_at": "2025-09-12T14:08:20Z", "closed_at": "2025-09-12T14:08:20Z", "author_association": "NONE", "type": null, "active_lock_reason": null, "sub_issues_summary": {"total": 0, "completed": 0, "percent_completed": 0}, "issue_dependencies_summary": {"blocked_by": 0, "total_blocked_by": 0, "blocking": 0, "total_blocking": 0}, "body": "### Version\n\nv22.10.0\n\n### Platform\n\n```text\nDarwin XXXX.lan 23.6.0 Darwin Kernel Version 23.6.0: Wed Jul 31 20:48:44 PDT 2024; root:xnu-10063.141.1.700.5~1/RELEASE_X86_64 x86_64\n```\n\n### Subsystem\n\nnode:util\n\n### What steps will reproduce the bug?\n\n`util.inspect`, as I understand it, is supposed to work in all conditions, whatever we throw at it. The code below shows 19 cases where `util.inspect` fails:\n\n```bash\nworking: 984\nsymbolName: 9\ncomplexArrayName: 9\nregExpName: 1\nfailRest: 0\n```\n\n```javascript\nimport { inspect } from 'node:util'\nimport { strictEqual, notStrictEqual } from 'node:assert'\n\nfunction setAndFreeze(obj, propertyName, value) {\n  Object.defineProperty(obj, propertyName, {\n    configurable: false,\n    enumerable: true,\n    writable: false,\n    value\n  })\n\n  return obj\n}\n\nfunction buildPrimitiveStuff() {\n  const base = [\n    { subject: undefined, description: 'undefined' },\n    { subject: 'abc', description: 'string' },\n    { subject: '', description: 'empty string' },\n    { subject: 0, description: 'zero (0)' },\n    { subject: 1, description: 'one (1)' },\n    { subject: -1, description: 'minus one (-1)' },\n    { subject: 4, description: 'natural' },\n    { subject: -456, description: 'negative integer' },\n    { subject: Math.PI, description: 'positive float' },\n    { subject: -Math.E, description: 'negative float' },\n    { subject: 0.1, description: 'non-binary float' }, // 10 * 0.1 !== 1\n    { subject: Number.POSITIVE_INFINITY, description: 'positive infinity' },\n    { subject: Number.NEGATIVE_INFINITY, description: 'negative infinity' },\n    { subject: Number.MAX_SAFE_INTEGER, description: 'max safe integer' },\n    { subject: Number.MIN_SAFE_INTEGER, description: 'min safe integer' },\n    { subject: Number.MAX_VALUE, description: 'max number' },\n    { subject: Number.MIN_VALUE, description: 'min number' },\n    { subject: Number.EPSILON, description: 'epsilon' },\n    { subject: Number.NaN, description: 'NaN' },\n    { subject: false, description: 'false' },\n    { subject: true, description: 'true' },\n    { subject: Symbol('isolated symbol as stuff'), description: 'symbol' },\n    { subject: 0n, description: 'zero bigint (0n)' },\n    { subject: 1n, description: 'one bigint (1n)' },\n    { subject: -1n, description: 'minus one bigint (-1n)' },\n    { subject: 123456789012345678901234567890n, description: 'large positive bigint' },\n    { subject: -123456789012345678901234567890n, description: 'large negative bigint' },\n    { subject: BigInt(Number.MAX_SAFE_INTEGER), description: 'bigint equivalent of max safe integer' },\n    { subject: BigInt(Number.MIN_SAFE_INTEGER), description: 'bigint equivalent of min safe integer' }\n  ]\n  return base.map(s => ({ ...s, primitive: true, mutable: false }))\n}\nexport const primitiveStuff = buildPrimitiveStuff()\nexport const primitiveAndNullStuff = [\n  {\n    subject: null,\n    description: 'null',\n    primitive: false,\n    mutable: false\n  },\n  ...primitiveStuff\n]\nexport function buildMutableStuffGenerators() {\n  const base = [\n    { generate: () => new Error('This is an error case'), description: 'Error' },\n    { generate: () => new Date(2025, 0, 11, 14, 11, 48, 857), description: 'Date' },\n    { generate: () => /foo/, description: 'RegExp' },\n    {\n      generate: () =>\n        function () {\n          return 'an anonymous function'\n        },\n      description: 'anonymous function'\n    },\n    {\n      generate: () =>\n        function namedFunction() {\n          return 'a named function'\n        },\n      description: 'named function'\n    },\n    { generate: () => () => 'an arrow function', description: 'arrow function' },\n    {\n      generate: () => {\n        const arrowFunction = () => 'an arrow function in a const'\n        return arrowFunction\n      },\n      description: 'arrow function in a const'\n    },\n    {\n      generate: () =>\n        async function () {\n          return 'an anonymous async function'\n        },\n      description: 'anonymous async function'\n    },\n    {\n      generate: () =>\n        async function asyncNamedFunction() {\n          return 'an async named function'\n        },\n      description: 'async named function'\n    },\n    {\n      generate: () => async () => 'an async arrow function',\n      description: 'async arrow function'\n    },\n    {\n      generate: () => {\n        const asyncArrowFunction = async () => 'an async arrow function in a const'\n        return asyncArrowFunction\n      },\n      description: 'async arrow function in a const'\n    },\n    // eslint-disable-next-line no-new-wrappers\n    { generate: () => new Number(42), description: 'Number' },\n    // eslint-disable-next-line no-new-wrappers\n    { generate: () => new Boolean(false), description: 'Boolean' },\n    // eslint-disable-next-line no-new-wrappers\n    { generate: () => new String('string wrapper object'), description: 'String' },\n    // NOTE: IArguments already has a frozen name `null` (at least in Node) ??!??!!?\n    { generate: () => arguments, description: 'arguments object' },\n    { generate: () => ({}), description: 'empty object' },\n    {\n      generate: () => ({\n        a: 1,\n        b: 'b',\n        c: {},\n        d: { d1: undefined, d2: 'd2', d3: { d31: 31 } },\n        e: [5, 'c', true],\n        f: Symbol('f')\n      }),\n      description: 'complex object'\n    },\n    { generate: () => [], description: 'empty array' },\n    { generate: () => [4, 'z', { a: 'a' }, true, ['b', 12]], description: 'simple array' } // no Symbols\n    // MUDO add circular stuff\n  ]\n  const arrayWithAllInIt = {\n    generate: () => [...primitiveAndNullStuff.map(({ subject }) => subject), ...base.map(({ generate }) => generate())],\n    description: 'complex array',\n    primitive: false,\n    mutable: true\n  }\n  return [...base.map(sg => ({ ...sg, primitive: false, mutable: true })), arrayWithAllInIt]\n}\nexport const mutableStuffGenerators = buildMutableStuffGenerators()\nexport const stuffGenerators = [\n  ...primitiveAndNullStuff.map(({ subject, description, primitive, mutable }) => ({\n    generate: () => subject,\n    description,\n    primitive,\n    mutable\n  })),\n  ...buildMutableStuffGenerators()\n]\nconst namedStuff = mutableStuffGenerators.reduce(function addArrayOfNamedSubjectsToAcc(\n  acc,\n  { generate: generateSubject, description: subjectDescription }\n) {\n  if (subjectDescription === 'arguments object') {\n    return [\n      ...acc,\n      {\n        subject: generateSubject(), // NOTE: IArguments already has a frozen name `null` ??!??!!?\n        description: `${subjectDescription} with an already frozen name \\`null\\``\n      }\n    ]\n  }\n\n  return [\n    ...acc,\n    ...stuffGenerators.map(function addFrozenNameToSubject({ generate: generateName, description: nameDescription }) {\n      return {\n        subject: setAndFreeze(generateSubject(), 'name', generateName()),\n        description: `${subjectDescription} with ${nameDescription} name`,\n        fail:\n          ((subjectDescription === 'Error' || subjectDescription.includes('function')) &&\n            nameDescription === 'symbol') ||\n          ((subjectDescription === 'Error' || subjectDescription.includes('function')) &&\n            nameDescription === 'complex array') ||\n          (subjectDescription === 'Error' && nameDescription === 'RegExp')\n            ? { subject: subjectDescription, name: nameDescription }\n            : undefined\n      }\n    })\n  ]\n}, [])\n\nfunction generateMultiLineAnonymousFunction() {\n  return function () {\n    // NOTE: string in place to make the _source_ multi-line\n    // trim: spaces at start\n    let x = '  This is a multi-line function'\n    x += 'The intention of this test'\n    x += 'is to verify'\n    // start of white line\n\n    // end of white line\n    x += 'whether we get an acceptable'\n    x += 'is to shortened version of this'\n    x += 'as a concise representation'\n    x += 'this function should have no name  ' // trim\n\n    return x\n  }\n}\n\nconst stuff = [\n  ...stuffGenerators.map(({ generate, description }) => ({ subject: generate(), description })),\n  ...namedStuff,\n  { subject: generateMultiLineAnonymousFunction(), description: 'multi-line anonymous function' },\n  {\n    subject: setAndFreeze(\n      generateMultiLineAnonymousFunction(),\n      'name',\n      `   This is a multi-line name\nThe intention of this test\nis to verify\n\nwhether we get an acceptable\nis to shortened version of this\nas a concise representation\nthis function should have a name   ` // trim\n    ),\n    description: 'multi-line anonymous function with frozen name'\n  }\n]\n\nconst triage = stuff.reduce(\n  (acc, s) => {\n    if (s.fail) {\n      if (s.fail.name === 'symbol') {\n        acc.symbolName.push(s)\n      } else if (s.fail.name === 'complex array') {\n        acc.complexArrayName.push(s)\n      } else if (s.fail.name === 'RegExp') {\n        acc.regExpName.push(s)\n      } else {\n        acc.failRest.push(s)\n      }\n    } else {\n      acc.working.push(s)\n    }\n    return acc\n  },\n  { working: [], symbolName: [], complexArrayName: [], regExpName: [], failRest: [] }\n)\n\ndescribe('node util.inspect', function () {\n  describe('working as expected', function () {\n    console.info(`working: ${triage.working.length}`)\n    triage.working.forEach(({ subject, description }) => {\n      it(`works for a ${description}`, function () {\n        const result = inspect(subject)\n        strictEqual(typeof result, 'string')\n        notStrictEqual(result, '')\n      })\n    })\n  })\n  describe('failing with a symbol name', function () {\n    console.info(`symbolName: ${triage.symbolName.length}`)\n    triage.symbolName.forEach(({ subject, description }) => {\n      it(`fails for a ${description}`, function () {\n        const result = inspect(subject)\n        strictEqual(typeof result, 'string')\n        notStrictEqual(result, '')\n      })\n    })\n  })\n  describe('failing with a complex array name', function () {\n    console.info(`complexArrayName: ${triage.complexArrayName.length}`)\n    triage.complexArrayName.forEach(({ subject, description }) => {\n      it(`fails for a ${description}`, function () {\n        const result = inspect(subject)\n        strictEqual(typeof result, 'string')\n        notStrictEqual(result, '')\n      })\n    })\n  })\n  describe('failing with a RegExp name', function () {\n    console.info(`regExpName: ${triage.regExpName.length}`)\n    triage.regExpName.forEach(({ subject, description }) => {\n      it(`fails for a ${description}`, function () {\n        const result = inspect(subject)\n        strictEqual(typeof result, 'string')\n        notStrictEqual(result, '')\n      })\n    })\n  })\n  describe('other failing', function () {\n    console.info(`failRest: ${triage.failRest.length}`)\n    triage.failRest.forEach(({ subject, description }) => {\n      it(`fails for a ${description}`, function () {\n        const result = inspect(subject)\n        strictEqual(typeof result, 'string')\n        notStrictEqual(result, '')\n      })\n    })\n  })\n})\n```\n\n### How often does it reproduce? Is there a required condition?\n\nReproducible with the above code.\n\n### What is the expected behavior? Why is that the expected behavior?\n\n`util.inspect`, as I understand it, is supposed to work and return a string in all conditions, whatever we throw at it.\n\n### What do you see instead?\n\n### `symbolName`\n\n`symbolName` represents 9 failing cases, where the object argument to `util.inspect` is an `Error` or a function, with a `symbol` as a `name`\n\n```bash\nTypeError: Cannot convert a Symbol value to a string\n    at getFunctionBase (node:internal/util/inspect:1208:24)\n    at formatRaw (node:internal/util/inspect:962:14)\n    at formatValue (node:internal/util/inspect:844:10)\n    at inspect (node:internal/util/inspect:368:10)\n    at Context.<anonymous> (file:///Users/XXXXXX/util.inspect.test.js:277:24)\n    at process.processImmediate (node:internal/timers:491:21)\n```\n\n### `complexArrayName`\n\n`complexArrayName` represents 9 failing cases, where the object argument to `util.inspect` is an `Error` or a function, with an array that contains a `symbol` as a `name` (note that using an object with a property that has a `symbol` value works as expected)\n\n```bash\nTypeError: Cannot convert a Symbol value to a string\n    at Array.join (<anonymous>)\n    at Array.toString (<anonymous>)\n    at String (<anonymous>)\n    at formatError (node:internal/util/inspect:1372:35)\n    at formatRaw (node:internal/util/inspect:989:14)\n    at formatValue (node:internal/util/inspect:844:10)\n    at inspect (node:internal/util/inspect:368:10)\n    at Context.<anonymous> (file:///Users/XXXXXX/util.inspect.test.js:287:24)\n    at process.processImmediate (node:internal/timers:491:21)\n```\n\n### `regExpName `\n\n`regExpName ` represents 1 failing case, where the object argument to `util.inspect` is an `Error` with a `RegExp` as a `name`\n\n```bash\nTypeError: First argument to String.prototype.includes must not be a regular expression\n    at String.includes (<anonymous>)\n    at removeDuplicateErrorKeys (node:internal/util/inspect:1312:27)\n    at formatError (node:internal/util/inspect:1375:3)\n    at formatRaw (node:internal/util/inspect:989:14)\n    at formatValue (node:internal/util/inspect:844:10)\n    at inspect (node:internal/util/inspect:368:10)\n    at Context.<anonymous> (file:///Users/XXXXXX/util.inspect.test.js:297:24)\n    at process.processImmediate (node:internal/timers:491:21)\n```\n\n### Additional information\n\n_No response_", "reactions": {"url": "https://api.github.com/repos/nodejs/node/issues/56570/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/nodejs/node/issues/56570/timeline", "performed_via_github_app": null, "state_reason": "completed", "score": 1.0}, {"url": "https://api.github.com/repos/nodejs/node/issues/51819", "repository_url": "https://api.github.com/repos/nodejs/node", "labels_url": "https://api.github.com/repos/nodejs/node/issues/51819/labels{/name}", "comments_url": "https://api.github.com/repos/nodejs/node/issues/51819/comments", "events_url": "https://api.github.com/repos/nodejs/node/issues/51819/events", "html_url": "https://github.com/nodejs/node/issues/51819", "id": 2146126114, "node_id": "I_kwDOAZ7xs85_60ki", "number": 51819, "title": "CI flakiness becomes unmanageable", "user": {"login": "targos", "id": 2352663, "node_id": "MDQ6VXNlcjIzNTI2NjM=", "avatar_url": "https://avatars.githubusercontent.com/u/2352663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/targos", "html_url": "https://github.com/targos", "followers_url": "https://api.github.com/users/targos/followers", "following_url": "https://api.github.com/users/targos/following{/other_user}", "gists_url": "https://api.github.com/users/targos/gists{/gist_id}", "starred_url": "https://api.github.com/users/targos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/targos/subscriptions", "organizations_url": "https://api.github.com/users/targos/orgs", "repos_url": "https://api.github.com/users/targos/repos", "events_url": "https://api.github.com/users/targos/events{/privacy}", "received_events_url": "https://api.github.com/users/targos/received_events", "type": "User", "user_view_type": "public", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2024-02-21T08:39:24Z", "updated_at": "2025-09-12T14:04:46Z", "closed_at": "2025-09-12T14:04:45Z", "author_association": "MEMBER", "type": null, "active_lock_reason": null, "sub_issues_summary": {"total": 0, "completed": 0, "percent_completed": 0}, "issue_dependencies_summary": {"blocked_by": 0, "total_blocked_by": 0, "blocking": 0, "total_blocking": 0}, "body": "I personally drastically reduced my involvement in core recently because of that.\r\n\r\nJust one example among many:\r\n\r\n![image](https://github.com/nodejs/node/assets/2352663/b9bd8069-d2ad-4817-b13b-15e0353aede7)\r\n", "reactions": {"url": "https://api.github.com/repos/nodejs/node/issues/51819/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/nodejs/node/issues/51819/timeline", "performed_via_github_app": null, "state_reason": "not_planned", "score": 1.0}, {"url": "https://api.github.com/repos/nodejs/node/issues/50449", "repository_url": "https://api.github.com/repos/nodejs/node", "labels_url": "https://api.github.com/repos/nodejs/node/issues/50449/labels{/name}", "comments_url": "https://api.github.com/repos/nodejs/node/issues/50449/comments", "events_url": "https://api.github.com/repos/nodejs/node/issues/50449/events", "html_url": "https://github.com/nodejs/node/issues/50449", "id": 1966646102, "node_id": "I_kwDOAZ7xs851OKNW", "number": 50449, "title": "ESLint is going to deprecate formatting rules", "user": {"login": "targos", "id": 2352663, "node_id": "MDQ6VXNlcjIzNTI2NjM=", "avatar_url": "https://avatars.githubusercontent.com/u/2352663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/targos", "html_url": "https://github.com/targos", "followers_url": "https://api.github.com/users/targos/followers", "following_url": "https://api.github.com/users/targos/following{/other_user}", "gists_url": "https://api.github.com/users/targos/gists{/gist_id}", "starred_url": "https://api.github.com/users/targos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/targos/subscriptions", "organizations_url": "https://api.github.com/users/targos/orgs", "repos_url": "https://api.github.com/users/targos/repos", "events_url": "https://api.github.com/users/targos/events{/privacy}", "received_events_url": "https://api.github.com/users/targos/received_events", "type": "User", "user_view_type": "public", "site_admin": false}, "labels": [{"id": 237979054, "node_id": "MDU6TGFiZWwyMzc5NzkwNTQ=", "url": "https://api.github.com/repos/nodejs/node/labels/tools", "name": "tools", "color": "d4c5f9", "default": false, "description": "Issues and PRs related to the tools directory."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2023-10-28T15:53:41Z", "updated_at": "2025-09-12T14:03:41Z", "closed_at": "2025-09-12T14:03:41Z", "author_association": "MEMBER", "type": null, "active_lock_reason": null, "sub_issues_summary": {"total": 0, "completed": 0, "percent_completed": 0}, "issue_dependencies_summary": {"blocked_by": 0, "total_blocked_by": 0, "blocking": 0, "total_blocking": 0}, "body": "See https://eslint.org/blog/2023/10/deprecating-formatting-rules/", "reactions": {"url": "https://api.github.com/repos/nodejs/node/issues/50449/reactions", "total_count": 4, "+1": 3, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 1}, "timeline_url": "https://api.github.com/repos/nodejs/node/issues/50449/timeline", "performed_via_github_app": null, "state_reason": "completed", "score": 1.0}, {"url": "https://api.github.com/repos/nodejs/node/issues/52718", "repository_url": "https://api.github.com/repos/nodejs/node", "labels_url": "https://api.github.com/repos/nodejs/node/issues/52718/labels{/name}", "comments_url": "https://api.github.com/repos/nodejs/node/issues/52718/comments", "events_url": "https://api.github.com/repos/nodejs/node/issues/52718/events", "html_url": "https://github.com/nodejs/node/issues/52718", "id": 2266883298, "node_id": "I_kwDOAZ7xs86HHeTi", "number": 52718, "title": "`v8::Isolate::AttachCppHeap` is deprecated", "user": {"login": "targos", "id": 2352663, "node_id": "MDQ6VXNlcjIzNTI2NjM=", "avatar_url": "https://avatars.githubusercontent.com/u/2352663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/targos", "html_url": "https://github.com/targos", "followers_url": "https://api.github.com/users/targos/followers", "following_url": "https://api.github.com/users/targos/following{/other_user}", "gists_url": "https://api.github.com/users/targos/gists{/gist_id}", "starred_url": "https://api.github.com/users/targos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/targos/subscriptions", "organizations_url": "https://api.github.com/users/targos/orgs", "repos_url": "https://api.github.com/users/targos/repos", "events_url": "https://api.github.com/users/targos/events{/privacy}", "received_events_url": "https://api.github.com/users/targos/received_events", "type": "User", "user_view_type": "public", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 16, "created_at": "2023-11-04T08:33:47Z", "updated_at": "2025-09-12T14:02:31Z", "closed_at": "2025-09-12T14:02:31Z", "author_association": "MEMBER", "type": null, "active_lock_reason": null, "sub_issues_summary": {"total": 0, "completed": 0, "percent_completed": 0}, "issue_dependencies_summary": {"blocked_by": 0, "total_blocked_by": 0, "blocking": 0, "total_blocking": 0}, "body": "See: https://github.com/nodejs/node-v8/actions/runs/6742272834/job/18328109270\r\nRefs: https://github.com/v8/v8/commit/d5631f63d2ea4269b47e0a71bec3b47177073623\r\n\r\nThis breaks us here: https://github.com/nodejs/node-v8/blob/1ccbbfef3a32dbce7d5f35f17c2280bc995af10e/src/env.cc#L552\r\nAnd here: https://github.com/nodejs/node-v8/blob/1ccbbfef3a32dbce7d5f35f17c2280bc995af10e/src/env.cc#L583\r\n\r\n/cc @nodejs/cpp-reviewers @dharesign ", "reactions": {"url": "https://api.github.com/repos/nodejs/node/issues/52718/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/nodejs/node/issues/52718/timeline", "performed_via_github_app": null, "state_reason": "completed", "score": 1.0}, {"url": "https://api.github.com/repos/nodejs/node/issues/47297", "repository_url": "https://api.github.com/repos/nodejs/node", "labels_url": "https://api.github.com/repos/nodejs/node/issues/47297/labels{/name}", "comments_url": "https://api.github.com/repos/nodejs/node/issues/47297/comments", "events_url": "https://api.github.com/repos/nodejs/node/issues/47297/events", "html_url": "https://github.com/nodejs/node/issues/47297", "id": 1646054334, "node_id": "I_kwDOAZ7xs85iHMu-", "number": 47297, "title": "Problems with \"wasm-webapi\" tests and V8 >= 11.2", "user": {"login": "targos", "id": 2352663, "node_id": "MDQ6VXNlcjIzNTI2NjM=", "avatar_url": "https://avatars.githubusercontent.com/u/2352663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/targos", "html_url": "https://github.com/targos", "followers_url": "https://api.github.com/users/targos/followers", "following_url": "https://api.github.com/users/targos/following{/other_user}", "gists_url": "https://api.github.com/users/targos/gists{/gist_id}", "starred_url": "https://api.github.com/users/targos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/targos/subscriptions", "organizations_url": "https://api.github.com/users/targos/orgs", "repos_url": "https://api.github.com/users/targos/repos", "events_url": "https://api.github.com/users/targos/events{/privacy}", "received_events_url": "https://api.github.com/users/targos/received_events", "type": "User", "user_view_type": "public", "site_admin": false}, "labels": [{"id": 176191361, "node_id": "MDU6TGFiZWwxNzYxOTEzNjE=", "url": "https://api.github.com/repos/nodejs/node/labels/v8%20engine", "name": "v8 engine", "color": "0052cc", "default": false, "description": "Issues and PRs related to the V8 dependency."}, {"id": 176240519, "node_id": "MDU6TGFiZWwxNzYyNDA1MTk=", "url": "https://api.github.com/repos/nodejs/node/labels/test", "name": "test", "color": "990099", "default": false, "description": "Issues and PRs related to the tests."}, {"id": 235882965, "node_id": "MDU6TGFiZWwyMzU4ODI5NjU=", "url": "https://api.github.com/repos/nodejs/node/labels/arm", "name": "arm", "color": "9944dd", "default": false, "description": "Issues and PRs related to the ARM platform."}, {"id": 1083584947, "node_id": "MDU6TGFiZWwxMDgzNTg0OTQ3", "url": "https://api.github.com/repos/nodejs/node/labels/wasm", "name": "wasm", "color": "53d145", "default": false, "description": "Issues and PRs related to WebAssembly."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2023-03-29T15:28:33Z", "updated_at": "2025-09-12T13:46:59Z", "closed_at": "2025-09-12T13:46:59Z", "author_association": "MEMBER", "type": null, "active_lock_reason": null, "sub_issues_summary": {"total": 0, "completed": 0, "percent_completed": 0}, "issue_dependencies_summary": {"blocked_by": 0, "total_blocked_by": 0, "blocking": 0, "total_blocking": 0}, "body": "There seems to be issues with WASM streaming compilation on ARM since V8 11.2.\r\n\r\nWe had to disable these tests because they are somewhat flaky (sometimes they hang):\r\n- https://github.com/nodejs/node/pull/47292\r\n- https://github.com/nodejs/node/pull/47299", "reactions": {"url": "https://api.github.com/repos/nodejs/node/issues/47297/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/nodejs/node/issues/47297/timeline", "performed_via_github_app": null, "state_reason": "completed", "score": 1.0}, {"url": "https://api.github.com/repos/nodejs/node/issues/45578", "repository_url": "https://api.github.com/repos/nodejs/node", "labels_url": "https://api.github.com/repos/nodejs/node/issues/45578/labels{/name}", "comments_url": "https://api.github.com/repos/nodejs/node/issues/45578/comments", "events_url": "https://api.github.com/repos/nodejs/node/issues/45578/events", "html_url": "https://github.com/nodejs/node/issues/45578", "id": 1460020475, "node_id": "I_kwDOAZ7xs85XBiT7", "number": 45578, "title": "`test-asan` workflow broken by runner update to ubuntu-22.04", "user": {"login": "targos", "id": 2352663, "node_id": "MDQ6VXNlcjIzNTI2NjM=", "avatar_url": "https://avatars.githubusercontent.com/u/2352663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/targos", "html_url": "https://github.com/targos", "followers_url": "https://api.github.com/users/targos/followers", "following_url": "https://api.github.com/users/targos/following{/other_user}", "gists_url": "https://api.github.com/users/targos/gists{/gist_id}", "starred_url": "https://api.github.com/users/targos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/targos/subscriptions", "organizations_url": "https://api.github.com/users/targos/orgs", "repos_url": "https://api.github.com/users/targos/repos", "events_url": "https://api.github.com/users/targos/events{/privacy}", "received_events_url": "https://api.github.com/users/targos/received_events", "type": "User", "user_view_type": "public", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-11-22T14:49:19Z", "updated_at": "2025-09-12T13:44:38Z", "closed_at": "2025-09-12T13:44:33Z", "author_association": "MEMBER", "type": null, "active_lock_reason": null, "sub_issues_summary": {"total": 0, "completed": 0, "percent_completed": 0}, "issue_dependencies_summary": {"blocked_by": 0, "total_blocked_by": 0, "blocking": 0, "total_blocking": 0}, "body": "Last green job (ubuntu-20.04): https://github.com/nodejs/node/actions/runs/3517872843/jobs/5896143056\r\nNow all jobs fail like this: https://github.com/nodejs/node/actions/runs/3523383870/jobs/5907479881\r\n\r\n```\r\n=== release test-signal-handler ===\r\nPath: abort/test-signal-handler\r\nError: --- stderr ---\r\n/home/runner/work/node/node/out/Release/node[165707]: ../src/node_process_methods.cc:80:void node::Chdir(const FunctionCallbackInfo<v8::Value> &): Assertion `(args.Length()) == (1)' failed.\r\n 1: 0x55dfeedf29c8 node::DumpBacktrace(_IO_FILE*) [/home/runner/work/node/node/out/Release/node]\r\n 2: 0x55dfeefb6dc6 node::Abort() [/home/runner/work/node/node/out/Release/node]\r\n 3: 0x55dfeefb668c node::Assert(node::AssertionInfo const&) [/home/runner/work/node/node/out/Release/node]\r\n 4: 0x55dfef14500c  [/home/runner/work/node/node/out/Release/node]\r\n 5: 0x7ffda2342310 \r\nnode:assert:400\r\n    throw err;\r\n    ^\r\n\r\nAssertionError [ERR_ASSERTION]: child.signal = SIGABRT\r\n    at Object.<anonymous> (/home/runner/work/node/node/test/abort/test-signal-handler.js:22:3)\r\n    at Module._compile (node:internal/modules/cjs/loader:1218:14)\r\n    at Module._extensions..js (node:internal/modules/cjs/loader:1272:10)\r\n    at Module.load (node:internal/modules/cjs/loader:1081:32)\r\n    at Module._load (node:internal/modules/cjs/loader:922:12)\r\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:82:12)\r\n    at node:internal/main/run_main_module:23:47 {\r\n  generatedMessage: false,\r\n  code: 'ERR_ASSERTION',\r\n  actual: false,\r\n  expected: true,\r\n  operator: '=='\r\n}\r\n\r\nNode.js v20.0.0-pre\r\nCommand: out/Release/node /home/runner/work/node/node/test/abort/test-signal-handler.js\r\n\r\n===\r\n=== 1 tests failed\r\n===\r\nmake[1]: *** [Makefile:550: test-ci] Error 1\r\n```", "reactions": {"url": "https://api.github.com/repos/nodejs/node/issues/45578/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/nodejs/node/issues/45578/timeline", "performed_via_github_app": null, "state_reason": "not_planned", "score": 1.0}, {"url": "https://api.github.com/repos/nodejs/node/issues/42186", "repository_url": "https://api.github.com/repos/nodejs/node", "labels_url": "https://api.github.com/repos/nodejs/node/issues/42186/labels{/name}", "comments_url": "https://api.github.com/repos/nodejs/node/issues/42186/comments", "events_url": "https://api.github.com/repos/nodejs/node/issues/42186/events", "html_url": "https://github.com/nodejs/node/issues/42186", "id": 1157320189, "node_id": "I_kwDOAZ7xs85E-039", "number": 42186, "title": "distutils package deprecation warning in configure.py", "user": {"login": "targos", "id": 2352663, "node_id": "MDQ6VXNlcjIzNTI2NjM=", "avatar_url": "https://avatars.githubusercontent.com/u/2352663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/targos", "html_url": "https://github.com/targos", "followers_url": "https://api.github.com/users/targos/followers", "following_url": "https://api.github.com/users/targos/following{/other_user}", "gists_url": "https://api.github.com/users/targos/gists{/gist_id}", "starred_url": "https://api.github.com/users/targos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/targos/subscriptions", "organizations_url": "https://api.github.com/users/targos/orgs", "repos_url": "https://api.github.com/users/targos/repos", "events_url": "https://api.github.com/users/targos/events{/privacy}", "received_events_url": "https://api.github.com/users/targos/received_events", "type": "User", "user_view_type": "public", "site_admin": false}, "labels": [{"id": 171787391, "node_id": "MDU6TGFiZWwxNzE3ODczOTE=", "url": "https://api.github.com/repos/nodejs/node/labels/build", "name": "build", "color": "eb6420", "default": false, "description": "Issues and PRs related to build files or the CI."}, {"id": 654000151, "node_id": "MDU6TGFiZWw2NTQwMDAxNTE=", "url": "https://api.github.com/repos/nodejs/node/labels/python", "name": "python", "color": "c2e0c6", "default": false, "description": "PRs and issues that require attention from people who are familiar with Python."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2022-03-02T15:04:48Z", "updated_at": "2025-09-12T13:40:47Z", "closed_at": "2025-09-12T13:40:47Z", "author_association": "MEMBER", "type": null, "active_lock_reason": null, "sub_issues_summary": {"total": 0, "completed": 0, "percent_completed": 0}, "issue_dependencies_summary": {"blocked_by": 0, "total_blocked_by": 0, "blocking": 0, "total_blocking": 0}, "body": "`D:\\Git\\nodejs\\node\\configure.py:17: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives`\r\n\r\n@nodejs/python ", "reactions": {"url": "https://api.github.com/repos/nodejs/node/issues/42186/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/nodejs/node/issues/42186/timeline", "performed_via_github_app": null, "state_reason": "completed", "score": 1.0}, {"url": "https://api.github.com/repos/nodejs/node/issues/37474", "repository_url": "https://api.github.com/repos/nodejs/node", "labels_url": "https://api.github.com/repos/nodejs/node/issues/37474/labels{/name}", "comments_url": "https://api.github.com/repos/nodejs/node/issues/37474/comments", "events_url": "https://api.github.com/repos/nodejs/node/issues/37474/events", "html_url": "https://github.com/nodejs/node/issues/37474", "id": 813474911, "node_id": "MDU6SXNzdWU4MTM0NzQ5MTE=", "number": 37474, "title": "What should we do with unknown import assertions?", "user": {"login": "targos", "id": 2352663, "node_id": "MDQ6VXNlcjIzNTI2NjM=", "avatar_url": "https://avatars.githubusercontent.com/u/2352663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/targos", "html_url": "https://github.com/targos", "followers_url": "https://api.github.com/users/targos/followers", "following_url": "https://api.github.com/users/targos/following{/other_user}", "gists_url": "https://api.github.com/users/targos/gists{/gist_id}", "starred_url": "https://api.github.com/users/targos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/targos/subscriptions", "organizations_url": "https://api.github.com/users/targos/orgs", "repos_url": "https://api.github.com/users/targos/repos", "events_url": "https://api.github.com/users/targos/events{/privacy}", "received_events_url": "https://api.github.com/users/targos/received_events", "type": "User", "user_view_type": "public", "site_admin": false}, "labels": [{"id": 690799345, "node_id": "MDU6TGFiZWw2OTA3OTkzNDU=", "url": "https://api.github.com/repos/nodejs/node/labels/esm", "name": "esm", "color": "0052cc", "default": false, "description": "Issues and PRs related to the ECMAScript Modules implementation."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 21, "created_at": "2021-02-22T12:54:26Z", "updated_at": "2025-09-12T13:31:35Z", "closed_at": "2025-09-12T13:31:35Z", "author_association": "MEMBER", "type": null, "active_lock_reason": null, "sub_issues_summary": {"total": 0, "completed": 0, "percent_completed": 0}, "issue_dependencies_summary": {"blocked_by": 0, "total_blocked_by": 0, "blocking": 0, "total_blocking": 0}, "body": "Soon, V8 will support [import assertions](https://github.com/tc39/proposal-import-assertions).\r\n\r\nI'm opening this discussion so we make a decision about what Node.js is going to do when there is an `import` statement with assertions that we do not know about.\r\n\r\nI have three cases in mind:\r\n- `import json from \"./package.json\" assert { type: \"json\" }` where we support loading JSON but have not implemented the `type: \"json\"` assertion yet.\r\n- `import json from \"./package.json\" assert { type: \"jssssson\" }` where we support loading JSON with the `type: \"json\"` assertion, but the user made a typo.\r\n- `import something from \"./file.js\" assert { foo: \"bar\" }` where we just don't know what a `foo` assertion is.\r\n\r\nI suppose we have the choice between three possibilities:\r\n- Ignore the unknown assertion / behave the same way as if it wasn't there.\r\n- Throw an error / fail the import\r\n- Emit a warning\r\n\r\n@nodejs/modules", "reactions": {"url": "https://api.github.com/repos/nodejs/node/issues/37474/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/nodejs/node/issues/37474/timeline", "performed_via_github_app": null, "state_reason": "not_planned", "score": 1.0}, {"url": "https://api.github.com/repos/nodejs/node/issues/30697", "repository_url": "https://api.github.com/repos/nodejs/node", "labels_url": "https://api.github.com/repos/nodejs/node/issues/30697/labels{/name}", "comments_url": "https://api.github.com/repos/nodejs/node/issues/30697/comments", "events_url": "https://api.github.com/repos/nodejs/node/issues/30697/events", "html_url": "https://github.com/nodejs/node/issues/30697", "id": 529734823, "node_id": "MDU6SXNzdWU1Mjk3MzQ4MjM=", "number": 30697, "title": "Migration of core modules to primordials", "user": {"login": "targos", "id": 2352663, "node_id": "MDQ6VXNlcjIzNTI2NjM=", "avatar_url": "https://avatars.githubusercontent.com/u/2352663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/targos", "html_url": "https://github.com/targos", "followers_url": "https://api.github.com/users/targos/followers", "following_url": "https://api.github.com/users/targos/following{/other_user}", "gists_url": "https://api.github.com/users/targos/gists{/gist_id}", "starred_url": "https://api.github.com/users/targos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/targos/subscriptions", "organizations_url": "https://api.github.com/users/targos/orgs", "repos_url": "https://api.github.com/users/targos/repos", "events_url": "https://api.github.com/users/targos/events{/privacy}", "received_events_url": "https://api.github.com/users/targos/received_events", "type": "User", "user_view_type": "public", "site_admin": false}, "labels": [{"id": 191447057, "node_id": "MDU6TGFiZWwxOTE0NDcwNTc=", "url": "https://api.github.com/repos/nodejs/node/labels/meta", "name": "meta", "color": "fef2c0", "default": false, "description": "Issues and PRs related to the general management of the project."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 64, "created_at": "2019-11-28T07:16:05Z", "updated_at": "2025-09-12T13:26:32Z", "closed_at": "2025-09-12T13:26:32Z", "author_association": "MEMBER", "type": null, "active_lock_reason": null, "sub_issues_summary": {"total": 0, "completed": 0, "percent_completed": 0}, "issue_dependencies_summary": {"blocked_by": 0, "total_blocked_by": 0, "blocking": 0, "total_blocking": 0}, "body": "This is a tracking issue for the migration of core modules to use builtins from the `primordials` object.\r\n\r\nAt the moment, for performance-sensitive code, only static methods and global functions should be migrated. V8 8.0 might have the optimization that we need to migrate prototype methods.", "reactions": {"url": "https://api.github.com/repos/nodejs/node/issues/30697/reactions", "total_count": 4, "+1": 4, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/nodejs/node/issues/30697/timeline", "performed_via_github_app": null, "state_reason": "completed", "score": 1.0}, {"url": "https://api.github.com/repos/nodejs/node/issues/39876", "repository_url": "https://api.github.com/repos/nodejs/node", "labels_url": "https://api.github.com/repos/nodejs/node/issues/39876/labels{/name}", "comments_url": "https://api.github.com/repos/nodejs/node/issues/39876/comments", "events_url": "https://api.github.com/repos/nodejs/node/issues/39876/events", "html_url": "https://github.com/nodejs/node/issues/39876", "id": 978835330, "node_id": "MDU6SXNzdWU5Nzg4MzUzMzA=", "number": 39876, "title": "V8 (9.5) has split the `v8.h` header", "user": {"login": "targos", "id": 2352663, "node_id": "MDQ6VXNlcjIzNTI2NjM=", "avatar_url": "https://avatars.githubusercontent.com/u/2352663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/targos", "html_url": "https://github.com/targos", "followers_url": "https://api.github.com/users/targos/followers", "following_url": "https://api.github.com/users/targos/following{/other_user}", "gists_url": "https://api.github.com/users/targos/gists{/gist_id}", "starred_url": "https://api.github.com/users/targos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/targos/subscriptions", "organizations_url": "https://api.github.com/users/targos/orgs", "repos_url": "https://api.github.com/users/targos/repos", "events_url": "https://api.github.com/users/targos/events{/privacy}", "received_events_url": "https://api.github.com/users/targos/received_events", "type": "User", "user_view_type": "public", "site_admin": false}, "labels": [{"id": 176191361, "node_id": "MDU6TGFiZWwxNzYxOTEzNjE=", "url": "https://api.github.com/repos/nodejs/node/labels/v8%20engine", "name": "v8 engine", "color": "0052cc", "default": false, "description": "Issues and PRs related to the V8 dependency."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2021-08-25T07:53:52Z", "updated_at": "2025-09-12T13:24:19Z", "closed_at": "2025-09-12T13:24:19Z", "author_association": "MEMBER", "type": null, "active_lock_reason": null, "sub_issues_summary": {"total": 0, "completed": 0, "percent_completed": 0}, "issue_dependencies_summary": {"blocked_by": 0, "total_blocked_by": 0, "blocking": 0, "total_blocking": 0}, "body": "See https://github.com/v8/v8/commit/ec06bb6ce5641cf65e400ec55b7421f87d04b999\r\n\r\nIt shouldn't directly impact the Node.js build because `v8.h` is still here and includes everything it had before, but at least https://github.com/nodejs/node/blob/master/tools/install.py will have to be changed.", "reactions": {"url": "https://api.github.com/repos/nodejs/node/issues/39876/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/nodejs/node/issues/39876/timeline", "performed_via_github_app": null, "state_reason": "not_planned", "score": 1.0}, {"url": "https://api.github.com/repos/nodejs/node/issues/32357", "repository_url": "https://api.github.com/repos/nodejs/node", "labels_url": "https://api.github.com/repos/nodejs/node/issues/32357/labels{/name}", "comments_url": "https://api.github.com/repos/nodejs/node/issues/32357/comments", "events_url": "https://api.github.com/repos/nodejs/node/issues/32357/events", "html_url": "https://github.com/nodejs/node/issues/32357", "id": 584305296, "node_id": "MDU6SXNzdWU1ODQzMDUyOTY=", "number": 32357, "title": "gcc warning in inspector protocol implementation", "user": {"login": "targos", "id": 2352663, "node_id": "MDQ6VXNlcjIzNTI2NjM=", "avatar_url": "https://avatars.githubusercontent.com/u/2352663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/targos", "html_url": "https://github.com/targos", "followers_url": "https://api.github.com/users/targos/followers", "following_url": "https://api.github.com/users/targos/following{/other_user}", "gists_url": "https://api.github.com/users/targos/gists{/gist_id}", "starred_url": "https://api.github.com/users/targos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/targos/subscriptions", "organizations_url": "https://api.github.com/users/targos/orgs", "repos_url": "https://api.github.com/users/targos/repos", "events_url": "https://api.github.com/users/targos/events{/privacy}", "received_events_url": "https://api.github.com/users/targos/received_events", "type": "User", "user_view_type": "public", "site_admin": false}, "labels": [{"id": 155267502, "node_id": "MDU6TGFiZWwxNTUyNjc1MDI=", "url": "https://api.github.com/repos/nodejs/node/labels/c++", "name": "c++", "color": "e11d21", "default": false, "description": "Issues and PRs that require attention from people who are familiar with C++."}, {"id": 176191361, "node_id": "MDU6TGFiZWwxNzYxOTEzNjE=", "url": "https://api.github.com/repos/nodejs/node/labels/v8%20engine", "name": "v8 engine", "color": "0052cc", "default": false, "description": "Issues and PRs related to the V8 dependency."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2020-03-19T10:20:08Z", "updated_at": "2025-09-12T13:22:50Z", "closed_at": "2025-09-12T13:22:50Z", "author_association": "MEMBER", "type": null, "active_lock_reason": null, "sub_issues_summary": {"total": 0, "completed": 0, "percent_completed": 0}, "issue_dependencies_summary": {"blocked_by": 0, "total_blocked_by": 0, "blocking": 0, "total_blocking": 0}, "body": "```\r\n[1934/2890] CXX obj/gen/src/node/inspector/protocol/libnode.Protocol.o\r\ngen/src/node/inspector/protocol/Protocol.cpp: In member function \u2018virtual std::unique_ptr<node::inspector::protocol::Value> node::inspector::protocol::DictionaryValue::clone() const\u2019:\r\ngen/src/node/inspector/protocol/Protocol.cpp:698:21: warning: redundant move in return statement [-Wredundant-move]\r\n  698 |     return std::move(result);\r\n      |            ~~~~~~~~~^~~~~~~~\r\ngen/src/node/inspector/protocol/Protocol.cpp:698:21: note: remove \u2018std::move\u2019 call\r\ngen/src/node/inspector/protocol/Protocol.cpp: In member function \u2018virtual std::unique_ptr<node::inspector::protocol::Value> node::inspector::protocol::ListValue::clone() const\u2019:\r\ngen/src/node/inspector/protocol/Protocol.cpp:739:21: warning: redundant move in return statement [-Wredundant-move]\r\n  739 |     return std::move(result);\r\n      |            ~~~~~~~~~^~~~~~~~\r\ngen/src/node/inspector/protocol/Protocol.cpp:739:21: note: remove \u2018std::move\u2019 call\r\n```", "reactions": {"url": "https://api.github.com/repos/nodejs/node/issues/32357/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/nodejs/node/issues/32357/timeline", "performed_via_github_app": null, "state_reason": "not_planned", "score": 1.0}, {"url": "https://api.github.com/repos/nodejs/node/issues/55302", "repository_url": "https://api.github.com/repos/nodejs/node", "labels_url": "https://api.github.com/repos/nodejs/node/issues/55302/labels{/name}", "comments_url": "https://api.github.com/repos/nodejs/node/issues/55302/comments", "events_url": "https://api.github.com/repos/nodejs/node/issues/55302/events", "html_url": "https://github.com/nodejs/node/issues/55302", "id": 2570039570, "node_id": "I_kwDOAZ7xs86ZL7ES", "number": 55302, "title": "Internal node assertion caused by js copy mechanism", "user": {"login": "artur-ma", "id": 57314588, "node_id": "MDQ6VXNlcjU3MzE0NTg4", "avatar_url": "https://avatars.githubusercontent.com/u/57314588?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artur-ma", "html_url": "https://github.com/artur-ma", "followers_url": "https://api.github.com/users/artur-ma/followers", "following_url": "https://api.github.com/users/artur-ma/following{/other_user}", "gists_url": "https://api.github.com/users/artur-ma/gists{/gist_id}", "starred_url": "https://api.github.com/users/artur-ma/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artur-ma/subscriptions", "organizations_url": "https://api.github.com/users/artur-ma/orgs", "repos_url": "https://api.github.com/users/artur-ma/repos", "events_url": "https://api.github.com/users/artur-ma/events{/privacy}", "received_events_url": "https://api.github.com/users/artur-ma/received_events", "type": "User", "user_view_type": "public", "site_admin": false}, "labels": [{"id": 151728678, "node_id": "MDU6TGFiZWwxNTE3Mjg2Nzg=", "url": "https://api.github.com/repos/nodejs/node/labels/invalid", "name": "invalid", "color": "ededed", "default": true, "description": "Issues and PRs that are invalid."}, {"id": 155435815, "node_id": "MDU6TGFiZWwxNTU0MzU4MTU=", "url": "https://api.github.com/repos/nodejs/node/labels/net", "name": "net", "color": "eb6420", "default": false, "description": "Issues and PRs related to the net subsystem."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 24, "created_at": "2024-10-07T10:40:14Z", "updated_at": "2025-09-12T13:19:50Z", "closed_at": "2025-09-12T13:19:43Z", "author_association": "NONE", "type": null, "active_lock_reason": null, "sub_issues_summary": {"total": 0, "completed": 0, "percent_completed": 0}, "issue_dependencies_summary": {"blocked_by": 0, "total_blocked_by": 0, "blocking": 0, "total_blocking": 0}, "body": "### Version\r\n\r\n22.9.0\r\n\r\n### Platform\r\n\r\n```text\r\nimage node:22.9.0-bullseye-slim\r\n```\r\n\r\n\r\n### Subsystem\r\n\r\n_No response_\r\n\r\n### What steps will reproduce the bug?\r\n\r\nRun in node cli:\r\n\r\n```js\r\nconst undici = require('undici')\r\nconst { default: fastCopy } = require('fast-copy')\r\nconst a = new undici.Agent()\r\na.request({ method: 'GET', origin: 'https://google.com', path: '/' }).then(r => r.body.text())\r\nfastCopy(a)\r\n```\r\n\r\n### How often does it reproduce? Is there a required condition?\r\n\r\neverytime\r\n\r\n### What is the expected behavior? Why is that the expected behavior?\r\n\r\nHave meaningful protection and error message on JS level\r\n\r\n### What do you see instead?\r\n\r\nProcess crash\r\n\r\n```\r\n\u2502  node[80]: static void node::TCPWrap::New(const v8::FunctionCallbackInfo<v8::Value>&) at ../src/tcp_wrap.cc:155  \r\n\u2502   #  Assertion failed: args[0]->IsInt32()                                                                                                                                                                                                   \r\n\u2502                                                                                                                                                                                                                                             \u2502\r\n\u2502 ----- Native stack trace -----                                                                                                                                                                                                                                                                                                                                                                                                                                                       \r\n\u2502  1: 0xf462ec node::Assert(node::AssertionInfo const&) [node]                                                                                                                                                                                \r\n\u2502  2: 0x1088d7c node::TCPWrap::New(v8::FunctionCallbackInfo<v8::Value> const&) [node]                                                                                                                                                         \r\n\u2502  3: 0x1239b24  [node]                                                                                                                                                                                                                       \r\n\u2502  4: 0x1239dcc v8::internal::Builtin_HandleApiConstruct(int, unsigned long*, v8::internal::Isolate*) [node]                                                                                                                                  \r\n\u2502  5: 0x1cfb8f4  [node]                                                                                                                                                                                                                                                                                                                                                                                                                                                                 \u2502\r\n\u2502 ----- JavaScript stack trace -----                                                                                                                                                                                                                                                                                                                                                                                                                                                  \r\n\u2502 1: getCleanClone (/home/app/node_modules/fast-copy/dist/cjs/index.cjs:52:20)                                                                                                                                                                \r\n\u2502 2: copyObjectLooseModern (/home/app/node_modules/fast-copy/dist/cjs/index.cjs:214:17)                                                                                                                                                       \r\n\u2502 3: copier (/home/app/node_modules/fast-copy/dist/cjs/index.cjs:371:20)                                                                                                                                                                      \r\n\u2502 4: copyObjectLooseModern (/home/app/node_modules/fast-copy/dist/cjs/index.cjs:226:35)                                                                                                                                                       \r\n\u2502 5: copier (/home/app/node_modules/fast-copy/dist/cjs/index.cjs:371:20)                                                                                                                                                                      \r\n\u2502 6: copyObjectLooseModern (/home/app/node_modules/fast-copy/dist/cjs/index.cjs:226:35)                                                                                                                                                       \r\n\u2502 7: copier (/home/app/node_modules/fast-copy/dist/cjs/index.cjs:371:20)                                                                                                                                                                      \r\n\u2502 8: copyArrayLoose (/home/app/node_modules/fast-copy/dist/cjs/index.cjs:147:30)                                                                                                                                                              \r\n\u2502 9: copier (/home/app/node_modules/fast-copy/dist/cjs/index.cjs:367:20)                                                                                                                                                                      \r\n\u2502 10: copyObjectLooseModern (/home/app/node_modules/fast-copy/dist/cjs/index.cjs:226:35)     \r\n```\r\n\r\n### Additional information\r\n\r\nUsing pure js library, **without native code manipulation** causes internal nodejs error and process crash\r\n\r\nhere is the library\r\nhttps://github.com/planttheidea/fast-copy", "reactions": {"url": "https://api.github.com/repos/nodejs/node/issues/55302/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/nodejs/node/issues/55302/timeline", "performed_via_github_app": null, "state_reason": "completed", "score": 1.0}, {"url": "https://api.github.com/repos/nodejs/node/issues/53056", "repository_url": "https://api.github.com/repos/nodejs/node", "labels_url": "https://api.github.com/repos/nodejs/node/issues/53056/labels{/name}", "comments_url": "https://api.github.com/repos/nodejs/node/issues/53056/comments", "events_url": "https://api.github.com/repos/nodejs/node/issues/53056/events", "html_url": "https://github.com/nodejs/node/issues/53056", "id": 2304493306, "node_id": "I_kwDOAZ7xs86JW8b6", "number": 53056, "title": "Performance Enhancement in EventEmitter\u2019s emit Method", "user": {"login": "mertcanaltin", "id": 37827216, "node_id": "MDQ6VXNlcjM3ODI3MjE2", "avatar_url": "https://avatars.githubusercontent.com/u/37827216?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mertcanaltin", "html_url": "https://github.com/mertcanaltin", "followers_url": "https://api.github.com/users/mertcanaltin/followers", "following_url": "https://api.github.com/users/mertcanaltin/following{/other_user}", "gists_url": "https://api.github.com/users/mertcanaltin/gists{/gist_id}", "starred_url": "https://api.github.com/users/mertcanaltin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mertcanaltin/subscriptions", "organizations_url": "https://api.github.com/users/mertcanaltin/orgs", "repos_url": "https://api.github.com/users/mertcanaltin/repos", "events_url": "https://api.github.com/users/mertcanaltin/events{/privacy}", "received_events_url": "https://api.github.com/users/mertcanaltin/received_events", "type": "User", "user_view_type": "public", "site_admin": false}, "labels": [{"id": 151728678, "node_id": "MDU6TGFiZWwxNTE3Mjg2Nzg=", "url": "https://api.github.com/repos/nodejs/node/labels/invalid", "name": "invalid", "color": "ededed", "default": true, "description": "Issues and PRs that are invalid."}, {"id": 155435784, "node_id": "MDU6TGFiZWwxNTU0MzU3ODQ=", "url": "https://api.github.com/repos/nodejs/node/labels/events", "name": "events", "color": "bfdadc", "default": false, "description": "Issues and PRs related to the events subsystem / EventEmitter."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2024-05-19T08:18:26Z", "updated_at": "2025-09-12T13:17:00Z", "closed_at": "2025-09-12T13:16:48Z", "author_association": "MEMBER", "type": null, "active_lock_reason": null, "sub_issues_summary": {"total": 0, "completed": 0, "percent_completed": 0}, "issue_dependencies_summary": {"blocked_by": 0, "total_blocked_by": 0, "blocking": 0, "total_blocking": 0}, "body": "### What is the problem this feature will solve?\r\n\r\nSpecific problems addressed by this feature:\r\n\r\n\t1.\tInefficient Error Handling:\r\n\t \tThe existing emit method combines error handling with regular event processing, causing unnecessary overhead even when no errors are involved.\r\n\t2.\tRedundant Checks and Operations:\r\n\t \tThe method contains multiple checks and operations that can be streamlined using modern JavaScript features like optional chaining (?.).\r\n\t3.\tUnnecessary Listener Array Cloning:\r\n\t \tWhen multiple listeners are registered for an event, the current implementation clones the listener array, leading to unnecessary memory usage and processing time.\r\n\t4.\tLack of Early Return Optimization:\r\n\t \tThe method does not leverage early returns effectively, resulting in extra processing steps that could be avoided when conditions are not met.\r\n\r\n### What is the feature you are proposing to solve the problem?\r\n\r\nI propose a series of optimizations to the emit method in the EventEmitter class. These optimizations are designed to improve the performance and efficiency of event handling in Node.js. The proposed changes include:\r\n\r\n\t1.\tSeparate Error Handling Logic:\r\n\t\tBy handling errors early and separately from regular events, the overhead associated with error checking is reduced for non-error events.\r\n\t2.\tUtilize Optional Chaining (?.):\r\n\t\tImplementing optional chaining to simplify and speed up checks for null or undefined values within the event handling process.\r\n\t3.\tDirect Listener Invocation Without Cloning:\r\n\t\tAvoid unnecessary cloning of listener arrays by directly invoking listeners. This reduces memory usage and processing time, especially when multiple listeners are registered for the same event.\r\n\t4.\tImplement Early Return Statements:\r\n\t\tIntroduce early returns to exit the function as soon as conditions are met, preventing unnecessary processing steps.\r\n\r\n**Proposed Changes to emit Method:**\r\n- `lib/events.js`\r\n\r\n```js\r\nEventEmitter.prototype.emit = function emit(type, ...args) {\r\n  if (type === 'error') {\r\n    const events = this._events;\r\n    const handler = events?.error;\r\n    if (!handler) {\r\n      const err = args[0];\r\n      if (err instanceof Error) {\r\n        try {\r\n          const capture = {};\r\n          ErrorCaptureStackTrace(capture, EventEmitter.prototype.emit);\r\n          ObjectDefineProperty(err, kEnhanceStackBeforeInspector, {\r\n            __proto__: null,\r\n            value: FunctionPrototypeBind(enhanceStackTrace, this, err, capture),\r\n            configurable: true,\r\n          });\r\n        } catch {\r\n          // If enhancing the error stack fails, continue without enhancement.\r\n        }\r\n        throw err; // Unhandled 'error' event\r\n      }\r\n      throw new ERR_UNHANDLED_ERROR(inspect(err));\r\n    }\r\n    if (typeof handler === 'function') {\r\n      handler.apply(this, args);\r\n    } else {\r\n      const len = handler.length;\r\n      for (let i = 0; i < len; ++i) {\r\n        handler[i].apply(this, args);\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  const events = this._events;\r\n  if (!events) return false;\r\n\r\n  const handler = events[type];\r\n  if (!handler) return false;\r\n\r\n  if (typeof handler === 'function') {\r\n    handler.apply(this, args);\r\n  } else {\r\n    const len = handler.length;\r\n    for (let i = 0; i < len; ++i) {\r\n      handler[i].apply(this, args);\r\n    }\r\n  }\r\n  return true;\r\n};\r\n```\r\n\r\n**Benefits of the Proposed Feature:**\r\n\r\n\t1.\tImproved Performance:\r\n\t\tReduces overhead for non-error events by handling errors separately and early.\r\n\t\tDecreases memory usage and processing time by eliminating unnecessary cloning of listener arrays.\r\n\t2.\tCleaner and More Maintainable Code:\r\n\t\tSimplifies the codebase using modern JavaScript features like optional chaining.\r\n\t\tIntroduces early returns for more readable and efficient code.\r\n\t3.\tEnhanced Efficiency:\r\n\t\tOptimizes event handling, particularly in applications with a high volume of events or complex event handling requirements.\r\n\r\nThese changes aim to enhance the overall performance and efficiency of the emit method in the EventEmitter class\r\n\r\n\r\n\r\n### What alternatives have you considered?\r\n\r\n_No response_", "reactions": {"url": "https://api.github.com/repos/nodejs/node/issues/53056/reactions", "total_count": 2, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 2, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/nodejs/node/issues/53056/timeline", "performed_via_github_app": null, "state_reason": "completed", "score": 1.0}, {"url": "https://api.github.com/repos/nodejs/node/issues/52887", "repository_url": "https://api.github.com/repos/nodejs/node", "labels_url": "https://api.github.com/repos/nodejs/node/issues/52887/labels{/name}", "comments_url": "https://api.github.com/repos/nodejs/node/issues/52887/comments", "events_url": "https://api.github.com/repos/nodejs/node/issues/52887/events", "html_url": "https://github.com/nodejs/node/issues/52887", "id": 2284911408, "node_id": "I_kwDOAZ7xs86IMPsw", "number": 52887, "title": "Nodejs process crashed when using `console` to print some object. TypeError: Cannot read properties of undefined (reading 'reloadNavigation')", "user": {"login": "zyh825", "id": 8102750, "node_id": "MDQ6VXNlcjgxMDI3NTA=", "avatar_url": "https://avatars.githubusercontent.com/u/8102750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zyh825", "html_url": "https://github.com/zyh825", "followers_url": "https://api.github.com/users/zyh825/followers", "following_url": "https://api.github.com/users/zyh825/following{/other_user}", "gists_url": "https://api.github.com/users/zyh825/gists{/gist_id}", "starred_url": "https://api.github.com/users/zyh825/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zyh825/subscriptions", "organizations_url": "https://api.github.com/users/zyh825/orgs", "repos_url": "https://api.github.com/users/zyh825/repos", "events_url": "https://api.github.com/users/zyh825/events{/privacy}", "received_events_url": "https://api.github.com/users/zyh825/received_events", "type": "User", "user_view_type": "public", "site_admin": false}, "labels": [{"id": 155267446, "node_id": "MDU6TGFiZWwxNTUyNjc0NDY=", "url": "https://api.github.com/repos/nodejs/node/labels/util", "name": "util", "color": "d4c5f9", "default": false, "description": "Issues and PRs related to the built-in util module."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2024-05-08T07:40:13Z", "updated_at": "2025-09-12T13:12:34Z", "closed_at": "2025-09-12T13:12:25Z", "author_association": "NONE", "type": null, "active_lock_reason": null, "sub_issues_summary": {"total": 0, "completed": 0, "percent_completed": 0}, "issue_dependencies_summary": {"blocked_by": 0, "total_blocked_by": 0, "blocking": 0, "total_blocking": 0}, "body": "### Version\n\nv20.13.0\n\n### Platform\n\nDarwin zhangyuhangdeMacBook-Pro.local 23.4.0 Darwin Kernel Version 23.4.0: Fri Mar 15 00:19:22 PDT 2024; root:xnu-10063.101.17~1/RELEASE_ARM64_T8112 arm64\n\n### Subsystem\n\n_No response_\n\n### What steps will reproduce the bug?\n\n```typescript\r\nimport { serve } from '@hono/node-server';\r\nimport { Hono } from 'hono';\r\n\r\nimport { polyfillHandler } from './polyfill-handler.js';\r\n\r\nconst app = new Hono();\r\n\r\napp.get('*', async (c) => {\r\n  // console.log(c.env); // ok\r\n  // console.log(c.res); // ok\r\n  // console.log(c.req); // crashed here !!!!!\r\n  // console.log(c.req.header('User-Agent')); // ok\r\n  // console.log(c.req.path); // ok\r\n  // console.log(c.req.url); // ok\r\n\r\n  if (/\\/polyfill(\\.min)?\\.js$/.test(c.req.path)) {\r\n    return polyfillHandler(c);\r\n  }\r\n  c.res.headers.set(\r\n    'Cache-Control',\r\n    'public, s-maxage=31536000, max-age=604800, stale-while-revalidate=604800, stale-if-error=604800, immutable'\r\n  );\r\n  return c.text('Not Found', 404);\r\n});\r\n\r\n```\r\n\r\nThe  reproduce code & some cases is show above\u3002\r\nprint a  deep value is still work\uff0clike `c.req.url`\u3002\n\n### How often does it reproduce? Is there a required condition?\n\n_No response_\n\n### What is the expected behavior? Why is that the expected behavior?\n\n_No response_\n\n### What do you see instead?\n\nThis is caused by either a bug in Node.js or incorrect usage of Node.js internals.\r\nPlease open an issue with this stack trace at https://github.com/nodejs/node/issues\r\n\r\n    at Function.fail (node:internal/assert:20:9)\r\n    at handleMaxCallStackSize (node:internal/util/inspect:1556:10)\r\n    at formatRaw (node:internal/util/inspect:1062:12)\r\n    at formatValue (node:internal/util/inspect:840:10)\r\n    at formatProperty (node:internal/util/inspect:1945:11)\r\n    at formatRaw (node:internal/util/inspect:1054:9)\r\n    at formatValue (node:internal/util/inspect:840:10)\r\n    at inspect (node:internal/util/inspect:364:10)\r\n    at formatWithOptionsInternal (node:internal/util/inspect:2298:40)\r\n    at formatWithOptions (node:internal/util/inspect:2160:10)\n\n### Additional information\n\n_No response_", "reactions": {"url": "https://api.github.com/repos/nodejs/node/issues/52887/reactions", "total_count": 5, "+1": 5, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/nodejs/node/issues/52887/timeline", "performed_via_github_app": null, "state_reason": "completed", "score": 1.0}, {"url": "https://api.github.com/repos/nodejs/node/issues/52540", "repository_url": "https://api.github.com/repos/nodejs/node", "labels_url": "https://api.github.com/repos/nodejs/node/issues/52540/labels{/name}", "comments_url": "https://api.github.com/repos/nodejs/node/issues/52540/comments", "events_url": "https://api.github.com/repos/nodejs/node/issues/52540/events", "html_url": "https://github.com/nodejs/node/issues/52540", "id": 2243932079, "node_id": "I_kwDOAZ7xs86Fv6-v", "number": 52540, "title": "unhandledRejection Error [ERR_INTERNAL_ASSERTION]: Code: ERR_MODULE_NOT_FOUND", "user": {"login": "cfongerws", "id": 93624680, "node_id": "U_kgDOBZSZaA", "avatar_url": "https://avatars.githubusercontent.com/u/93624680?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cfongerws", "html_url": "https://github.com/cfongerws", "followers_url": "https://api.github.com/users/cfongerws/followers", "following_url": "https://api.github.com/users/cfongerws/following{/other_user}", "gists_url": "https://api.github.com/users/cfongerws/gists{/gist_id}", "starred_url": "https://api.github.com/users/cfongerws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cfongerws/subscriptions", "organizations_url": "https://api.github.com/users/cfongerws/orgs", "repos_url": "https://api.github.com/users/cfongerws/repos", "events_url": "https://api.github.com/users/cfongerws/events{/privacy}", "received_events_url": "https://api.github.com/users/cfongerws/received_events", "type": "User", "user_view_type": "public", "site_admin": false}, "labels": [{"id": 155435814, "node_id": "MDU6TGFiZWwxNTU0MzU4MTQ=", "url": "https://api.github.com/repos/nodejs/node/labels/module", "name": "module", "color": "fbca04", "default": false, "description": "Issues and PRs related to the module subsystem."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2024-04-15T15:11:03Z", "updated_at": "2025-09-12T13:09:23Z", "closed_at": "2025-09-12T13:09:23Z", "author_association": "NONE", "type": null, "active_lock_reason": null, "sub_issues_summary": {"total": 0, "completed": 0, "percent_completed": 0}, "issue_dependencies_summary": {"blocked_by": 0, "total_blocked_by": 0, "blocking": 0, "total_blocking": 0}, "body": "### Version\r\n\r\nv18.20.2\r\n\r\n### Platform\r\n\r\nDarwin Curtiss-MBP-2.lan 21.6.0 Darwin Kernel Version 21.6.0: Mon Feb 19 20:25:23 PST 2024; root:xnu-8020.240.18.707.4~1/RELEASE_ARM64_T6000 arm64\r\n\r\n### Subsystem\r\n\r\n_No response_\r\n\r\n### What steps will reproduce the bug?\r\n\r\n`yarn run build`\r\n\r\n### How often does it reproduce? Is there a required condition?\r\n\r\nReproduces on every build.\r\n\r\n### What is the expected behavior? Why is that the expected behavior?\r\n\r\nNo error when compiling.\r\n\r\n### What do you see instead?\r\n\r\nWe have a Next.js app, version 14.2.1. We're trying to upgrade our version of Node to 18.20.2. When we run `yarn run build`, which is an alias for `./node_modules/.bin/next build`, we get the following output:\r\n\r\n```console\r\nyarn run v1.22.19\r\n$ ./node_modules/.bin/next build\r\n  \u25b2 Next.js 14.2.1\r\n  - Environments: .env.production, .env\r\n\r\n \u2713 Linting and checking validity of types    \r\n   Creating an optimized production build ...\r\n \u2713 Compiled successfully\r\nunhandledRejection Error [ERR_INTERNAL_ASSERTION]: Code: ERR_MODULE_NOT_FOUND; The provided arguments length (2) does not match the required ones (3).\r\nThis is caused by either a bug in Node.js or incorrect usage of Node.js internals.\r\nPlease open an issue with this stack trace at https://github.com/nodejs/node/issues\r\n\r\n    at new NodeError (node:internal/errors:405:5)\r\n    at assert (node:internal/assert:14:11)\r\n    at getMessage (node:internal/errors:451:5)\r\n    at new NodeError (node:internal/errors:379:21)\r\n    at legacyMainResolve (node:internal/modules/esm/resolve:218:9)\r\n    at packageResolve (node:internal/modules/esm/resolve:903:14)\r\n    at moduleResolve (node:internal/modules/esm/resolve:973:20)\r\n    at defaultResolve (node:internal/modules/esm/resolve:1193:11)\r\n    at ModuleLoader.defaultResolve (node:internal/modules/esm/loader:404:12)\r\n    at ModuleLoader.resolve (node:internal/modules/esm/loader:373:25) {\r\n  type: 'Error',\r\n  code: 'ERR_INTERNAL_ASSERTION'\r\n}\r\n```\r\n\r\nAny thoughts?\r\n\r\n### Additional information\r\n\r\nNot sure if this helps, but here's our `tsconfig.json`:\r\n\r\n```jsonc\r\n{\r\n  \"extends\": \"@tsconfig/next/tsconfig.json\",\r\n  \"compilerOptions\": {\r\n    \"target\": \"es5\",\r\n    \"baseUrl\": \".\",\r\n    \"paths\": {\r\n      \"@/components/*\": [\"components/*\"],\r\n      \"@/styles/*\": [\"styles/*\"],\r\n      \"@/utils/*\": [\"utils/*\"],\r\n      \"@/lib/*\": [\"lib/*\"]\r\n    }\r\n  },\r\n  \"include\": [\"next-env.d.ts\", \"**/*.ts\", \"**/*.tsx\"],\r\n  \"exclude\": [\"node_modules\"]\r\n}\r\n```", "reactions": {"url": "https://api.github.com/repos/nodejs/node/issues/52540/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/nodejs/node/issues/52540/timeline", "performed_via_github_app": null, "state_reason": "completed", "score": 1.0}, {"url": "https://api.github.com/repos/nodejs/node/issues/52574", "repository_url": "https://api.github.com/repos/nodejs/node", "labels_url": "https://api.github.com/repos/nodejs/node/issues/52574/labels{/name}", "comments_url": "https://api.github.com/repos/nodejs/node/issues/52574/comments", "events_url": "https://api.github.com/repos/nodejs/node/issues/52574/events", "html_url": "https://github.com/nodejs/node/issues/52574", "id": 2249583765, "node_id": "I_kwDOAZ7xs86GFeyV", "number": 52574, "title": "unhandledRejection Error [ERR_INTERNAL_ASSERTION]", "user": {"login": "edusurf10", "id": 26351660, "node_id": "MDQ6VXNlcjI2MzUxNjYw", "avatar_url": "https://avatars.githubusercontent.com/u/26351660?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edusurf10", "html_url": "https://github.com/edusurf10", "followers_url": "https://api.github.com/users/edusurf10/followers", "following_url": "https://api.github.com/users/edusurf10/following{/other_user}", "gists_url": "https://api.github.com/users/edusurf10/gists{/gist_id}", "starred_url": "https://api.github.com/users/edusurf10/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edusurf10/subscriptions", "organizations_url": "https://api.github.com/users/edusurf10/orgs", "repos_url": "https://api.github.com/users/edusurf10/repos", "events_url": "https://api.github.com/users/edusurf10/events{/privacy}", "received_events_url": "https://api.github.com/users/edusurf10/received_events", "type": "User", "user_view_type": "public", "site_admin": false}, "labels": [{"id": 151728674, "node_id": "MDU6TGFiZWwxNTE3Mjg2NzQ=", "url": "https://api.github.com/repos/nodejs/node/labels/confirmed-bug", "name": "confirmed-bug", "color": "fc2929", "default": false, "description": "Issues with confirmed bugs."}, {"id": 155435814, "node_id": "MDU6TGFiZWwxNTU0MzU4MTQ=", "url": "https://api.github.com/repos/nodejs/node/labels/module", "name": "module", "color": "fbca04", "default": false, "description": "Issues and PRs related to the module subsystem."}, {"id": 458724661, "node_id": "MDU6TGFiZWw0NTg3MjQ2NjE=", "url": "https://api.github.com/repos/nodejs/node/labels/errors", "name": "errors", "color": "ededed", "default": false, "description": "Issues and PRs related to JavaScript errors originated in Node.js core."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2024-04-18T02:07:23Z", "updated_at": "2025-09-12T13:09:07Z", "closed_at": "2025-09-12T13:09:07Z", "author_association": "NONE", "type": null, "active_lock_reason": null, "sub_issues_summary": {"total": 0, "completed": 0, "percent_completed": 0}, "issue_dependencies_summary": {"blocked_by": 0, "total_blocked_by": 0, "blocking": 0, "total_blocking": 0}, "body": "### Version\n\nnode:18-alpine\n\n### Platform\n\nubuntu 22.04\n\n### Subsystem\n\nDocker\n\n### What steps will reproduce the bug?\n\n_No response_\n\n### How often does it reproduce? Is there a required condition?\n\n_No response_\n\n### What is the expected behavior? Why is that the expected behavior?\n\n_No response_\n\n### What do you see instead?\n\n```console\n[+] Building 249.2s (15/20)                                                                                                                                                                                        \r\n => [internal] load build definition from Dockerfile                                                                                                                                                          0.0s\r\n => => transferring dockerfile: 1.75kB                                                                                                                                                                        0.0s\r\n => [internal] load metadata for docker.io/library/node:18-alpine                                                                                                                                             0.5s\r\n => [internal] load .dockerignore                                                                                                                                                                             0.0s\r\n => => transferring context: 173B                                                                                                                                                                             0.0s\r\n => [base 1/1] FROM docker.io/library/node:18-alpine@sha256:80338ff3fc4e989c1d5264a23223cec1c6014e812e584e825e78d1a98d893381                                                                                  0.0s\r\n => [internal] load build context                                                                                                                                                                             0.9s\r\n => => transferring context: 22.48kB                                                                                                                                                                          0.0s\r\n => CACHED [builder 1/4] WORKDIR /app                                                                                                                                                                         0.0s\r\n => CACHED [runner 2/8] RUN addgroup --system --gid 1001 nodejs                                                                                                                                               0.0s\r\n => CACHED [runner 3/8] RUN adduser --system --uid 1001 nextjs                                                                                                                                                0.0s\r\n => CACHED [deps 1/4] RUN apk add --no-cache libc6-compat                                                                                                                                                     0.0s\r\n => CACHED [deps 2/4] WORKDIR /app                                                                                                                                                                            0.0s\r\n => CACHED [deps 3/4] COPY package.json ./                                                                                                                                                                    0.0s\r\n => [deps 4/4] RUN npm install --force                                                                                                                                                                      145.8s\r\n => [builder 2/4] COPY --from=deps /app/node_modules ./node_modules                                                                                                                                          51.3s \r\n => [builder 3/4] COPY . .                                                                                                                                                                                    3.5s \r\n => ERROR [builder 4/4] RUN npm run build                                                                                                                                                                    41.6s \r\n                                                                                                                                                                                                            \r\n > [builder 4/4] RUN npm run build:                                                                                                                                                                                \r\n#0 0.672                                                                                                                                                                                                           \r\n#0 0.672 > li-banco-core@0.1.0 build                                                                                                                                                                               \r\n#0 0.672 > next build                                                                                                                                                                                              \r\n#0 0.672                                                                                                                                                                                                           \r\n#0 1.230    Skipping validation of types\r\n#0 1.230    Skipping linting\r\n#0 1.443    Creating an optimized production build ...\r\n#0 20.61  \u2713 Compiled successfully\r\n#0 20.61    Collecting page data ...\r\n#0 25.68 unhandledRejection Error [ERR_INTERNAL_ASSERTION]: Code: ERR_MODULE_NOT_FOUND; The provided arguments length (2) does not match the required ones (3).\r\n#0 25.68 This is caused by either a bug in Node.js or incorrect usage of Node.js internals.\r\n#0 25.68 Please open an issue with this stack trace at https://github.com/nodejs/node/issues\r\n#0 25.68 \r\n#0 25.68     at new NodeError (node:internal/errors:405:5)\r\n#0 25.68     at assert (node:internal/assert:14:11)\r\n#0 25.68     at getMessage (node:internal/errors:451:5)\r\n#0 25.68     at new NodeError (node:internal/errors:379:21)\r\n#0 25.68     at legacyMainResolve (node:internal/modules/esm/resolve:218:9)\r\n#0 25.68     at packageResolve (node:internal/modules/esm/resolve:903:14)\r\n#0 25.68     at moduleResolve (node:internal/modules/esm/resolve:973:20)\r\n#0 25.68     at defaultResolve (node:internal/modules/esm/resolve:1193:11)\r\n#0 25.68     at ModuleLoader.defaultResolve (node:internal/modules/esm/loader:404:12)\r\n#0 25.68     at ModuleLoader.resolve (node:internal/modules/esm/loader:373:25) {\r\n#0 25.68   type: 'Error',\r\n#0 25.68   code: 'ERR_INTERNAL_ASSERTION'\r\n#0 25.68 }\r\n#0 25.83 npm notice \r\n#0 25.83 npm notice New patch version of npm available! 10.5.0 -> 10.5.2\r\n#0 25.83 npm notice Changelog: <https://github.com/npm/cli/releases/tag/v10.5.2>\r\n#0 25.83 npm notice Run `npm install -g npm@10.5.2` to update!\r\n#0 25.83 npm notice \r\n------\r\nfailed to solve: process \"/bin/sh -c npm run build\" did not complete successfully: exit code: 1\r\n```\n\n### Additional information\n\n_No response_", "reactions": {"url": "https://api.github.com/repos/nodejs/node/issues/52574/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/nodejs/node/issues/52574/timeline", "performed_via_github_app": null, "state_reason": "completed", "score": 1.0}, {"url": "https://api.github.com/repos/nodejs/node/issues/50896", "repository_url": "https://api.github.com/repos/nodejs/node", "labels_url": "https://api.github.com/repos/nodejs/node/issues/50896/labels{/name}", "comments_url": "https://api.github.com/repos/nodejs/node/issues/50896/comments", "events_url": "https://api.github.com/repos/nodejs/node/issues/50896/events", "html_url": "https://github.com/nodejs/node/issues/50896", "id": 2009803687, "node_id": "I_kwDOAZ7xs853yyun", "number": 50896, "title": "Unreachable casting to Int32 in ToV8Value in src/util-inl.h", "user": {"login": "TERESH1", "id": 17130305, "node_id": "MDQ6VXNlcjE3MTMwMzA1", "avatar_url": "https://avatars.githubusercontent.com/u/17130305?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TERESH1", "html_url": "https://github.com/TERESH1", "followers_url": "https://api.github.com/users/TERESH1/followers", "following_url": "https://api.github.com/users/TERESH1/following{/other_user}", "gists_url": "https://api.github.com/users/TERESH1/gists{/gist_id}", "starred_url": "https://api.github.com/users/TERESH1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TERESH1/subscriptions", "organizations_url": "https://api.github.com/users/TERESH1/orgs", "repos_url": "https://api.github.com/users/TERESH1/repos", "events_url": "https://api.github.com/users/TERESH1/events{/privacy}", "received_events_url": "https://api.github.com/users/TERESH1/received_events", "type": "User", "user_view_type": "public", "site_admin": false}, "labels": [{"id": 155267502, "node_id": "MDU6TGFiZWwxNTUyNjc1MDI=", "url": "https://api.github.com/repos/nodejs/node/labels/c++", "name": "c++", "color": "e11d21", "default": false, "description": "Issues and PRs that require attention from people who are familiar with C++."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2023-11-24T14:19:45Z", "updated_at": "2025-09-12T12:36:55Z", "closed_at": "2025-09-12T12:36:54Z", "author_association": "NONE", "type": null, "active_lock_reason": null, "sub_issues_summary": {"total": 0, "completed": 0, "percent_completed": 0}, "issue_dependencies_summary": {"blocked_by": 0, "total_blocked_by": 0, "blocking": 0, "total_blocking": 0}, "body": "### Version\r\n\r\nsince [v12.0.0](https://github.com/nodejs/node/commit/112ee2ab071da24390515b3a91588c1590872498)\r\n\r\n### What steps will reproduce the bug?\r\n\r\nModified version of [`ToV8Value(v8::Local<v8::Context> context, const T& number, v8::Isolate* isolate)`](https://github.com/nodejs/node/blob/8c7221045761a5b64fb1e0c993eee562958f5742/src/util-inl.h#L476-L500) for printing casting type:\r\nhttps://godbolt.org/z/T8z3EzcKz\r\n\r\n### What do you see instead?\r\n\r\nExpression [`static_cast<uint32_t>(Limits::min()) >= std::numeric_limits<uint32_t>::min()`](https://github.com/nodejs/node/blob/8c7221045761a5b64fb1e0c993eee562958f5742/src/util-inl.h#L487-L488) is always true and all integer types will be cast only to Uint32. Casting to Int32 is unreachable\r\n\r\n### Additional information\r\n\r\nAlso casting long and ulong on [64-bit](https://godbolt.org/z/4jMWef7bG) is differ from to [32-bit](https://godbolt.org/z/1ceco7zbG)\r\n\r\n\r\nFound by [Linux Verification Center](https://portal.linuxtesting.ru/) with [Svace](https://svace.pages.ispras.ru/svace-website/en/).\r\nReporter: Svyatoslav Tereshin (s.tereshin@fobos-nt.ru).\r\nOrganization: Fobos-NT (info@fobos-nt.ru).", "reactions": {"url": "https://api.github.com/repos/nodejs/node/issues/50896/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/nodejs/node/issues/50896/timeline", "performed_via_github_app": null, "state_reason": "completed", "score": 1.0}, {"url": "https://api.github.com/repos/nodejs/node/issues/48748", "repository_url": "https://api.github.com/repos/nodejs/node", "labels_url": "https://api.github.com/repos/nodejs/node/issues/48748/labels{/name}", "comments_url": "https://api.github.com/repos/nodejs/node/issues/48748/comments", "events_url": "https://api.github.com/repos/nodejs/node/issues/48748/events", "html_url": "https://github.com/nodejs/node/issues/48748", "id": 1801075170, "node_id": "I_kwDOAZ7xs85rWjni", "number": 48748, "title": "Promise is never resolved or rejected when upload small files with fastify/multipart library.", "user": {"login": "omgzhyla", "id": 41679927, "node_id": "MDQ6VXNlcjQxNjc5OTI3", "avatar_url": "https://avatars.githubusercontent.com/u/41679927?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omgzhyla", "html_url": "https://github.com/omgzhyla", "followers_url": "https://api.github.com/users/omgzhyla/followers", "following_url": "https://api.github.com/users/omgzhyla/following{/other_user}", "gists_url": "https://api.github.com/users/omgzhyla/gists{/gist_id}", "starred_url": "https://api.github.com/users/omgzhyla/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omgzhyla/subscriptions", "organizations_url": "https://api.github.com/users/omgzhyla/orgs", "repos_url": "https://api.github.com/users/omgzhyla/repos", "events_url": "https://api.github.com/users/omgzhyla/events{/privacy}", "received_events_url": "https://api.github.com/users/omgzhyla/received_events", "type": "User", "user_view_type": "public", "site_admin": false}, "labels": [{"id": 151728678, "node_id": "MDU6TGFiZWwxNTE3Mjg2Nzg=", "url": "https://api.github.com/repos/nodejs/node/labels/invalid", "name": "invalid", "color": "ededed", "default": true, "description": "Issues and PRs that are invalid."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2023-07-12T14:13:32Z", "updated_at": "2025-09-12T12:25:44Z", "closed_at": "2025-09-12T12:25:38Z", "author_association": "NONE", "type": null, "active_lock_reason": null, "sub_issues_summary": {"total": 0, "completed": 0, "percent_completed": 0}, "issue_dependencies_summary": {"blocked_by": 0, "total_blocked_by": 0, "blocking": 0, "total_blocking": 0}, "body": "### Version\n\nv18.16.1\n\n### Platform\n\nLinux 5.15.107+ #1 SMP Sat May 20 09:38:40 UTC 2023 x86_64 GNU/Linux\n\n### Subsystem\n\n_No response_\n\n### What steps will reproduce the bug?\n\nLibrary `@fastfy/multipart` uses `util/promisify` to promisify `stream/pipeline`. The promise is never resolved or rejected with small files (around  100KB) in Node v18.16.1 but works fine in v18.16.0.\r\n\r\n[The particular line](https://github.com/fastify/fastify-multipart/blob/5ca152453fc08a36f0ccd943af9f574db52526e7/index.js#L456) where value is never returned.\n\n### How often does it reproduce? Is there a required condition?\n\n100%\n\n### What is the expected behavior? Why is that the expected behavior?\n\nThe promise is resolved or rejected.\n\n### What do you see instead?\n\nThe promise is never resolved or rejected.\n\n### Additional information\n\n_No response_", "reactions": {"url": "https://api.github.com/repos/nodejs/node/issues/48748/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/nodejs/node/issues/48748/timeline", "performed_via_github_app": null, "state_reason": "completed", "score": 1.0}, {"url": "https://api.github.com/repos/nodejs/node/issues/39994", "repository_url": "https://api.github.com/repos/nodejs/node", "labels_url": "https://api.github.com/repos/nodejs/node/issues/39994/labels{/name}", "comments_url": "https://api.github.com/repos/nodejs/node/issues/39994/comments", "events_url": "https://api.github.com/repos/nodejs/node/issues/39994/events", "html_url": "https://github.com/nodejs/node/issues/39994", "id": 988349233, "node_id": "MDU6SXNzdWU5ODgzNDkyMzM=", "number": 39994, "title": "Package.json `exports` field: Differentiate between `./*` and `./*/`", "user": {"login": "ctjlewis", "id": 1657236, "node_id": "MDQ6VXNlcjE2NTcyMzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1657236?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ctjlewis", "html_url": "https://github.com/ctjlewis", "followers_url": "https://api.github.com/users/ctjlewis/followers", "following_url": "https://api.github.com/users/ctjlewis/following{/other_user}", "gists_url": "https://api.github.com/users/ctjlewis/gists{/gist_id}", "starred_url": "https://api.github.com/users/ctjlewis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ctjlewis/subscriptions", "organizations_url": "https://api.github.com/users/ctjlewis/orgs", "repos_url": "https://api.github.com/users/ctjlewis/repos", "events_url": "https://api.github.com/users/ctjlewis/events{/privacy}", "received_events_url": "https://api.github.com/users/ctjlewis/received_events", "type": "User", "user_view_type": "public", "site_admin": false}, "labels": [{"id": 155435814, "node_id": "MDU6TGFiZWwxNTU0MzU4MTQ=", "url": "https://api.github.com/repos/nodejs/node/labels/module", "name": "module", "color": "fbca04", "default": false, "description": "Issues and PRs related to the module subsystem."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 19, "created_at": "2021-09-04T18:53:49Z", "updated_at": "2025-09-12T12:01:36Z", "closed_at": "2025-09-12T12:01:35Z", "author_association": "NONE", "type": null, "active_lock_reason": null, "sub_issues_summary": {"total": 0, "completed": 0, "percent_completed": 0}, "issue_dependencies_summary": {"blocked_by": 0, "total_blocked_by": 0, "blocking": 0, "total_blocking": 0}, "body": "<!--\r\nThank you for suggesting an idea to make Node.js better.\r\n\r\nPlease fill in as much of the template below as you're able.\r\n-->\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\n\r\nYes. I would like to be able to statically resolve entry points to `path/*/index.js` and `path/*.js`, similar to how is done in CJS, e.g. by adding a trailing slash to the match pattern like so:\r\n\r\n```json\r\n\"exports\": {\r\n  \"./package.json\": \"./package.json\",\r\n  \".\": \"./dist/index.js\",\r\n  \"./*/\": \"./dist/*/index.js\",\r\n  \"./*\": \"./dist/*.js\"\r\n},\r\n```\r\n\r\nThis would allow interop with traditional indexing:\r\n\r\n```ts\r\nimport 'my-package/path/to/dir/'\r\n// resolves to `my-package/path/to/dir/index.js`\r\n\r\nimport 'my-package/path/to/dir/module'`\r\n// resolves to `my-package/path/to/dir/module.js`\r\n```\r\n\r\nThis is currently not feasible as I understand it, and it would be necessary to import via `import '.../index.js'` regardless of how the `exports` field is configured.\r\n\r\n**Describe the solution you'd like**\r\n\r\n<strike>Modify `exports` field logic to differentiate between `./*` and `./*/`.</strike>\r\n\r\nAllow a single pattern to have multiple matches, either via:\r\n\r\n```json\r\n\"exports\": {\r\n  \"./package.json\": \"./package.json\",\r\n  \".\": \"./dist/index.js\",\r\n  \"./*\": \"./dist/*/index.js\",\r\n  \"./*\": \"./dist/*.js\"\r\n},\r\n```\r\n\r\nOr:\r\n\r\n```json\r\n\"exports\": {\r\n  \"./package.json\": \"./package.json\",\r\n  \".\": \"./dist/index.js\",\r\n  \"./*\": [\"./dist/*/index.js\", \"./dist/*.js\"]\r\n},\r\n```", "reactions": {"url": "https://api.github.com/repos/nodejs/node/issues/39994/reactions", "total_count": 3, "+1": 3, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/nodejs/node/issues/39994/timeline", "performed_via_github_app": null, "state_reason": "completed", "score": 1.0}, {"url": "https://api.github.com/repos/nodejs/node/issues/39413", "repository_url": "https://api.github.com/repos/nodejs/node", "labels_url": "https://api.github.com/repos/nodejs/node/issues/39413/labels{/name}", "comments_url": "https://api.github.com/repos/nodejs/node/issues/39413/comments", "events_url": "https://api.github.com/repos/nodejs/node/issues/39413/events", "html_url": "https://github.com/nodejs/node/issues/39413", "id": 946702695, "node_id": "MDU6SXNzdWU5NDY3MDI2OTU=", "number": 39413, "title": "Recent performance regressions", "user": {"login": "mscdex", "id": 54666, "node_id": "MDQ6VXNlcjU0NjY2", "avatar_url": "https://avatars.githubusercontent.com/u/54666?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mscdex", "html_url": "https://github.com/mscdex", "followers_url": "https://api.github.com/users/mscdex/followers", "following_url": "https://api.github.com/users/mscdex/following{/other_user}", "gists_url": "https://api.github.com/users/mscdex/gists{/gist_id}", "starred_url": "https://api.github.com/users/mscdex/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mscdex/subscriptions", "organizations_url": "https://api.github.com/users/mscdex/orgs", "repos_url": "https://api.github.com/users/mscdex/repos", "events_url": "https://api.github.com/users/mscdex/events{/privacy}", "received_events_url": "https://api.github.com/users/mscdex/received_events", "type": "User", "user_view_type": "public", "site_admin": false}, "labels": [{"id": 326905670, "node_id": "MDU6TGFiZWwzMjY5MDU2NzA=", "url": "https://api.github.com/repos/nodejs/node/labels/performance", "name": "performance", "color": "5319e7", "default": false, "description": "Issues and PRs related to the performance of Node.js."}, {"id": 585819831, "node_id": "MDU6TGFiZWw1ODU4MTk4MzE=", "url": "https://api.github.com/repos/nodejs/node/labels/regression", "name": "regression", "color": "b60205", "default": false, "description": "Issues related to regressions."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2021-07-17T03:59:13Z", "updated_at": "2025-09-12T11:59:34Z", "closed_at": "2025-09-12T11:59:34Z", "author_association": "CONTRIBUTOR", "type": null, "active_lock_reason": null, "sub_issues_summary": {"total": 0, "completed": 0, "percent_completed": 0}, "issue_dependencies_summary": {"blocked_by": 0, "total_blocked_by": 0, "blocking": 0, "total_blocking": 0}, "body": "### Version\r\n\r\nmaster\r\n\r\n### Platform\r\n\r\n`Linux foo 5.4.0-58-generic #64~18.04.1-Ubuntu SMP Wed Dec 9 17:11:11 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux`\r\n\r\n### Subsystem\r\n\r\nstream\r\n\r\n### What steps will reproduce the bug?\r\n\r\n_No response_\r\n\r\n### How often does it reproduce? Is there a required condition?\r\n\r\n_No response_\r\n\r\n### What is the expected behavior?\r\n\r\n_No response_\r\n\r\n### What do you see instead?\r\n\r\n_No response_\r\n\r\n### Additional information\r\n\r\n6cd12be34765d9d618d063059b80ed11ee99bac5 for some reason is causing a noticeable performance regression for `stream.Readable`.\r\n\r\nFor example, before that commit:\r\n\r\n```\r\n$ ./node benchmark/streams/readable-bigunevenread.js n=2000\r\n```\r\n\r\ngives ~815 ops/s on my machine. With that commit I get ~640 ops/s. I don't quite entirely understand _why_ `stream.Readable` is affected here as it's not being changed in that commit, so it could be something V8-related. I did notice in the profiler output with the commit shows a lot more GC activity than before the commit for some reason.\r\n\r\n/cc @jasnell ", "reactions": {"url": "https://api.github.com/repos/nodejs/node/issues/39413/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/nodejs/node/issues/39413/timeline", "performed_via_github_app": null, "state_reason": "completed", "score": 1.0}, {"url": "https://api.github.com/repos/nodejs/node/issues/37207", "repository_url": "https://api.github.com/repos/nodejs/node", "labels_url": "https://api.github.com/repos/nodejs/node/issues/37207/labels{/name}", "comments_url": "https://api.github.com/repos/nodejs/node/issues/37207/comments", "events_url": "https://api.github.com/repos/nodejs/node/issues/37207/events", "html_url": "https://github.com/nodejs/node/issues/37207", "id": 800441699, "node_id": "MDU6SXNzdWU4MDA0NDE2OTk=", "number": 37207, "title": "asyncLocalStorage returns undefined if the request body is not empty (post, patch ...)", "user": {"login": "LoginovSO", "id": 46023655, "node_id": "MDQ6VXNlcjQ2MDIzNjU1", "avatar_url": "https://avatars.githubusercontent.com/u/46023655?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LoginovSO", "html_url": "https://github.com/LoginovSO", "followers_url": "https://api.github.com/users/LoginovSO/followers", "following_url": "https://api.github.com/users/LoginovSO/following{/other_user}", "gists_url": "https://api.github.com/users/LoginovSO/gists{/gist_id}", "starred_url": "https://api.github.com/users/LoginovSO/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LoginovSO/subscriptions", "organizations_url": "https://api.github.com/users/LoginovSO/orgs", "repos_url": "https://api.github.com/users/LoginovSO/repos", "events_url": "https://api.github.com/users/LoginovSO/events{/privacy}", "received_events_url": "https://api.github.com/users/LoginovSO/received_events", "type": "User", "user_view_type": "public", "site_admin": false}, "labels": [{"id": 442446525, "node_id": "MDU6TGFiZWw0NDI0NDY1MjU=", "url": "https://api.github.com/repos/nodejs/node/labels/async_hooks", "name": "async_hooks", "color": "55a3f7", "default": false, "description": "Issues and PRs related to the async hooks subsystem."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2021-02-03T15:33:04Z", "updated_at": "2025-09-12T11:41:13Z", "closed_at": "2025-09-12T11:41:13Z", "author_association": "NONE", "type": null, "active_lock_reason": null, "sub_issues_summary": {"total": 0, "completed": 0, "percent_completed": 0}, "issue_dependencies_summary": {"blocked_by": 0, "total_blocked_by": 0, "blocking": 0, "total_blocking": 0}, "body": "\r\nnode v14.6.0\r\n\r\n### Additional information\r\n\r\nreturns undefined if the request body is not empty (post, patch ...)\r\nwhen using async localStorage. run ()\r\nbut when using async localStorage.enter With() everything works fine\r\n", "reactions": {"url": "https://api.github.com/repos/nodejs/node/issues/37207/reactions", "total_count": 4, "+1": 4, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/nodejs/node/issues/37207/timeline", "performed_via_github_app": null, "state_reason": "completed", "score": 1.0}, {"url": "https://api.github.com/repos/nodejs/node/issues/32226", "repository_url": "https://api.github.com/repos/nodejs/node", "labels_url": "https://api.github.com/repos/nodejs/node/issues/32226/labels{/name}", "comments_url": "https://api.github.com/repos/nodejs/node/issues/32226/comments", "events_url": "https://api.github.com/repos/nodejs/node/issues/32226/events", "html_url": "https://github.com/nodejs/node/issues/32226", "id": 579942508, "node_id": "MDU6SXNzdWU1Nzk5NDI1MDg=", "number": 32226, "title": "buffer: ~2x slowdown in master compared to v12.x", "user": {"login": "mscdex", "id": 54666, "node_id": "MDQ6VXNlcjU0NjY2", "avatar_url": "https://avatars.githubusercontent.com/u/54666?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mscdex", "html_url": "https://github.com/mscdex", "followers_url": "https://api.github.com/users/mscdex/followers", "following_url": "https://api.github.com/users/mscdex/following{/other_user}", "gists_url": "https://api.github.com/users/mscdex/gists{/gist_id}", "starred_url": "https://api.github.com/users/mscdex/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mscdex/subscriptions", "organizations_url": "https://api.github.com/users/mscdex/orgs", "repos_url": "https://api.github.com/users/mscdex/repos", "events_url": "https://api.github.com/users/mscdex/events{/privacy}", "received_events_url": "https://api.github.com/users/mscdex/received_events", "type": "User", "user_view_type": "public", "site_admin": false}, "labels": [{"id": 151728674, "node_id": "MDU6TGFiZWwxNTE3Mjg2NzQ=", "url": "https://api.github.com/repos/nodejs/node/labels/confirmed-bug", "name": "confirmed-bug", "color": "fc2929", "default": false, "description": "Issues with confirmed bugs."}, {"id": 155267414, "node_id": "MDU6TGFiZWwxNTUyNjc0MTQ=", "url": "https://api.github.com/repos/nodejs/node/labels/buffer", "name": "buffer", "color": "f7c6c7", "default": false, "description": "Issues and PRs related to the buffer subsystem."}, {"id": 155267502, "node_id": "MDU6TGFiZWwxNTUyNjc1MDI=", "url": "https://api.github.com/repos/nodejs/node/labels/c++", "name": "c++", "color": "e11d21", "default": false, "description": "Issues and PRs that require attention from people who are familiar with C++."}, {"id": 326905670, "node_id": "MDU6TGFiZWwzMjY5MDU2NzA=", "url": "https://api.github.com/repos/nodejs/node/labels/performance", "name": "performance", "color": "5319e7", "default": false, "description": "Issues and PRs related to the performance of Node.js."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 38, "created_at": "2020-03-12T13:33:54Z", "updated_at": "2025-09-12T11:38:14Z", "closed_at": "2025-09-12T11:38:06Z", "author_association": "CONTRIBUTOR", "type": null, "active_lock_reason": null, "sub_issues_summary": {"total": 0, "completed": 0, "percent_completed": 0}, "issue_dependencies_summary": {"blocked_by": 0, "total_blocked_by": 0, "blocking": 0, "total_blocking": 0}, "body": "* **Version**: master\r\n* **Platform**: `Linux foo 5.0.0-36-generic #39~18.04.1-Ubuntu SMP Tue Nov 12 11:09:50 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux`\r\n* **Subsystem**: buffer\r\n\r\nI was running some benchmarks (for private code) and noticed a significant slowdown with some Buffer methods. Here is a comparison of the C++ portion of `--prof` between v12.16.1 and master:\r\n\r\nv12.16.1:\r\n\r\n<details>\r\n\r\n```\r\n [C++]:\r\n   ticks  total  nonlib   name\r\n     66    4.2%    8.4%  void node::Buffer::(anonymous namespace)::StringSlice<(node::encoding)1>(v8::FunctionCallbackInfo<v8::Value> const&)\r\n     54    3.4%    6.9%  __libc_read\r\n     48    3.0%    6.1%  node::Buffer::(anonymous namespace)::ParseArrayIndex(node::Environment*, v8::Local<v8::Value>, unsigned long, unsigned long*)\r\n     35    2.2%    4.5%  v8::ArrayBuffer::GetContents()\r\n     35    2.2%    4.5%  epoll_pwait\r\n     27    1.7%    3.4%  v8::internal::Builtin_TypedArrayPrototypeBuffer(int, unsigned long*, v8::internal::Isolate*)\r\n     26    1.6%    3.3%  v8::String::NewFromUtf8(v8::Isolate*, char const*, v8::NewStringType, int)\r\n     24    1.5%    3.1%  node::native_module::NativeModuleEnv::CompileFunction(v8::FunctionCallbackInfo<v8::Value> const&)\r\n     22    1.4%    2.8%  __pthread_cond_signal\r\n     20    1.3%    2.5%  node::StringBytes::Encode(v8::Isolate*, char const*, unsigned long, node::encoding, v8::Local<v8::Value>*)\r\n     16    1.0%    2.0%  v8::Value::IsArrayBufferView() const\r\n     14    0.9%    1.8%  v8::ArrayBufferView::Buffer()\r\n      9    0.6%    1.1%  v8::internal::FixedArray::set(int, v8::internal::Object)\r\n      8    0.5%    1.0%  v8::ArrayBufferView::ByteLength()\r\n      7    0.4%    0.9%  v8::Value::IntegerValue(v8::Local<v8::Context>) const\r\n      6    0.4%    0.8%  v8::ArrayBufferView::ByteOffset()\r\n      5    0.3%    0.6%  __libc_malloc\r\n      4    0.3%    0.5%  write\r\n      4    0.3%    0.5%  v8::internal::libc_memmove(void*, void const*, unsigned long)\r\n      4    0.3%    0.5%  node::binding::GetInternalBinding(v8::FunctionCallbackInfo<v8::Value> const&)\r\n      3    0.2%    0.4%  v8::internal::libc_memset(void*, int, unsigned long)\r\n      3    0.2%    0.4%  __lll_unlock_wake\r\n      2    0.1%    0.3%  void node::StreamBase::JSMethod<&node::StreamBase::WriteBuffer>(v8::FunctionCallbackInfo<v8::Value> const&)\r\n      2    0.1%    0.3%  fwrite\r\n      2    0.1%    0.3%  do_futex_wait.constprop.1\r\n      2    0.1%    0.3%  __clock_gettime\r\n      2    0.1%    0.3%  __GI___pthread_mutex_unlock\r\n      1    0.1%    0.1%  void node::StreamBase::JSMethod<&(int node::StreamBase::WriteString<(node::encoding)1>(v8::FunctionCallbackInfo<v8::Value> const&))>(v8::FunctionCallbackInfo<v8::Value> const&)\r\n      1    0.1%    0.1%  v8::internal::Scope::DeserializeScopeChain(v8::internal::Isolate*, v8::internal::Zone*, v8::internal::ScopeInfo, v8::internal::DeclarationScope*, v8::internal::AstValueFactory*, v8::internal::Scope::DeserializationMode)\r\n      1    0.1%    0.1%  v8::internal::RuntimeCallTimerScope::RuntimeCallTimerScope(v8::internal::Isolate*, v8::internal::RuntimeCallCounterId)\r\n      1    0.1%    0.1%  v8::EscapableHandleScope::Escape(unsigned long*)\r\n      1    0.1%    0.1%  std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long) const\r\n      1    0.1%    0.1%  std::ostream::sentry::sentry(std::ostream&)\r\n      1    0.1%    0.1%  std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)\r\n      1    0.1%    0.1%  std::__detail::_Prime_rehash_policy::_M_need_rehash(unsigned long, unsigned long, unsigned long) const\r\n      1    0.1%    0.1%  non-virtual thunk to node::LibuvStreamWrap::GetAsyncWrap()\r\n      1    0.1%    0.1%  node::LibuvStreamWrap::ReadStart()::{lambda(uv_stream_s*, long, uv_buf_t const*)#2}::_FUN(uv_stream_s*, long, uv_buf_t const*)\r\n      1    0.1%    0.1%  node::CustomBufferJSListener::OnStreamRead(long, uv_buf_t const&)\r\n      1    0.1%    0.1%  node::AsyncWrap::EmitTraceEventBefore()\r\n      1    0.1%    0.1%  mprotect\r\n      1    0.1%    0.1%  getpid\r\n      1    0.1%    0.1%  cfree\r\n      1    0.1%    0.1%  __lll_lock_wait\r\n```\r\n</details>\r\n\r\nmaster:\r\n\r\n<details>\r\n\r\n```\r\n [C++]:\r\n   ticks  total  nonlib   name\r\n    155    6.5%   14.0%  std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release()\r\n     88    3.7%    7.9%  __GI___pthread_mutex_lock\r\n     87    3.7%    7.8%  v8::ArrayBuffer::GetBackingStore()\r\n     71    3.0%    6.4%  __GI___pthread_mutex_unlock\r\n     54    2.3%    4.9%  void node::Buffer::(anonymous namespace)::StringSlice<(node::encoding)1>(v8::FunctionCallbackInfo<v8::Value> const&)\r\n     36    1.5%    3.2%  node::Buffer::(anonymous namespace)::ParseArrayIndex(node::Environment*, v8::Local<v8::Value>, unsigned long, unsigned long*)\r\n     32    1.4%    2.9%  v8::internal::Builtin_TypedArrayPrototypeBuffer(int, unsigned long*, v8::internal::Isolate*)\r\n     31    1.3%    2.8%  v8::Value::IntegerValue(v8::Local<v8::Context>) const\r\n     27    1.1%    2.4%  node::native_module::NativeModuleEnv::CompileFunction(v8::FunctionCallbackInfo<v8::Value> const&)\r\n     27    1.1%    2.4%  epoll_pwait\r\n     26    1.1%    2.3%  v8::String::NewFromUtf8(v8::Isolate*, char const*, v8::NewStringType, int)\r\n     20    0.8%    1.8%  v8::Value::IsArrayBufferView() const\r\n     20    0.8%    1.8%  __libc_read\r\n     19    0.8%    1.7%  __pthread_cond_signal\r\n     16    0.7%    1.4%  node::StringBytes::Encode(v8::Isolate*, char const*, unsigned long, node::encoding, v8::Local<v8::Value>*)\r\n     13    0.5%    1.2%  v8::ArrayBufferView::Buffer()\r\n     10    0.4%    0.9%  v8::internal::FixedArray::set(int, v8::internal::Object)\r\n      6    0.3%    0.5%  v8::internal::libc_memset(void*, int, unsigned long)\r\n      6    0.3%    0.5%  v8::internal::RuntimeCallTimerScope::RuntimeCallTimerScope(v8::internal::Isolate*, v8::internal::RuntimeCallCounterId)\r\n      5    0.2%    0.5%  v8::internal::libc_memmove(void*, void const*, unsigned long)\r\n      5    0.2%    0.5%  v8::ArrayBufferView::ByteLength()\r\n      4    0.2%    0.4%  write\r\n      4    0.2%    0.4%  void node::StreamBase::JSMethod<&node::StreamBase::WriteBuffer>(v8::FunctionCallbackInfo<v8::Value> const&)\r\n      4    0.2%    0.4%  do_futex_wait.constprop.1\r\n      4    0.2%    0.4%  __lll_lock_wait\r\n      3    0.1%    0.3%  node::binding::GetInternalBinding(v8::FunctionCallbackInfo<v8::Value> const&)\r\n      3    0.1%    0.3%  _init\r\n      2    0.1%    0.2%  v8::BackingStore::Data() const\r\n      2    0.1%    0.2%  fwrite\r\n      2    0.1%    0.2%  cfree\r\n      2    0.1%    0.2%  __lll_unlock_wake\r\n      2    0.1%    0.2%  __libc_malloc\r\n      1    0.0%    0.1%  v8::internal::DeclarationScope::DeclareDefaultFunctionVariables(v8::internal::AstValueFactory*)\r\n      1    0.0%    0.1%  v8::internal::Builtin_HandleApiCall(int, unsigned long*, v8::internal::Isolate*)\r\n      1    0.0%    0.1%  v8::internal::AstValueFactory::GetOneByteStringInternal(v8::internal::Vector<unsigned char const>)\r\n      1    0.0%    0.1%  std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long) const\r\n      1    0.0%    0.1%  operator new[](unsigned long)\r\n      1    0.0%    0.1%  node::contextify::ContextifyContext::CompileFunction(v8::FunctionCallbackInfo<v8::Value> const&)\r\n      1    0.0%    0.1%  node::TCPWrap::Connect(v8::FunctionCallbackInfo<v8::Value> const&)\r\n      1    0.0%    0.1%  node::Environment::RunAndClearNativeImmediates(bool)\r\n      1    0.0%    0.1%  node::AsyncWrap::EmitTraceEventBefore()\r\n      1    0.0%    0.1%  mprotect\r\n      1    0.0%    0.1%  __pthread_cond_timedwait\r\n      1    0.0%    0.1%  __fxstat\r\n      1    0.0%    0.1%  __GI___pthread_getspecific\r\n```\r\n</details>\r\n\r\nAs you will see, master has these additional items at the top of the list:\r\n\r\n```\r\n    155    6.5%   14.0%  std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release()\r\n     88    3.7%    7.9%  __GI___pthread_mutex_lock\r\n     87    3.7%    7.8%  v8::ArrayBuffer::GetBackingStore()\r\n     71    3.0%    6.4%  __GI___pthread_mutex_unlock\r\n```\r\n\r\nIs there some way we can avoid this slowdown?", "reactions": {"url": "https://api.github.com/repos/nodejs/node/issues/32226/reactions", "total_count": 8, "+1": 8, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/nodejs/node/issues/32226/timeline", "performed_via_github_app": null, "state_reason": "completed", "score": 1.0}, {"url": "https://api.github.com/repos/nodejs/node/issues/49177", "repository_url": "https://api.github.com/repos/nodejs/node", "labels_url": "https://api.github.com/repos/nodejs/node/issues/49177/labels{/name}", "comments_url": "https://api.github.com/repos/nodejs/node/issues/49177/comments", "events_url": "https://api.github.com/repos/nodejs/node/issues/49177/events", "html_url": "https://github.com/nodejs/node/issues/49177", "id": 1850852491, "node_id": "I_kwDOAZ7xs85uUcSL", "number": 49177, "title": "Throwing within `util.inspect.custom` can cause an `ERR_INTERNAL_ASSERTION`", "user": {"login": "paperclover", "id": 24465214, "node_id": "MDQ6VXNlcjI0NDY1MjE0", "avatar_url": "https://avatars.githubusercontent.com/u/24465214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paperclover", "html_url": "https://github.com/paperclover", "followers_url": "https://api.github.com/users/paperclover/followers", "following_url": "https://api.github.com/users/paperclover/following{/other_user}", "gists_url": "https://api.github.com/users/paperclover/gists{/gist_id}", "starred_url": "https://api.github.com/users/paperclover/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paperclover/subscriptions", "organizations_url": "https://api.github.com/users/paperclover/orgs", "repos_url": "https://api.github.com/users/paperclover/repos", "events_url": "https://api.github.com/users/paperclover/events{/privacy}", "received_events_url": "https://api.github.com/users/paperclover/received_events", "type": "User", "user_view_type": "public", "site_admin": false}, "labels": [{"id": 155267446, "node_id": "MDU6TGFiZWwxNTUyNjc0NDY=", "url": "https://api.github.com/repos/nodejs/node/labels/util", "name": "util", "color": "d4c5f9", "default": false, "description": "Issues and PRs related to the built-in util module."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2023-08-15T03:26:41Z", "updated_at": "2025-09-12T11:11:06Z", "closed_at": "2025-09-12T11:11:06Z", "author_association": "NONE", "type": null, "active_lock_reason": null, "sub_issues_summary": {"total": 0, "completed": 0, "percent_completed": 0}, "issue_dependencies_summary": {"blocked_by": 0, "total_blocked_by": 0, "blocking": 0, "total_blocking": 0}, "body": "### Version\n\n20.5.1\n\n### Platform\n\nDarwin paperback.local 22.6.0 Darwin Kernel Version 22.6.0: Wed Jul  5 22:21:53 PDT 2023; root:xnu-8796.141.3~6/RELEASE_ARM64_T6020 arm64\n\n### Subsystem\n\n_No response_\n\n### What steps will reproduce the bug?\n\n```ts\r\nimport util from \"util\";\r\nconsole.log({\r\n  hello: {\r\n    [util.inspect.custom]: () => {\r\n      throw new Error(\"hello\");\r\n    },\r\n  },\r\n});\r\n```\n\n### How often does it reproduce? Is there a required condition?\n\nEvery Time\n\n### What is the expected behavior? Why is that the expected behavior?\n\nTo throw the error without an internal assertion error.\n\n### What do you see instead?\n\n```\r\nnode:internal/errors:496\r\n    ErrorCaptureStackTrace(err);\r\n    ^\r\n\r\nError [ERR_INTERNAL_ASSERTION]: Error: hello\r\n    at [nodejs.util.inspect.custom] (file:///private/tmp/scratchpad_20230815T031811/index.mjs:5:13)\r\n    at formatValue (node:internal/util/inspect:804:19)\r\n    at formatProperty (node:internal/util/inspect:1944:11)\r\n    at formatRaw (node:internal/util/inspect:1053:9)\r\n    at formatValue (node:internal/util/inspect:839:10)\r\n    at inspect (node:internal/util/inspect:363:10)\r\n    at formatWithOptionsInternal (node:internal/util/inspect:2297:40)\r\n    at formatWithOptions (node:internal/util/inspect:2159:10)\r\n    at console.value (node:internal/console/constructor:342:14)\r\n    at console.log (node:internal/console/constructor:379:61)\r\nThis is caused by either a bug in Node.js or incorrect usage of Node.js internals.\r\nPlease open an issue with this stack trace at https://github.com/nodejs/node/issues\r\n\r\n    at new NodeError (node:internal/errors:405:5)\r\n    at Function.fail (node:internal/assert:20:9)\r\n    at handleMaxCallStackSize (node:internal/util/inspect:1555:10)\r\n    at formatRaw (node:internal/util/inspect:1061:12)\r\n    at formatValue (node:internal/util/inspect:839:10)\r\n    at inspect (node:internal/util/inspect:363:10)\r\n    at formatWithOptionsInternal (node:internal/util/inspect:2297:40)\r\n    at formatWithOptions (node:internal/util/inspect:2159:10)\r\n    at console.value (node:internal/console/constructor:342:14)\r\n    at console.log (node:internal/console/constructor:379:61) {\r\n  code: 'ERR_INTERNAL_ASSERTION'\r\n}\r\n\r\nNode.js v20.5.1\r\n```\n\n### Additional information\n\n_No response_", "reactions": {"url": "https://api.github.com/repos/nodejs/node/issues/49177/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/nodejs/node/issues/49177/timeline", "performed_via_github_app": null, "state_reason": "completed", "score": 1.0}, {"url": "https://api.github.com/repos/nodejs/node/issues/58755", "repository_url": "https://api.github.com/repos/nodejs/node", "labels_url": "https://api.github.com/repos/nodejs/node/issues/58755/labels{/name}", "comments_url": "https://api.github.com/repos/nodejs/node/issues/58755/comments", "events_url": "https://api.github.com/repos/nodejs/node/issues/58755/events", "html_url": "https://github.com/nodejs/node/issues/58755", "id": 3157109377, "node_id": "I_kwDOAZ7xs868LaqB", "number": 58755, "title": "Support relative compile cache", "user": {"login": "joyeecheung", "id": 4299420, "node_id": "MDQ6VXNlcjQyOTk0MjA=", "avatar_url": "https://avatars.githubusercontent.com/u/4299420?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joyeecheung", "html_url": "https://github.com/joyeecheung", "followers_url": "https://api.github.com/users/joyeecheung/followers", "following_url": "https://api.github.com/users/joyeecheung/following{/other_user}", "gists_url": "https://api.github.com/users/joyeecheung/gists{/gist_id}", "starred_url": "https://api.github.com/users/joyeecheung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joyeecheung/subscriptions", "organizations_url": "https://api.github.com/users/joyeecheung/orgs", "repos_url": "https://api.github.com/users/joyeecheung/repos", "events_url": "https://api.github.com/users/joyeecheung/events{/privacy}", "received_events_url": "https://api.github.com/users/joyeecheung/received_events", "type": "User", "user_view_type": "public", "site_admin": false}, "labels": [{"id": 207445406, "node_id": "MDU6TGFiZWwyMDc0NDU0MDY=", "url": "https://api.github.com/repos/nodejs/node/labels/feature%20request", "name": "feature request", "color": "0D7BDE", "default": false, "description": "Issues that request new features to be added to Node.js."}], "state": "closed", "locked": false, "assignee": {"login": "joyeecheung", "id": 4299420, "node_id": "MDQ6VXNlcjQyOTk0MjA=", "avatar_url": "https://avatars.githubusercontent.com/u/4299420?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joyeecheung", "html_url": "https://github.com/joyeecheung", "followers_url": "https://api.github.com/users/joyeecheung/followers", "following_url": "https://api.github.com/users/joyeecheung/following{/other_user}", "gists_url": "https://api.github.com/users/joyeecheung/gists{/gist_id}", "starred_url": "https://api.github.com/users/joyeecheung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joyeecheung/subscriptions", "organizations_url": "https://api.github.com/users/joyeecheung/orgs", "repos_url": "https://api.github.com/users/joyeecheung/repos", "events_url": "https://api.github.com/users/joyeecheung/events{/privacy}", "received_events_url": "https://api.github.com/users/joyeecheung/received_events", "type": "User", "user_view_type": "public", "site_admin": false}, "assignees": [{"login": "joyeecheung", "id": 4299420, "node_id": "MDQ6VXNlcjQyOTk0MjA=", "avatar_url": "https://avatars.githubusercontent.com/u/4299420?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joyeecheung", "html_url": "https://github.com/joyeecheung", "followers_url": "https://api.github.com/users/joyeecheung/followers", "following_url": "https://api.github.com/users/joyeecheung/following{/other_user}", "gists_url": "https://api.github.com/users/joyeecheung/gists{/gist_id}", "starred_url": "https://api.github.com/users/joyeecheung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joyeecheung/subscriptions", "organizations_url": "https://api.github.com/users/joyeecheung/orgs", "repos_url": "https://api.github.com/users/joyeecheung/repos", "events_url": "https://api.github.com/users/joyeecheung/events{/privacy}", "received_events_url": "https://api.github.com/users/joyeecheung/received_events", "type": "User", "user_view_type": "public", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2025-06-18T14:28:31Z", "updated_at": "2025-09-12T11:00:40Z", "closed_at": "2025-09-12T11:00:40Z", "author_association": "MEMBER", "type": {"id": 1190262, "node_id": "IT_kwDOAJfUac4AEil2", "name": "Feature", "description": "A request, idea, or new functionality", "color": "blue", "created_at": "2024-01-25T12:08:34Z", "updated_at": "2024-10-08T09:14:01Z", "is_enabled": true}, "active_lock_reason": null, "sub_issues_summary": {"total": 0, "completed": 0, "percent_completed": 0}, "issue_dependencies_summary": {"blocked_by": 0, "total_blocked_by": 0, "blocking": 0, "total_blocking": 0}, "body": "### What is the problem this feature will solve?\n\nThe built-in compile cache is currently always using absolute paths to decide cache miss/hit, so the cache is not portable.\n\n### What is the feature you are proposing to solve the problem?\n\nSupport an option for the built-in compile cache to encode the hashes with relative paths and use that to decide cache miss/hit, so that after generating the cache in a specified relative directory, the source directory along with the cache directory can be bundled and moved to elsewhere, and continue to work from a different base directory.\n\n\n### What alternatives have you considered?\n\n_No response_\n\nRefs https://github.com/nodejs/node/issues/52696", "reactions": {"url": "https://api.github.com/repos/nodejs/node/issues/58755/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/nodejs/node/issues/58755/timeline", "performed_via_github_app": null, "state_reason": "completed", "score": 1.0}, {"url": "https://api.github.com/repos/nodejs/node/issues/59077", "repository_url": "https://api.github.com/repos/nodejs/node", "labels_url": "https://api.github.com/repos/nodejs/node/issues/59077/labels{/name}", "comments_url": "https://api.github.com/repos/nodejs/node/issues/59077/comments", "events_url": "https://api.github.com/repos/nodejs/node/issues/59077/events", "html_url": "https://github.com/nodejs/node/issues/59077", "id": 3233465334, "node_id": "I_kwDOAZ7xs87AusP2", "number": 59077, "title": "Doc(esm): `import` explaining need to be rephrased", "user": {"login": "AugustinMauroy", "id": 97875033, "node_id": "U_kgDOBdV0WQ", "avatar_url": "https://avatars.githubusercontent.com/u/97875033?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AugustinMauroy", "html_url": "https://github.com/AugustinMauroy", "followers_url": "https://api.github.com/users/AugustinMauroy/followers", "following_url": "https://api.github.com/users/AugustinMauroy/following{/other_user}", "gists_url": "https://api.github.com/users/AugustinMauroy/gists{/gist_id}", "starred_url": "https://api.github.com/users/AugustinMauroy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AugustinMauroy/subscriptions", "organizations_url": "https://api.github.com/users/AugustinMauroy/orgs", "repos_url": "https://api.github.com/users/AugustinMauroy/repos", "events_url": "https://api.github.com/users/AugustinMauroy/events{/privacy}", "received_events_url": "https://api.github.com/users/AugustinMauroy/received_events", "type": "User", "user_view_type": "public", "site_admin": false}, "labels": [{"id": 155267517, "node_id": "MDU6TGFiZWwxNTUyNjc1MTc=", "url": "https://api.github.com/repos/nodejs/node/labels/doc", "name": "doc", "color": "006b75", "default": false, "description": "Issues and PRs related to the documentations."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2025-07-15T19:31:22Z", "updated_at": "2025-09-12T06:40:25Z", "closed_at": "2025-09-12T06:40:25Z", "author_association": "MEMBER", "type": null, "active_lock_reason": null, "sub_issues_summary": {"total": 0, "completed": 0, "percent_completed": 0}, "issue_dependencies_summary": {"blocked_by": 0, "total_blocked_by": 0, "blocking": 0, "total_blocking": 0}, "body": "### Affected URL(s)\n\nhttps://nodejs.org/docs/v22.17.0/api/esm.html#import-expressions\n\n### Description of the problem\n\nSince `require(\"esm\")` the current sentence isn't super right \n\n<img width=\"791\" height=\"146\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/15763ec6-49c6-4f78-80f5-9f38ad941fd4\" />", "reactions": {"url": "https://api.github.com/repos/nodejs/node/issues/59077/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/nodejs/node/issues/59077/timeline", "performed_via_github_app": null, "state_reason": "completed", "score": 1.0}, {"url": "https://api.github.com/repos/nodejs/node/issues/59849", "repository_url": "https://api.github.com/repos/nodejs/node", "labels_url": "https://api.github.com/repos/nodejs/node/issues/59849/labels{/name}", "comments_url": "https://api.github.com/repos/nodejs/node/issues/59849/comments", "events_url": "https://api.github.com/repos/nodejs/node/issues/59849/events", "html_url": "https://github.com/nodejs/node/issues/59849", "id": 3404056199, "node_id": "I_kwDOAZ7xs87K5caH", "number": 59849, "title": "deb.nodesource.com is buggy", "user": {"login": "jelmd", "id": 4813414, "node_id": "MDQ6VXNlcjQ4MTM0MTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4813414?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jelmd", "html_url": "https://github.com/jelmd", "followers_url": "https://api.github.com/users/jelmd/followers", "following_url": "https://api.github.com/users/jelmd/following{/other_user}", "gists_url": "https://api.github.com/users/jelmd/gists{/gist_id}", "starred_url": "https://api.github.com/users/jelmd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jelmd/subscriptions", "organizations_url": "https://api.github.com/users/jelmd/orgs", "repos_url": "https://api.github.com/users/jelmd/repos", "events_url": "https://api.github.com/users/jelmd/events{/privacy}", "received_events_url": "https://api.github.com/users/jelmd/received_events", "type": "User", "user_view_type": "public", "site_admin": false}, "labels": [{"id": 592511284, "node_id": "MDU6TGFiZWw1OTI1MTEyODQ=", "url": "https://api.github.com/repos/nodejs/node/labels/wrong%20repo", "name": "wrong repo", "color": "6a4636", "default": false, "description": "Issues that should be opened in another repository."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2025-09-10T21:52:14Z", "updated_at": "2025-09-11T19:35:56Z", "closed_at": "2025-09-10T23:16:00Z", "author_association": "NONE", "type": null, "active_lock_reason": null, "sub_issues_summary": {"total": 0, "completed": 0, "percent_completed": 0}, "issue_dependencies_summary": {"blocked_by": 0, "total_blocked_by": 0, "blocking": 0, "total_blocking": 0}, "body": "### Version\n\n24.x\n\n### Platform\n\n```text\nDistributor ID:\tUbuntu\nDescription:\tUbuntu 24.04.2 LTS\nRelease:\t24.04\nCodename:\tnoble\n```\n\n### Subsystem\n\n_No response_\n\n### What steps will reproduce the bug?\n\napt-get update\n\n### How often does it reproduce? Is there a required condition?\n\nAlways, since 2+ weeks.\n\n### What is the expected behavior? Why is that the expected behavior?\n\nNo errors on apt-get update, because this is how it should work.\n\n### What do you see instead?\n\n```\n...\nGet:21 http://de.archive.ubuntu.com/ubuntu noble/universe amd64 Packages [15.0 MB]\nGet:22 https://deb.nodesource.com/node_24.x nodistro/main amd64 Packages [3,026 B]\nErr:22 https://deb.nodesource.com/node_24.x nodistro/main amd64 Packages                       \n  File has unexpected size (3219 != 3026). Mirror sync in progress? [IP: 1.2.3.4 80]\n  Hashes of expected file:\n   - Filesize:3026 [weak]\n   - SHA512:f46c72ef045def8f16ca449d10166884607b4f6be93e0c036fe436b3b407542454bd2476f47613415401b7088a037c1e05fa111eecaf6881caf1ea8c2c8b3f93\n   - SHA256:8a787dc1b145f5d588c22215ac494b458a91361b718c38dd73916c499cc18a61\n   - SHA1:da454c28e286d90936fc3585b436d3be14d15ce3 [weak]\n   - MD5Sum:fd54ce3dcce095ad6e9899e063b7c349 [weak]\n  Release file created at: Thu, 28 Aug 2025 11:48:33 +0000\n...\nReading package lists... Done\nE: Failed to fetch https://deb.nodesource.com/node_24.x/dists/nodistro/main/binary-amd64/Packages.bz2  File has unexpected size (3219 != 3026). Mirror sync in progress? [IP: 1.2.3.4 80]\n   Hashes of expected file:\n    - Filesize:3026 [weak]\n    - SHA512:f46c72ef045def8f16ca449d10166884607b4f6be93e0c036fe436b3b407542454bd2476f47613415401b7088a037c1e05fa111eecaf6881caf1ea8c2c8b3f93\n    - SHA256:8a787dc1b145f5d588c22215ac494b458a91361b718c38dd73916c499cc18a61\n    - SHA1:da454c28e286d90936fc3585b436d3be14d15ce3 [weak]\n    - MD5Sum:fd54ce3dcce095ad6e9899e063b7c349 [weak]\n   Release file created at: Thu, 28 Aug 2025 11:48:33 +0000\nE: Some index files failed to download. They have been ignored, or old ones used instead.\n+ return 100\n```\n\n\n### Additional information\n\nScript automatically installing nodejs fail because of bad repo contents. It should be fixed immediately.", "reactions": {"url": "https://api.github.com/repos/nodejs/node/issues/59849/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/nodejs/node/issues/59849/timeline", "performed_via_github_app": null, "state_reason": "not_planned", "score": 1.0}]}